
// ** Expanded prelude

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Basic theory for vectors using arrays. This version of vectors is not extensional.

datatype Vec<T> {
    Vec(v: [int]T, l: int)
}

function {:builtin "MapConst"} MapConstVec<T>(T): [int]T;
function DefaultVecElem<T>(): T;
function {:inline} DefaultVecMap<T>(): [int]T { MapConstVec(DefaultVecElem()) }

function {:inline} EmptyVec<T>(): Vec T {
    Vec(DefaultVecMap(), 0)
}

function {:inline} MakeVec1<T>(v: T): Vec T {
    Vec(DefaultVecMap()[0 := v], 1)
}

function {:inline} MakeVec2<T>(v1: T, v2: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2], 2)
}

function {:inline} MakeVec3<T>(v1: T, v2: T, v3: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3], 3)
}

function {:inline} MakeVec4<T>(v1: T, v2: T, v3: T, v4: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3][3 := v4], 4)
}

function {:inline} ExtendVec<T>(v: Vec T, elem: T): Vec T {
    (var l := v->l;
    Vec(v->v[l := elem], l + 1))
}

function {:inline} ReadVec<T>(v: Vec T, i: int): T {
    v->v[i]
}

function {:inline} LenVec<T>(v: Vec T): int {
    v->l
}

function {:inline} IsEmptyVec<T>(v: Vec T): bool {
    v->l == 0
}

function {:inline} RemoveVec<T>(v: Vec T): Vec T {
    (var l := v->l - 1;
    Vec(v->v[l := DefaultVecElem()], l))
}

function {:inline} RemoveAtVec<T>(v: Vec T, i: int): Vec T {
    (var l := v->l - 1;
    Vec(
        (lambda j: int ::
           if j >= 0 && j < l then
               if j < i then v->v[j] else v->v[j+1]
           else DefaultVecElem()),
        l))
}

function {:inline} ConcatVec<T>(v1: Vec T, v2: Vec T): Vec T {
    (var l1, m1, l2, m2 := v1->l, v1->v, v2->l, v2->v;
    Vec(
        (lambda i: int ::
          if i >= 0 && i < l1 + l2 then
            if i < l1 then m1[i] else m2[i - l1]
          else DefaultVecElem()),
        l1 + l2))
}

function {:inline} ReverseVec<T>(v: Vec T): Vec T {
    (var l := v->l;
    Vec(
        (lambda i: int :: if 0 <= i && i < l then v->v[l - i - 1] else DefaultVecElem()),
        l))
}

function {:inline} SliceVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(
        (lambda k:int ::
          if 0 <= k && k < j - i then
            m[i + k]
          else
            DefaultVecElem()),
        (if j - i < 0 then 0 else j - i)))
}


function {:inline} UpdateVec<T>(v: Vec T, i: int, elem: T): Vec T {
    Vec(v->v[i := elem], v->l)
}

function {:inline} SwapVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(m[i := m[j]][j := m[i]], v->l))
}

function {:inline} ContainsVec<T>(v: Vec T, e: T): bool {
    (var l := v->l;
    (exists i: int :: InRangeVec(v, i) && v->v[i] == e))
}

function IndexOfVec<T>(v: Vec T, e: T): int;
axiom {:ctor "Vec"} (forall<T> v: Vec T, e: T :: {IndexOfVec(v, e)}
    (var i := IndexOfVec(v,e);
     if (!ContainsVec(v, e)) then i == -1
     else InRangeVec(v, i) && ReadVec(v, i) == e &&
        (forall j: int :: j >= 0 && j < i ==> ReadVec(v, j) != e)));

// This function should stay non-inlined as it guards many quantifiers
// over vectors. It appears important to have this uninterpreted for
// quantifier triggering.
function InRangeVec<T>(v: Vec T, i: int): bool {
    i >= 0 && i < LenVec(v)
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Boogie model for multisets, based on Boogie arrays. This theory assumes extensional equality for element types.

datatype Multiset<T> {
    Multiset(v: [T]int, l: int)
}

function {:builtin "MapConst"} MapConstMultiset<T>(l: int): [T]int;

function {:inline} EmptyMultiset<T>(): Multiset T {
    Multiset(MapConstMultiset(0), 0)
}

function {:inline} LenMultiset<T>(s: Multiset T): int {
    s->l
}

function {:inline} ExtendMultiset<T>(s: Multiset T, v: T): Multiset T {
    (var len := s->l;
    (var cnt := s->v[v];
    Multiset(s->v[v := (cnt + 1)], len + 1)))
}

// This function returns (s1 - s2). This function assumes that s2 is a subset of s1.
function {:inline} SubtractMultiset<T>(s1: Multiset T, s2: Multiset T): Multiset T {
    (var len1 := s1->l;
    (var len2 := s2->l;
    Multiset((lambda v:T :: s1->v[v]-s2->v[v]), len1-len2)))
}

function {:inline} IsEmptyMultiset<T>(s: Multiset T): bool {
    (s->l == 0) &&
    (forall v: T :: s->v[v] == 0)
}

function {:inline} IsSubsetMultiset<T>(s1: Multiset T, s2: Multiset T): bool {
    (s1->l <= s2->l) &&
    (forall v: T :: s1->v[v] <= s2->v[v])
}

function {:inline} ContainsMultiset<T>(s: Multiset T, v: T): bool {
    s->v[v] > 0
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Theory for tables.

// v is the SMT array holding the key-value assignment. e is an array which
// independently determines whether a key is valid or not. l is the length.
//
// Note that even though the program cannot reflect over existence of a key,
// we want the specification to be able to do this, so it can express
// verification conditions like "key has been inserted".
datatype Table <K, V> {
    Table(v: [K]V, e: [K]bool, l: int)
}

// Functions for default SMT arrays. For the table values, we don't care and
// use an uninterpreted function.
function DefaultTableArray<K, V>(): [K]V;
function DefaultTableKeyExistsArray<K>(): [K]bool;
axiom DefaultTableKeyExistsArray() == (lambda i: int :: false);

function {:inline} EmptyTable<K, V>(): Table K V {
    Table(DefaultTableArray(), DefaultTableKeyExistsArray(), 0)
}

function {:inline} GetTable<K,V>(t: Table K V, k: K): V {
    // Notice we do not check whether key is in the table. The result is undetermined if it is not.
    t->v[k]
}

function {:inline} LenTable<K,V>(t: Table K V): int {
    t->l
}


function {:inline} ContainsTable<K,V>(t: Table K V, k: K): bool {
    t->e[k]
}

function {:inline} UpdateTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    Table(t->v[k := v], t->e, t->l)
}

function {:inline} AddTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    // This function has an undetermined result if the key is already in the table
    // (all specification functions have this "partial definiteness" behavior). Thus we can
    // just increment the length.
    Table(t->v[k := v], t->e[k := true], t->l + 1)
}

function {:inline} RemoveTable<K,V>(t: Table K V, k: K): Table K V {
    // Similar as above, we only need to consider the case where the key is in the table.
    Table(t->v, t->e[k := false], t->l - 1)
}

axiom {:ctor "Table"} (forall<K,V> t: Table K V :: {LenTable(t)}
    (exists k: K :: {ContainsTable(t, k)} ContainsTable(t, k)) ==> LenTable(t) >= 1
);
// TODO: we might want to encoder a stronger property that the length of table
// must be more than N given a set of N items. Currently we don't see a need here
// and the above axiom seems to be sufficient.
// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

// ==================================================================================
// Native object::exists_at// ----------------------------------------------------------------------------------
// Native Object::exists_at for element type `$4_collection_Collection`

procedure {:inline 1} $1_object_exists_at'$4_collection_Collection'(object: int) returns (res: bool) {
    res := $ResourceExists($4_collection_Collection_$memory, object);
}// ----------------------------------------------------------------------------------
// Native Object::exists_at for element type `$4_token_Token`

procedure {:inline 1} $1_object_exists_at'$4_token_Token'(object: int) returns (res: bool) {
    res := $ResourceExists($4_token_Token_$memory, object);
}

// ==================================================================================
// Intrinsic implementation of aggregator and aggregator factory

datatype $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle: int, $key: int, $limit: int, $val: int)
}
function {:inline} $Update'$1_aggregator_Aggregator'_handle(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(x, s->$key, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_key(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, x, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_limit(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, x, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_val(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, s->$limit, x)
}
function $IsValid'$1_aggregator_Aggregator'(s: $1_aggregator_Aggregator): bool {
    $IsValid'address'(s->$handle)
      && $IsValid'address'(s->$key)
      && $IsValid'u128'(s->$limit)
      && $IsValid'u128'(s->$val)
}
function {:inline} $IsEqual'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): bool {
    s1 == s2
}
function {:inline} $1_aggregator_spec_get_limit(s: $1_aggregator_Aggregator): int {
    s->$limit
}
function {:inline} $1_aggregator_spec_get_handle(s: $1_aggregator_Aggregator): int {
    s->$handle
}
function {:inline} $1_aggregator_spec_get_key(s: $1_aggregator_Aggregator): int {
    s->$key
}
function {:inline} $1_aggregator_spec_get_val(s: $1_aggregator_Aggregator): int {
    s->$val
}

function $1_aggregator_spec_read(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_spec_aggregator_set_val(agg: $1_aggregator_Aggregator, val: int): $1_aggregator_Aggregator {
    $Update'$1_aggregator_Aggregator'_val(agg, val)
}

function $1_aggregator_spec_aggregator_get_val(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_factory_spec_new_aggregator(limit: int) : $1_aggregator_Aggregator;

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
    (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_get_limit(agg) == limit));

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
     (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_aggregator_get_val(agg) == 0));


// ============================================================================================
// Primitive Types

const $MAX_U8: int;
axiom $MAX_U8 == 255;
const $MAX_U16: int;
axiom $MAX_U16 == 65535;
const $MAX_U32: int;
axiom $MAX_U32 == 4294967295;
const $MAX_U64: int;
axiom $MAX_U64 == 18446744073709551615;
const $MAX_U128: int;
axiom $MAX_U128 == 340282366920938463463374607431768211455;
const $MAX_U256: int;
axiom $MAX_U256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935;

// Templates for bitvector operations

function {:bvbuiltin "bvand"} $And'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvor"} $Or'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvxor"} $Xor'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvadd"} $Add'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvsub"} $Sub'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvmul"} $Mul'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvudiv"} $Div'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvurem"} $Mod'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvshl"} $Shl'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvlshr"} $Shr'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvult"} $Lt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv8'(bv8,bv8) returns(bool);

procedure {:inline 1} $AddBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Add'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $AddBv8_unchecked(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $SubBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv8'(src1, src2);
}

procedure {:inline 1} $MulBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Mul'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv8'(src1, src2);
}

procedure {:inline 1} $DivBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv8'(src1, src2);
}

procedure {:inline 1} $ModBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv8'(src1, src2);
}

procedure {:inline 1} $AndBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $And'Bv8'(src1,src2);
}

procedure {:inline 1} $OrBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Or'Bv8'(src1,src2);
}

procedure {:inline 1} $XorBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Xor'Bv8'(src1,src2);
}

procedure {:inline 1} $LtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Lt'Bv8'(src1,src2);
}

procedure {:inline 1} $LeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Le'Bv8'(src1,src2);
}

procedure {:inline 1} $GtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Gt'Bv8'(src1,src2);
}

procedure {:inline 1} $GeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Ge'Bv8'(src1,src2);
}

function $IsValid'bv8'(v: bv8): bool {
  $Ge'Bv8'(v,0bv8) && $Le'Bv8'(v,255bv8)
}

function {:inline} $IsEqual'bv8'(x: bv8, y: bv8): bool {
    x == y
}

procedure {:inline 1} $int2bv8(src: int) returns (dst: bv8)
{
    if (src > 255) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.8(src);
}

procedure {:inline 1} $bv2int8(src: bv8) returns (dst: int)
{
    dst := $bv2int.8(src);
}

function {:builtin "(_ int2bv 8)"} $int2bv.8(i: int) returns (bv8);
function {:builtin "bv2nat"} $bv2int.8(i: bv8) returns (int);

function {:bvbuiltin "bvand"} $And'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvor"} $Or'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvxor"} $Xor'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvadd"} $Add'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvsub"} $Sub'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvmul"} $Mul'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvudiv"} $Div'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvurem"} $Mod'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvshl"} $Shl'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvlshr"} $Shr'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvult"} $Lt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv16'(bv16,bv16) returns(bool);

procedure {:inline 1} $AddBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Add'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $AddBv16_unchecked(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $SubBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv16'(src1, src2);
}

procedure {:inline 1} $MulBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Mul'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv16'(src1, src2);
}

procedure {:inline 1} $DivBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv16'(src1, src2);
}

procedure {:inline 1} $ModBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv16'(src1, src2);
}

procedure {:inline 1} $AndBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $And'Bv16'(src1,src2);
}

procedure {:inline 1} $OrBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Or'Bv16'(src1,src2);
}

procedure {:inline 1} $XorBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Xor'Bv16'(src1,src2);
}

procedure {:inline 1} $LtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Lt'Bv16'(src1,src2);
}

procedure {:inline 1} $LeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Le'Bv16'(src1,src2);
}

procedure {:inline 1} $GtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Gt'Bv16'(src1,src2);
}

procedure {:inline 1} $GeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Ge'Bv16'(src1,src2);
}

function $IsValid'bv16'(v: bv16): bool {
  $Ge'Bv16'(v,0bv16) && $Le'Bv16'(v,65535bv16)
}

function {:inline} $IsEqual'bv16'(x: bv16, y: bv16): bool {
    x == y
}

procedure {:inline 1} $int2bv16(src: int) returns (dst: bv16)
{
    if (src > 65535) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.16(src);
}

procedure {:inline 1} $bv2int16(src: bv16) returns (dst: int)
{
    dst := $bv2int.16(src);
}

function {:builtin "(_ int2bv 16)"} $int2bv.16(i: int) returns (bv16);
function {:builtin "bv2nat"} $bv2int.16(i: bv16) returns (int);

function {:bvbuiltin "bvand"} $And'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvor"} $Or'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvxor"} $Xor'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvadd"} $Add'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvsub"} $Sub'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvmul"} $Mul'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvudiv"} $Div'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvurem"} $Mod'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvshl"} $Shl'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvlshr"} $Shr'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvult"} $Lt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv32'(bv32,bv32) returns(bool);

procedure {:inline 1} $AddBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Add'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $AddBv32_unchecked(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $SubBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv32'(src1, src2);
}

procedure {:inline 1} $MulBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Mul'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv32'(src1, src2);
}

procedure {:inline 1} $DivBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv32'(src1, src2);
}

procedure {:inline 1} $ModBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv32'(src1, src2);
}

procedure {:inline 1} $AndBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $And'Bv32'(src1,src2);
}

procedure {:inline 1} $OrBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Or'Bv32'(src1,src2);
}

procedure {:inline 1} $XorBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Xor'Bv32'(src1,src2);
}

procedure {:inline 1} $LtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Lt'Bv32'(src1,src2);
}

procedure {:inline 1} $LeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Le'Bv32'(src1,src2);
}

procedure {:inline 1} $GtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Gt'Bv32'(src1,src2);
}

procedure {:inline 1} $GeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Ge'Bv32'(src1,src2);
}

function $IsValid'bv32'(v: bv32): bool {
  $Ge'Bv32'(v,0bv32) && $Le'Bv32'(v,2147483647bv32)
}

function {:inline} $IsEqual'bv32'(x: bv32, y: bv32): bool {
    x == y
}

procedure {:inline 1} $int2bv32(src: int) returns (dst: bv32)
{
    if (src > 2147483647) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.32(src);
}

procedure {:inline 1} $bv2int32(src: bv32) returns (dst: int)
{
    dst := $bv2int.32(src);
}

function {:builtin "(_ int2bv 32)"} $int2bv.32(i: int) returns (bv32);
function {:builtin "bv2nat"} $bv2int.32(i: bv32) returns (int);

function {:bvbuiltin "bvand"} $And'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvor"} $Or'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvxor"} $Xor'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvadd"} $Add'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsub"} $Sub'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvmul"} $Mul'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvudiv"} $Div'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvurem"} $Mod'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvshl"} $Shl'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvlshr"} $Shr'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvult"} $Lt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv64'(bv64,bv64) returns(bool);

procedure {:inline 1} $AddBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Add'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $AddBv64_unchecked(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $SubBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv64'(src1, src2);
}

procedure {:inline 1} $MulBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Mul'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv64'(src1, src2);
}

procedure {:inline 1} $DivBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv64'(src1, src2);
}

procedure {:inline 1} $ModBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv64'(src1, src2);
}

procedure {:inline 1} $AndBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $And'Bv64'(src1,src2);
}

procedure {:inline 1} $OrBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Or'Bv64'(src1,src2);
}

procedure {:inline 1} $XorBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Xor'Bv64'(src1,src2);
}

procedure {:inline 1} $LtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Lt'Bv64'(src1,src2);
}

procedure {:inline 1} $LeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Le'Bv64'(src1,src2);
}

procedure {:inline 1} $GtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Gt'Bv64'(src1,src2);
}

procedure {:inline 1} $GeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Ge'Bv64'(src1,src2);
}

function $IsValid'bv64'(v: bv64): bool {
  $Ge'Bv64'(v,0bv64) && $Le'Bv64'(v,18446744073709551615bv64)
}

function {:inline} $IsEqual'bv64'(x: bv64, y: bv64): bool {
    x == y
}

procedure {:inline 1} $int2bv64(src: int) returns (dst: bv64)
{
    if (src > 18446744073709551615) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.64(src);
}

procedure {:inline 1} $bv2int64(src: bv64) returns (dst: int)
{
    dst := $bv2int.64(src);
}

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: int) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (int);

function {:bvbuiltin "bvand"} $And'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvor"} $Or'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvxor"} $Xor'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvadd"} $Add'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvsub"} $Sub'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvmul"} $Mul'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvudiv"} $Div'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvurem"} $Mod'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvshl"} $Shl'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvlshr"} $Shr'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvult"} $Lt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv128'(bv128,bv128) returns(bool);

procedure {:inline 1} $AddBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Add'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $AddBv128_unchecked(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $SubBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv128'(src1, src2);
}

procedure {:inline 1} $MulBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Mul'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv128'(src1, src2);
}

procedure {:inline 1} $DivBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv128'(src1, src2);
}

procedure {:inline 1} $ModBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv128'(src1, src2);
}

procedure {:inline 1} $AndBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $And'Bv128'(src1,src2);
}

procedure {:inline 1} $OrBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Or'Bv128'(src1,src2);
}

procedure {:inline 1} $XorBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Xor'Bv128'(src1,src2);
}

procedure {:inline 1} $LtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Lt'Bv128'(src1,src2);
}

procedure {:inline 1} $LeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Le'Bv128'(src1,src2);
}

procedure {:inline 1} $GtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Gt'Bv128'(src1,src2);
}

procedure {:inline 1} $GeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Ge'Bv128'(src1,src2);
}

function $IsValid'bv128'(v: bv128): bool {
  $Ge'Bv128'(v,0bv128) && $Le'Bv128'(v,340282366920938463463374607431768211455bv128)
}

function {:inline} $IsEqual'bv128'(x: bv128, y: bv128): bool {
    x == y
}

procedure {:inline 1} $int2bv128(src: int) returns (dst: bv128)
{
    if (src > 340282366920938463463374607431768211455) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.128(src);
}

procedure {:inline 1} $bv2int128(src: bv128) returns (dst: int)
{
    dst := $bv2int.128(src);
}

function {:builtin "(_ int2bv 128)"} $int2bv.128(i: int) returns (bv128);
function {:builtin "bv2nat"} $bv2int.128(i: bv128) returns (int);

function {:bvbuiltin "bvand"} $And'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvor"} $Or'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvxor"} $Xor'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvadd"} $Add'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvsub"} $Sub'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvmul"} $Mul'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvudiv"} $Div'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvurem"} $Mod'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvshl"} $Shl'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvlshr"} $Shr'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvult"} $Lt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv256'(bv256,bv256) returns(bool);

procedure {:inline 1} $AddBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Add'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $AddBv256_unchecked(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $SubBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv256'(src1, src2);
}

procedure {:inline 1} $MulBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Mul'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv256'(src1, src2);
}

procedure {:inline 1} $DivBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv256'(src1, src2);
}

procedure {:inline 1} $ModBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv256'(src1, src2);
}

procedure {:inline 1} $AndBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $And'Bv256'(src1,src2);
}

procedure {:inline 1} $OrBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Or'Bv256'(src1,src2);
}

procedure {:inline 1} $XorBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Xor'Bv256'(src1,src2);
}

procedure {:inline 1} $LtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Lt'Bv256'(src1,src2);
}

procedure {:inline 1} $LeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Le'Bv256'(src1,src2);
}

procedure {:inline 1} $GtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Gt'Bv256'(src1,src2);
}

procedure {:inline 1} $GeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Ge'Bv256'(src1,src2);
}

function $IsValid'bv256'(v: bv256): bool {
  $Ge'Bv256'(v,0bv256) && $Le'Bv256'(v,115792089237316195423570985008687907853269984665640564039457584007913129639935bv256)
}

function {:inline} $IsEqual'bv256'(x: bv256, y: bv256): bool {
    x == y
}

procedure {:inline 1} $int2bv256(src: int) returns (dst: bv256)
{
    if (src > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.256(src);
}

procedure {:inline 1} $bv2int256(src: bv256) returns (dst: int)
{
    dst := $bv2int.256(src);
}

function {:builtin "(_ int2bv 256)"} $int2bv.256(i: int) returns (bv256);
function {:builtin "bv2nat"} $bv2int.256(i: bv256) returns (int);

datatype $Range {
    $Range(lb: int, ub: int)
}

function {:inline} $IsValid'bool'(v: bool): bool {
  true
}

function $IsValid'u8'(v: int): bool {
  v >= 0 && v <= $MAX_U8
}

function $IsValid'u16'(v: int): bool {
  v >= 0 && v <= $MAX_U16
}

function $IsValid'u32'(v: int): bool {
  v >= 0 && v <= $MAX_U32
}

function $IsValid'u64'(v: int): bool {
  v >= 0 && v <= $MAX_U64
}

function $IsValid'u128'(v: int): bool {
  v >= 0 && v <= $MAX_U128
}

function $IsValid'u256'(v: int): bool {
  v >= 0 && v <= $MAX_U256
}

function $IsValid'num'(v: int): bool {
  true
}

function $IsValid'address'(v: int): bool {
  // TODO: restrict max to representable addresses?
  v >= 0
}

function {:inline} $IsValidRange(r: $Range): bool {
   $IsValid'u64'(r->lb) &&  $IsValid'u64'(r->ub)
}

// Intentionally not inlined so it serves as a trigger in quantifiers.
function $InRange(r: $Range, i: int): bool {
   r->lb <= i && i < r->ub
}


function {:inline} $IsEqual'u8'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u16'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u32'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u64'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u128'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u256'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'num'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'address'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'bool'(x: bool, y: bool): bool {
    x == y
}

// ============================================================================================
// Memory

datatype $Location {
    // A global resource location within the statically known resource type's memory,
    // where `a` is an address.
    $Global(a: int),
    // A local location. `i` is the unique index of the local.
    $Local(i: int),
    // The location of a reference outside of the verification scope, for example, a `&mut` parameter
    // of the function being verified. References with these locations don't need to be written back
    // when mutation ends.
    $Param(i: int),
    // The location of an uninitialized mutation. Using this to make sure that the location
    // will not be equal to any valid mutation locations, i.e., $Local, $Global, or $Param.
    $Uninitialized()
}

// A mutable reference which also carries its current value. Since mutable references
// are single threaded in Move, we can keep them together and treat them as a value
// during mutation until the point they are stored back to their original location.
datatype $Mutation<T> {
    $Mutation(l: $Location, p: Vec int, v: T)
}

// Representation of memory for a given type.
datatype $Memory<T> {
    $Memory(domain: [int]bool, contents: [int]T)
}

function {:builtin "MapConst"} $ConstMemoryDomain(v: bool): [int]bool;
function {:builtin "MapConst"} $ConstMemoryContent<T>(v: T): [int]T;
axiom $ConstMemoryDomain(false) == (lambda i: int :: false);
axiom $ConstMemoryDomain(true) == (lambda i: int :: true);


// Dereferences a mutation.
function {:inline} $Dereference<T>(ref: $Mutation T): T {
    ref->v
}

// Update the value of a mutation.
function {:inline} $UpdateMutation<T>(m: $Mutation T, v: T): $Mutation T {
    $Mutation(m->l, m->p, v)
}

function {:inline} $ChildMutation<T1, T2>(m: $Mutation T1, offset: int, v: T2): $Mutation T2 {
    $Mutation(m->l, ExtendVec(m->p, offset), v)
}

// Return true if two mutations share the location and path
function {:inline} $IsSameMutation<T1, T2>(parent: $Mutation T1, child: $Mutation T2 ): bool {
    parent->l == child->l && parent->p == child->p
}

// Return true if the mutation is a parent of a child which was derived with the given edge offset. This
// is used to implement write-back choices.
function {:inline} $IsParentMutation<T1, T2>(parent: $Mutation T1, edge: int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
     cl == pl + 1 &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) ==  ReadVec(cp, i)) &&
     $EdgeMatches(ReadVec(cp, pl), edge)
    ))))
}

// Return true if the mutation is a parent of a child, for hyper edge.
function {:inline} $IsParentMutationHyper<T1, T2>(parent: $Mutation T1, hyper_edge: Vec int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
    (var el := LenVec(hyper_edge);
     cl == pl + el &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) == ReadVec(cp, i)) &&
     (forall i: int:: i >= 0 && i < el ==> $EdgeMatches(ReadVec(cp, pl + i), ReadVec(hyper_edge, i)))
    )))))
}

function {:inline} $EdgeMatches(edge: int, edge_pattern: int): bool {
    edge_pattern == -1 // wildcard
    || edge_pattern == edge
}



function {:inline} $SameLocation<T1, T2>(m1: $Mutation T1, m2: $Mutation T2): bool {
    m1->l == m2->l
}

function {:inline} $HasGlobalLocation<T>(m: $Mutation T): bool {
    (m->l) is $Global
}

function {:inline} $HasLocalLocation<T>(m: $Mutation T, idx: int): bool {
    m->l == $Local(idx)
}

function {:inline} $GlobalLocationAddress<T>(m: $Mutation T): int {
    (m->l)->a
}



// Tests whether resource exists.
function {:inline} $ResourceExists<T>(m: $Memory T, addr: int): bool {
    m->domain[addr]
}

// Obtains Value of given resource.
function {:inline} $ResourceValue<T>(m: $Memory T, addr: int): T {
    m->contents[addr]
}

// Update resource.
function {:inline} $ResourceUpdate<T>(m: $Memory T, a: int, v: T): $Memory T {
    $Memory(m->domain[a := true], m->contents[a := v])
}

// Remove resource.
function {:inline} $ResourceRemove<T>(m: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := false], m->contents)
}

// Copies resource from memory s to m.
function {:inline} $ResourceCopy<T>(m: $Memory T, s: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := s->domain[a]],
            m->contents[a := s->contents[a]])
}



// ============================================================================================
// Abort Handling

var $abort_flag: bool;
var $abort_code: int;

function {:inline} $process_abort_code(code: int): int {
    code
}

const $EXEC_FAILURE_CODE: int;
axiom $EXEC_FAILURE_CODE == -1;

// TODO(wrwg): currently we map aborts of native functions like those for vectors also to
//   execution failure. This may need to be aligned with what the runtime actually does.

procedure {:inline 1} $ExecFailureAbort() {
    $abort_flag := true;
    $abort_code := $EXEC_FAILURE_CODE;
}

procedure {:inline 1} $Abort(code: int) {
    $abort_flag := true;
    $abort_code := code;
}

function {:inline} $StdError(cat: int, reason: int): int {
    reason * 256 + cat
}

procedure {:inline 1} $InitVerification() {
    // Set abort_flag to false, and havoc abort_code
    $abort_flag := false;
    havoc $abort_code;
    // Initialize event store
    call $InitEventStore();
}

// ============================================================================================
// Instructions


procedure {:inline 1} $CastU8(src: int) returns (dst: int)
{
    if (src > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU16(src: int) returns (dst: int)
{
    if (src > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU32(src: int) returns (dst: int)
{
    if (src > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU64(src: int) returns (dst: int)
{
    if (src > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU128(src: int) returns (dst: int)
{
    if (src > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU256(src: int) returns (dst: int)
{
    if (src > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $AddU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $Sub(src1: int, src2: int) returns (dst: int)
{
    if (src1 < src2) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 - src2;
}

// uninterpreted function to return an undefined value.
function $undefined_int(): int;

// Recursive exponentiation function
// Undefined unless e >=0.  $pow(0,0) is also undefined.
function $pow(n: int, e: int): int {
    if n != 0 && e == 0 then 1
    else if e > 0 then n * $pow(n, e - 1)
    else $undefined_int()
}

function $shl(src1: int, p: int): int {
    src1 * $pow(2, p)
}

function $shlU8(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 256
}

function $shlU16(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 65536
}

function $shlU32(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 4294967296
}

function $shlU64(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 18446744073709551616
}

function $shlU128(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 340282366920938463463374607431768211456
}

function $shlU256(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 115792089237316195423570985008687907853269984665640564039457584007913129639936
}

function $shr(src1: int, p: int): int {
    src1 div $pow(2, p)
}

// We need to know the size of the destination in order to drop bits
// that have been shifted left more than that, so we have $ShlU8/16/32/64/128/256
procedure {:inline 1} $ShlU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU8(src1, src2);
}

// Template for cast and shift operations of bitvector types

procedure {:inline 1} $CastBv8to8(src: bv8) returns (dst: bv8)
{
    dst := src;
}


function $shlBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shl'Bv8'(src1, src2)
}

procedure {:inline 1} $ShlBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2);
}

function $shrBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shr'Bv8'(src1, src2)
}

procedure {:inline 1} $ShrBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2);
}

procedure {:inline 1} $CastBv16to8(src: bv16) returns (dst: bv8)
{
    if ($Gt'Bv16'(src, 255bv16)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv32to8(src: bv32) returns (dst: bv8)
{
    if ($Gt'Bv32'(src, 255bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv64to8(src: bv64) returns (dst: bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv128to8(src: bv128) returns (dst: bv8)
{
    if ($Gt'Bv128'(src, 255bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv256to8(src: bv256) returns (dst: bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv8to16(src: bv8) returns (dst: bv16)
{
    dst := 0bv8 ++ src;
}


function $shlBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shl'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShlBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, 0bv8 ++ src2);
}

function $shrBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shr'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShrBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, 0bv8 ++ src2);
}

procedure {:inline 1} $CastBv16to16(src: bv16) returns (dst: bv16)
{
    dst := src;
}


function $shlBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shl'Bv16'(src1, src2)
}

procedure {:inline 1} $ShlBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2);
}

function $shrBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shr'Bv16'(src1, src2)
}

procedure {:inline 1} $ShrBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2);
}

procedure {:inline 1} $CastBv32to16(src: bv32) returns (dst: bv16)
{
    if ($Gt'Bv32'(src, 65535bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv64to16(src: bv64) returns (dst: bv16)
{
    if ($Gt'Bv64'(src, 65535bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv128to16(src: bv128) returns (dst: bv16)
{
    if ($Gt'Bv128'(src, 65535bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv256to16(src: bv256) returns (dst: bv16)
{
    if ($Gt'Bv256'(src, 65535bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv8to32(src: bv8) returns (dst: bv32)
{
    dst := 0bv24 ++ src;
}


function $shlBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShlBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv24 ++ src2);
}

function $shrBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShrBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv24 ++ src2);
}

procedure {:inline 1} $CastBv16to32(src: bv16) returns (dst: bv32)
{
    dst := 0bv16 ++ src;
}


function $shlBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShlBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv16 ++ src2);
}

function $shrBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShrBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv16 ++ src2);
}

procedure {:inline 1} $CastBv32to32(src: bv32) returns (dst: bv32)
{
    dst := src;
}


function $shlBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shl'Bv32'(src1, src2)
}

procedure {:inline 1} $ShlBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2);
}

function $shrBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shr'Bv32'(src1, src2)
}

procedure {:inline 1} $ShrBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2);
}

procedure {:inline 1} $CastBv64to32(src: bv64) returns (dst: bv32)
{
    if ($Gt'Bv64'(src, 2147483647bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv128to32(src: bv128) returns (dst: bv32)
{
    if ($Gt'Bv128'(src, 2147483647bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv256to32(src: bv256) returns (dst: bv32)
{
    if ($Gt'Bv256'(src, 2147483647bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv8to64(src: bv8) returns (dst: bv64)
{
    dst := 0bv56 ++ src;
}


function $shlBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShlBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv56 ++ src2);
}

function $shrBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShrBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv56 ++ src2);
}

procedure {:inline 1} $CastBv16to64(src: bv16) returns (dst: bv64)
{
    dst := 0bv48 ++ src;
}


function $shlBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShlBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv48 ++ src2);
}

function $shrBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShrBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv48 ++ src2);
}

procedure {:inline 1} $CastBv32to64(src: bv32) returns (dst: bv64)
{
    dst := 0bv32 ++ src;
}


function $shlBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShlBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv32 ++ src2);
}

function $shrBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShrBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv32 ++ src2);
}

procedure {:inline 1} $CastBv64to64(src: bv64) returns (dst: bv64)
{
    dst := src;
}


function $shlBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shl'Bv64'(src1, src2)
}

procedure {:inline 1} $ShlBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2);
}

function $shrBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shr'Bv64'(src1, src2)
}

procedure {:inline 1} $ShrBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2);
}

procedure {:inline 1} $CastBv128to64(src: bv128) returns (dst: bv64)
{
    if ($Gt'Bv128'(src, 18446744073709551615bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv256to64(src: bv256) returns (dst: bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv8to128(src: bv8) returns (dst: bv128)
{
    dst := 0bv120 ++ src;
}


function $shlBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShlBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv120 ++ src2);
}

function $shrBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShrBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv120 ++ src2);
}

procedure {:inline 1} $CastBv16to128(src: bv16) returns (dst: bv128)
{
    dst := 0bv112 ++ src;
}


function $shlBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShlBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv112 ++ src2);
}

function $shrBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShrBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv112 ++ src2);
}

procedure {:inline 1} $CastBv32to128(src: bv32) returns (dst: bv128)
{
    dst := 0bv96 ++ src;
}


function $shlBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShlBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv96 ++ src2);
}

function $shrBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShrBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv96 ++ src2);
}

procedure {:inline 1} $CastBv64to128(src: bv64) returns (dst: bv128)
{
    dst := 0bv64 ++ src;
}


function $shlBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShlBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv64 ++ src2);
}

function $shrBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShrBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv64 ++ src2);
}

procedure {:inline 1} $CastBv128to128(src: bv128) returns (dst: bv128)
{
    dst := src;
}


function $shlBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shl'Bv128'(src1, src2)
}

procedure {:inline 1} $ShlBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2);
}

function $shrBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shr'Bv128'(src1, src2)
}

procedure {:inline 1} $ShrBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2);
}

procedure {:inline 1} $CastBv256to128(src: bv256) returns (dst: bv128)
{
    if ($Gt'Bv256'(src, 340282366920938463463374607431768211455bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[128:0];
}


function $shlBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shl'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShlBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2[128:0]);
}

function $shrBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shr'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShrBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2[128:0]);
}

procedure {:inline 1} $CastBv8to256(src: bv8) returns (dst: bv256)
{
    dst := 0bv248 ++ src;
}


function $shlBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShlBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv248 ++ src2);
}

function $shrBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShrBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv248 ++ src2);
}

procedure {:inline 1} $CastBv16to256(src: bv16) returns (dst: bv256)
{
    dst := 0bv240 ++ src;
}


function $shlBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShlBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv240 ++ src2);
}

function $shrBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShrBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv240 ++ src2);
}

procedure {:inline 1} $CastBv32to256(src: bv32) returns (dst: bv256)
{
    dst := 0bv224 ++ src;
}


function $shlBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShlBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv224 ++ src2);
}

function $shrBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShrBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv224 ++ src2);
}

procedure {:inline 1} $CastBv64to256(src: bv64) returns (dst: bv256)
{
    dst := 0bv192 ++ src;
}


function $shlBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShlBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv192 ++ src2);
}

function $shrBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShrBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv192 ++ src2);
}

procedure {:inline 1} $CastBv128to256(src: bv128) returns (dst: bv256)
{
    dst := 0bv128 ++ src;
}


function $shlBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShlBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv128 ++ src2);
}

function $shrBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShrBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv128 ++ src2);
}

procedure {:inline 1} $CastBv256to256(src: bv256) returns (dst: bv256)
{
    dst := src;
}


function $shlBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shl'Bv256'(src1, src2)
}

procedure {:inline 1} $ShlBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, src2);
}

function $shrBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shr'Bv256'(src1, src2)
}

procedure {:inline 1} $ShrBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, src2);
}

procedure {:inline 1} $ShlU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU16(src1, src2);
}

procedure {:inline 1} $ShlU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU32(src1, src2);
}

procedure {:inline 1} $ShlU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
       call $ExecFailureAbort();
       return;
    }
    dst := $shlU64(src1, src2);
}

procedure {:inline 1} $ShlU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU128(src1, src2);
}

procedure {:inline 1} $ShlU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shlU256(src1, src2);
}

procedure {:inline 1} $Shr(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $MulU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $Div(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 div src2;
}

procedure {:inline 1} $Mod(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 mod src2;
}

procedure {:inline 1} $ArithBinaryUnimplemented(src1: int, src2: int) returns (dst: int);

procedure {:inline 1} $Lt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 < src2;
}

procedure {:inline 1} $Gt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 > src2;
}

procedure {:inline 1} $Le(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 <= src2;
}

procedure {:inline 1} $Ge(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 >= src2;
}

procedure {:inline 1} $And(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 && src2;
}

procedure {:inline 1} $Or(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 || src2;
}

procedure {:inline 1} $Not(src: bool) returns (dst: bool)
{
    dst := !src;
}

// Pack and Unpack are auto-generated for each type T


// ==================================================================================
// Native Vector

function {:inline} $SliceVecByRange<T>(v: Vec T, r: $Range): Vec T {
    SliceVec(v, r->lb, r->ub)
}

// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `#0`

// Not inlined. It appears faster this way.
function $IsEqual'vec'#0''(v1: Vec (#0), v2: Vec (#0)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'#0'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'#0''(v: Vec (#0), prefix: Vec (#0)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'#0'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'#0''(v: Vec (#0), suffix: Vec (#0)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'#0'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'#0''(v: Vec (#0)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'#0'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'#0'(v: Vec (#0), e: #0): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e))
}

function $IndexOfVec'#0'(v: Vec (#0), e: #0): int;
axiom (forall v: Vec (#0), e: #0:: {$IndexOfVec'#0'(v, e)}
    (var i := $IndexOfVec'#0'(v, e);
     if (!$ContainsVec'#0'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'#0'(ReadVec(v, j), e))));


function {:inline} $RangeVec'#0'(v: Vec (#0)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'#0'() returns (v: Vec (#0)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'#0'(v: Vec (#0)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'#0'(m: $Mutation (Vec (#0)), val: #0) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'#0'(v: Vec (#0), val: #0): Vec (#0) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'#0'(m: $Mutation (Vec (#0))) returns (e: #0, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'#0'(m: $Mutation (Vec (#0))) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'#0'(m: $Mutation (Vec (#0)), left: int, right: int) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'#0'(m: $Mutation (Vec (#0)), rot: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'#0'(m: $Mutation (Vec (#0)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var mid_left_vec: Vec (#0);
    var mid_right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'#0'(m: $Mutation (Vec (#0)), i: int, e: #0) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'#0'(v: Vec (#0)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'#0'(v: Vec (#0)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'#0'(v: Vec (#0), i: int) returns (dst: #0) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'#0'(m: $Mutation (Vec (#0)), index: int)
returns (dst: $Mutation (#0), m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'#0'(v: Vec (#0)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'#0'(m: $Mutation (Vec (#0)), i: int, j: int) returns (m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'#0'(v: Vec (#0), i: int, j: int): Vec (#0) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var len: int;
    var v: Vec (#0);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'#0'(v: Vec (#0), e: #0) returns (res: bool)  {
    res := $ContainsVec'#0'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'#0'(v: Vec (#0), e: #0) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'#0'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_string_String`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_string_String''(v1: Vec ($1_string_String), v2: Vec ($1_string_String)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_string_String'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_string_String''(v: Vec ($1_string_String), prefix: Vec ($1_string_String)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_string_String'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_string_String''(v: Vec ($1_string_String), suffix: Vec ($1_string_String)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_string_String'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_string_String''(v: Vec ($1_string_String)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_string_String'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_string_String'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String): int;
axiom (forall v: Vec ($1_string_String), e: $1_string_String:: {$IndexOfVec'$1_string_String'(v, e)}
    (var i := $IndexOfVec'$1_string_String'(v, e);
     if (!$ContainsVec'$1_string_String'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_string_String'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_string_String'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_string_String'(v: Vec ($1_string_String)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_string_String'(): Vec ($1_string_String) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_string_String'() returns (v: Vec ($1_string_String)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_string_String'(): Vec ($1_string_String) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_string_String'(v: Vec ($1_string_String)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_string_String'(m: $Mutation (Vec ($1_string_String)), val: $1_string_String) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_string_String'(v: Vec ($1_string_String), val: $1_string_String): Vec ($1_string_String) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_string_String'(m: $Mutation (Vec ($1_string_String))) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String))) {
    var v: Vec ($1_string_String);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_string_String'(m: $Mutation (Vec ($1_string_String)), other: Vec ($1_string_String)) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_string_String'(m: $Mutation (Vec ($1_string_String))) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_string_String'(m: $Mutation (Vec ($1_string_String)), other: Vec ($1_string_String)) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_string_String'(m: $Mutation (Vec ($1_string_String)), new_len: int) returns (v: (Vec ($1_string_String)), m': $Mutation (Vec ($1_string_String))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_string_String'(m: $Mutation (Vec ($1_string_String)), new_len: int) returns (v: (Vec ($1_string_String)), m': $Mutation (Vec ($1_string_String))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_string_String'(m: $Mutation (Vec ($1_string_String)), left: int, right: int) returns (m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var mid_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_string_String'(m: $Mutation (Vec ($1_string_String)), rot: int) returns (n: int, m': $Mutation (Vec ($1_string_String))) {
    var v: Vec ($1_string_String);
    var len: int;
    var left_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_string_String'(m: $Mutation (Vec ($1_string_String)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var mid_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var mid_left_vec: Vec ($1_string_String);
    var mid_right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int, e: $1_string_String) returns (m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_string_String'(v: Vec ($1_string_String)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_string_String'(v: Vec ($1_string_String)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_string_String'(v: Vec ($1_string_String), i: int) returns (dst: $1_string_String) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_string_String'(v: Vec ($1_string_String), i: int): $1_string_String {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_string_String'(m: $Mutation (Vec ($1_string_String)), index: int)
returns (dst: $Mutation ($1_string_String), m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_string_String'(v: Vec ($1_string_String), i: int): $1_string_String {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_string_String'(v: Vec ($1_string_String)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int, j: int) returns (m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_string_String'(v: Vec ($1_string_String), i: int, j: int): Vec ($1_string_String) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String)))
{
    var len: int;
    var v: Vec ($1_string_String);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String) returns (res: bool)  {
    res := $ContainsVec'$1_string_String'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_string_String'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$4_collection_UnlimitedSupply`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$4_collection_UnlimitedSupply''(v1: Vec ($4_collection_UnlimitedSupply), v2: Vec ($4_collection_UnlimitedSupply)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$4_collection_UnlimitedSupply'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$4_collection_UnlimitedSupply''(v: Vec ($4_collection_UnlimitedSupply), prefix: Vec ($4_collection_UnlimitedSupply)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$4_collection_UnlimitedSupply'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$4_collection_UnlimitedSupply''(v: Vec ($4_collection_UnlimitedSupply), suffix: Vec ($4_collection_UnlimitedSupply)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$4_collection_UnlimitedSupply'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$4_collection_UnlimitedSupply''(v: Vec ($4_collection_UnlimitedSupply)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$4_collection_UnlimitedSupply'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), e: $4_collection_UnlimitedSupply): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_collection_UnlimitedSupply'(ReadVec(v, i), e))
}

function $IndexOfVec'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), e: $4_collection_UnlimitedSupply): int;
axiom (forall v: Vec ($4_collection_UnlimitedSupply), e: $4_collection_UnlimitedSupply:: {$IndexOfVec'$4_collection_UnlimitedSupply'(v, e)}
    (var i := $IndexOfVec'$4_collection_UnlimitedSupply'(v, e);
     if (!$ContainsVec'$4_collection_UnlimitedSupply'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_collection_UnlimitedSupply'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$4_collection_UnlimitedSupply'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$4_collection_UnlimitedSupply'(): Vec ($4_collection_UnlimitedSupply) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$4_collection_UnlimitedSupply'() returns (v: Vec ($4_collection_UnlimitedSupply)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$4_collection_UnlimitedSupply'(): Vec ($4_collection_UnlimitedSupply) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), val: $4_collection_UnlimitedSupply) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), val: $4_collection_UnlimitedSupply): Vec ($4_collection_UnlimitedSupply) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply))) returns (e: $4_collection_UnlimitedSupply, m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var v: Vec ($4_collection_UnlimitedSupply);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), other: Vec ($4_collection_UnlimitedSupply)) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply))) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), other: Vec ($4_collection_UnlimitedSupply)) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), new_len: int) returns (v: (Vec ($4_collection_UnlimitedSupply)), m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), new_len: int) returns (v: (Vec ($4_collection_UnlimitedSupply)), m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), left: int, right: int) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var left_vec: Vec ($4_collection_UnlimitedSupply);
    var mid_vec: Vec ($4_collection_UnlimitedSupply);
    var right_vec: Vec ($4_collection_UnlimitedSupply);
    var v: Vec ($4_collection_UnlimitedSupply);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), rot: int) returns (n: int, m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var v: Vec ($4_collection_UnlimitedSupply);
    var len: int;
    var left_vec: Vec ($4_collection_UnlimitedSupply);
    var right_vec: Vec ($4_collection_UnlimitedSupply);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var left_vec: Vec ($4_collection_UnlimitedSupply);
    var mid_vec: Vec ($4_collection_UnlimitedSupply);
    var right_vec: Vec ($4_collection_UnlimitedSupply);
    var mid_left_vec: Vec ($4_collection_UnlimitedSupply);
    var mid_right_vec: Vec ($4_collection_UnlimitedSupply);
    var v: Vec ($4_collection_UnlimitedSupply);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), i: int, e: $4_collection_UnlimitedSupply) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply))) {
    var left_vec: Vec ($4_collection_UnlimitedSupply);
    var right_vec: Vec ($4_collection_UnlimitedSupply);
    var v: Vec ($4_collection_UnlimitedSupply);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), i: int) returns (dst: $4_collection_UnlimitedSupply) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), i: int): $4_collection_UnlimitedSupply {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), index: int)
returns (dst: $Mutation ($4_collection_UnlimitedSupply), m': $Mutation (Vec ($4_collection_UnlimitedSupply)))
{
    var v: Vec ($4_collection_UnlimitedSupply);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), i: int): $4_collection_UnlimitedSupply {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), i: int, j: int) returns (m': $Mutation (Vec ($4_collection_UnlimitedSupply)))
{
    var v: Vec ($4_collection_UnlimitedSupply);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), i: int, j: int): Vec ($4_collection_UnlimitedSupply) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), i: int) returns (e: $4_collection_UnlimitedSupply, m': $Mutation (Vec ($4_collection_UnlimitedSupply)))
{
    var v: Vec ($4_collection_UnlimitedSupply);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$4_collection_UnlimitedSupply'(m: $Mutation (Vec ($4_collection_UnlimitedSupply)), i: int) returns (e: $4_collection_UnlimitedSupply, m': $Mutation (Vec ($4_collection_UnlimitedSupply)))
{
    var len: int;
    var v: Vec ($4_collection_UnlimitedSupply);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), e: $4_collection_UnlimitedSupply) returns (res: bool)  {
    res := $ContainsVec'$4_collection_UnlimitedSupply'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply), e: $4_collection_UnlimitedSupply) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$4_collection_UnlimitedSupply'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$4_royalty_Royalty`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$4_royalty_Royalty''(v1: Vec ($4_royalty_Royalty), v2: Vec ($4_royalty_Royalty)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$4_royalty_Royalty'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$4_royalty_Royalty''(v: Vec ($4_royalty_Royalty), prefix: Vec ($4_royalty_Royalty)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$4_royalty_Royalty'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$4_royalty_Royalty''(v: Vec ($4_royalty_Royalty), suffix: Vec ($4_royalty_Royalty)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$4_royalty_Royalty'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$4_royalty_Royalty''(v: Vec ($4_royalty_Royalty)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$4_royalty_Royalty'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_royalty_Royalty'(ReadVec(v, i), e))
}

function $IndexOfVec'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty): int;
axiom (forall v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty:: {$IndexOfVec'$4_royalty_Royalty'(v, e)}
    (var i := $IndexOfVec'$4_royalty_Royalty'(v, e);
     if (!$ContainsVec'$4_royalty_Royalty'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_royalty_Royalty'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$4_royalty_Royalty'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$4_royalty_Royalty'(): Vec ($4_royalty_Royalty) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$4_royalty_Royalty'() returns (v: Vec ($4_royalty_Royalty)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$4_royalty_Royalty'(): Vec ($4_royalty_Royalty) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), val: $4_royalty_Royalty) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), val: $4_royalty_Royalty): Vec ($4_royalty_Royalty) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty))) returns (e: $4_royalty_Royalty, m': $Mutation (Vec ($4_royalty_Royalty))) {
    var v: Vec ($4_royalty_Royalty);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), other: Vec ($4_royalty_Royalty)) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty))) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), other: Vec ($4_royalty_Royalty)) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), new_len: int) returns (v: (Vec ($4_royalty_Royalty)), m': $Mutation (Vec ($4_royalty_Royalty))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), new_len: int) returns (v: (Vec ($4_royalty_Royalty)), m': $Mutation (Vec ($4_royalty_Royalty))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), left: int, right: int) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    var left_vec: Vec ($4_royalty_Royalty);
    var mid_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    var v: Vec ($4_royalty_Royalty);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), rot: int) returns (n: int, m': $Mutation (Vec ($4_royalty_Royalty))) {
    var v: Vec ($4_royalty_Royalty);
    var len: int;
    var left_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($4_royalty_Royalty))) {
    var left_vec: Vec ($4_royalty_Royalty);
    var mid_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    var mid_left_vec: Vec ($4_royalty_Royalty);
    var mid_right_vec: Vec ($4_royalty_Royalty);
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int, e: $4_royalty_Royalty) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    var left_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int) returns (dst: $4_royalty_Royalty) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int): $4_royalty_Royalty {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), index: int)
returns (dst: $Mutation ($4_royalty_Royalty), m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int): $4_royalty_Royalty {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int, j: int) returns (m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int, j: int): Vec ($4_royalty_Royalty) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int) returns (e: $4_royalty_Royalty, m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var v: Vec ($4_royalty_Royalty);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int) returns (e: $4_royalty_Royalty, m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var len: int;
    var v: Vec ($4_royalty_Royalty);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty) returns (res: bool)  {
    res := $ContainsVec'$4_royalty_Royalty'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$4_royalty_Royalty'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(v1: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), v2: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), prefix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), suffix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(ReadVec(v, i), e))
}

function $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign): int;
axiom (forall v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign:: {$IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v, e)}
    (var i := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v, e);
     if (!$ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'() returns (v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), left: int, right: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), rot: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var len: int;
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var mid_left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var mid_right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), i: int, e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), i: int) returns (dst: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), index: int)
returns (dst: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), i: int, j: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), i: int, j: int): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)))
{
    var len: int;
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign) returns (res: bool)  {
    res := $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(v1: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), v2: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), prefix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), suffix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(ReadVec(v, i), e))
}

function $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics): int;
axiom (forall v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics:: {$IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v, e)}
    (var i := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v, e);
     if (!$ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'() returns (v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), left: int, right: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), rot: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var len: int;
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var mid_left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var mid_right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), i: int, e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), i: int) returns (dst: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), index: int)
returns (dst: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), i: int, j: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), i: int, j: int): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)))
{
    var len: int;
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics) returns (res: bool)  {
    res := $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(v1: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), v2: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), prefix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), suffix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(ReadVec(v, i), e))
}

function $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord): int;
axiom (forall v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord:: {$IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v, e)}
    (var i := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v, e);
     if (!$ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'() returns (v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), left: int, right: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), rot: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    var len: int;
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    var mid_left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    var mid_right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), i: int, e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), i: int) returns (dst: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), index: int)
returns (dst: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), i: int, j: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), i: int, j: int): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)))
{
    var len: int;
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord) returns (res: bool)  {
    res := $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(v1: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), v2: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), prefix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), suffix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(ReadVec(v, i), e))
}

function $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest): int;
axiom (forall v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest:: {$IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v, e)}
    (var i := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v, e);
     if (!$ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'() returns (v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), left: int, right: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), rot: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var len: int;
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var mid_left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var mid_right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), i: int, e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), i: int) returns (dst: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), index: int)
returns (dst: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), i: int, j: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), i: int, j: int): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)))
{
    var len: int;
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest) returns (res: bool)  {
    res := $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(v1: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), v2: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), prefix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), suffix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(ReadVec(v, i), e))
}

function $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem): int;
axiom (forall v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem:: {$IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v, e)}
    (var i := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v, e);
     if (!$ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'() returns (v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem))) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem))) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), left: int, right: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), rot: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var len: int;
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var mid_left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var mid_right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), i: int, e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), i: int) returns (dst: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), index: int)
returns (dst: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), i: int, j: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), i: int, j: int): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)))
{
    var len: int;
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem) returns (res: bool)  {
    res := $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(v1: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), v2: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), prefix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), suffix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(ReadVec(v, i), e))
}

function $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics): int;
axiom (forall v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics:: {$IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v, e)}
    (var i := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v, e);
     if (!$ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'() returns (v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), left: int, right: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), rot: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var len: int;
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var mid_left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var mid_right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), i: int, e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), i: int) returns (dst: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), index: int)
returns (dst: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), i: int, j: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), i: int, j: int): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)))
{
    var len: int;
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics) returns (res: bool)  {
    res := $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(v1: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), v2: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), prefix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), suffix: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(ReadVec(v, i), e))
}

function $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem): int;
axiom (forall v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem:: {$IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v, e)}
    (var i := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v, e);
     if (!$ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'() returns (v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), val: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), other: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), new_len: int) returns (v: (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), left: int, right: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), rot: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))) {
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var len: int;
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var mid_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var mid_left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var mid_right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), i: int, e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))) {
    var left_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var right_vec: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), i: int) returns (dst: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), index: int)
returns (dst: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), i: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), i: int, j: int) returns (m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), i: int, j: int): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)))
{
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(m: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)), i: int) returns (e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem, m': $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)))
{
    var len: int;
    var v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem) returns (res: bool)  {
    res := $ContainsVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), e: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `address`

// Not inlined. It appears faster this way.
function $IsEqual'vec'address''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'address'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'address''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'address'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'address''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'address'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'address''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'address'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'address'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e))
}

function $IndexOfVec'address'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'address'(v, e)}
    (var i := $IndexOfVec'address'(v, e);
     if (!$ContainsVec'address'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'address'(ReadVec(v, j), e))));


function {:inline} $RangeVec'address'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'address'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'address'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'address'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'address'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'address'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'address'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'address'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'address'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'address'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'address'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'address'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'address'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'address'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'address'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'address'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'address'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'address'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'address'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'address'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'address'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'address'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u64''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u64''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u64''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u64''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u64'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e))
}

function $IndexOfVec'u64'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u64'(v, e)}
    (var i := $IndexOfVec'u64'(v, e);
     if (!$ContainsVec'u64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u64'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u64'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u64'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u64'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u64'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u64'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u64'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u64'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u64'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u64'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u64'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u64'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u64'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u64'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u64'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u64'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u64'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u64'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u64'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u64'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u8''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u8''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u8''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u8''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u8'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e))
}

function $IndexOfVec'u8'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u8'(v, e)}
    (var i := $IndexOfVec'u8'(v, e);
     if (!$ContainsVec'u8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u8'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u8'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u8'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u8'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u8'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u8'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u8'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u8'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u8'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u8'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u8'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u8'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u8'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u8'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u8'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u8'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u8'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u8'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u8'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u8'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv64''(v1: Vec (bv64), v2: Vec (bv64)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv64''(v: Vec (bv64), prefix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv64''(v: Vec (bv64), suffix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv64''(v: Vec (bv64)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv64'(v: Vec (bv64), e: bv64): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e))
}

function $IndexOfVec'bv64'(v: Vec (bv64), e: bv64): int;
axiom (forall v: Vec (bv64), e: bv64:: {$IndexOfVec'bv64'(v, e)}
    (var i := $IndexOfVec'bv64'(v, e);
     if (!$ContainsVec'bv64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv64'(v: Vec (bv64)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv64'() returns (v: Vec (bv64)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv64'(v: Vec (bv64)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv64'(m: $Mutation (Vec (bv64)), val: bv64) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv64'(v: Vec (bv64), val: bv64): Vec (bv64) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv64'(m: $Mutation (Vec (bv64))) returns (e: bv64, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv64'(m: $Mutation (Vec (bv64))) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, right: int) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv64'(m: $Mutation (Vec (bv64)), rot: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var mid_left_vec: Vec (bv64);
    var mid_right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv64'(m: $Mutation (Vec (bv64)), i: int, e: bv64) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv64'(v: Vec (bv64)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv64'(v: Vec (bv64)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv64'(v: Vec (bv64), i: int) returns (dst: bv64) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv64'(m: $Mutation (Vec (bv64)), index: int)
returns (dst: $Mutation (bv64), m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv64'(v: Vec (bv64)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv64'(m: $Mutation (Vec (bv64)), i: int, j: int) returns (m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv64'(v: Vec (bv64), i: int, j: int): Vec (bv64) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var len: int;
    var v: Vec (bv64);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv64'(v: Vec (bv64), e: bv64) returns (res: bool)  {
    res := $ContainsVec'bv64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv64'(v: Vec (bv64), e: bv64) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv8''(v1: Vec (bv8), v2: Vec (bv8)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv8''(v: Vec (bv8), prefix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv8''(v: Vec (bv8), suffix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv8''(v: Vec (bv8)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv8'(v: Vec (bv8), e: bv8): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e))
}

function $IndexOfVec'bv8'(v: Vec (bv8), e: bv8): int;
axiom (forall v: Vec (bv8), e: bv8:: {$IndexOfVec'bv8'(v, e)}
    (var i := $IndexOfVec'bv8'(v, e);
     if (!$ContainsVec'bv8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv8'(v: Vec (bv8)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv8'() returns (v: Vec (bv8)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv8'(v: Vec (bv8)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv8'(m: $Mutation (Vec (bv8)), val: bv8) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv8'(v: Vec (bv8), val: bv8): Vec (bv8) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv8'(m: $Mutation (Vec (bv8))) returns (e: bv8, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv8'(m: $Mutation (Vec (bv8))) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, right: int) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv8'(m: $Mutation (Vec (bv8)), rot: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var mid_left_vec: Vec (bv8);
    var mid_right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv8'(m: $Mutation (Vec (bv8)), i: int, e: bv8) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv8'(v: Vec (bv8)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv8'(v: Vec (bv8)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv8'(v: Vec (bv8), i: int) returns (dst: bv8) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv8'(m: $Mutation (Vec (bv8)), index: int)
returns (dst: $Mutation (bv8), m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv8'(v: Vec (bv8)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv8'(m: $Mutation (Vec (bv8)), i: int, j: int) returns (m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv8'(v: Vec (bv8), i: int, j: int): Vec (bv8) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var len: int;
    var v: Vec (bv8);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv8'(v: Vec (bv8), e: bv8) returns (res: bool)  {
    res := $ContainsVec'bv8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv8'(v: Vec (bv8), e: bv8) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ==================================================================================
// Native Table

// ----------------------------------------------------------------------------------
// Native Table key encoding for type `$1_string_String`

function $EncodeKey'$1_string_String'(k: $1_string_String): int;
axiom (
  forall k1, k2: $1_string_String :: {$EncodeKey'$1_string_String'(k1), $EncodeKey'$1_string_String'(k2)}
    $IsEqual'$1_string_String'(k1, k2) <==> $EncodeKey'$1_string_String'(k1) == $EncodeKey'$1_string_String'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table implementation for type `($1_string_String,$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)`

function $IsEqual'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(t1: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), t2: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(GetTable(t, i)))
}
procedure {:inline 2} $1_simple_map_create'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'() returns (v: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_simple_map_destroy_empty'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_simple_map_length'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(t: (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) returns (l: int) {
    l := LenTable(t);
}
procedure {:inline 2} $1_simple_map_contains_key'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(t: (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), k: $1_string_String) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'$1_string_String'(k));
}
procedure {:inline 2} $1_simple_map_add'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), k: $1_string_String, v: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign) returns (m': $Mutation(Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    var enc_k: int;
    var t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_simple_map_remove'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), k: $1_string_String)
returns (k': $1_string_String, v: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, m': $Mutation(Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    var enc_k: int;
    var t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        k' := k;
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_simple_map_borrow'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), k: $1_string_String) returns (v: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign) {
    var enc_k: int;
    enc_k := $EncodeKey'$1_string_String'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'$1_string_String'(k));
    }
}
procedure {:inline 2} $1_simple_map_borrow_mut'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(m: $Mutation (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), k: $1_string_String)
returns (dst: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), m': $Mutation (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))) {
    var enc_k: int;
    var t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_simple_map_spec_len'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(t: (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))): int {
    LenTable(t)
}
function {:inline} $1_simple_map_spec_contains_key'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(t: (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)), k: $1_string_String): bool {
    ContainsTable(t, $EncodeKey'$1_string_String'(k))
}
function {:inline} $1_simple_map_spec_set'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), k: $1_string_String, v: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign): Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign) {
    (var enc_k := $EncodeKey'$1_string_String'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_simple_map_spec_remove'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), k: $1_string_String): Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign) {
    RemoveTable(t, $EncodeKey'$1_string_String'(k))
}
function {:inline} $1_simple_map_spec_get'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), k: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign {
    GetTable(t, $EncodeKey'$1_string_String'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `($1_string_String,$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)`

function $IsEqual'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(t1: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), t2: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(GetTable(t, i)))
}
procedure {:inline 2} $1_simple_map_create'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'() returns (v: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_simple_map_destroy_empty'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_simple_map_length'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(t: (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) returns (l: int) {
    l := LenTable(t);
}
procedure {:inline 2} $1_simple_map_contains_key'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(t: (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), k: $1_string_String) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'$1_string_String'(k));
}
procedure {:inline 2} $1_simple_map_add'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), k: $1_string_String, v: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest) returns (m': $Mutation(Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    var enc_k: int;
    var t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_simple_map_remove'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), k: $1_string_String)
returns (k': $1_string_String, v: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, m': $Mutation(Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    var enc_k: int;
    var t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        k' := k;
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_simple_map_borrow'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), k: $1_string_String) returns (v: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest) {
    var enc_k: int;
    enc_k := $EncodeKey'$1_string_String'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'$1_string_String'(k));
    }
}
procedure {:inline 2} $1_simple_map_borrow_mut'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(m: $Mutation (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), k: $1_string_String)
returns (dst: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), m': $Mutation (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))) {
    var enc_k: int;
    var t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_simple_map_spec_len'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(t: (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest))): int {
    LenTable(t)
}
function {:inline} $1_simple_map_spec_contains_key'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(t: (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)), k: $1_string_String): bool {
    ContainsTable(t, $EncodeKey'$1_string_String'(k))
}
function {:inline} $1_simple_map_spec_set'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), k: $1_string_String, v: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest): Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest) {
    (var enc_k := $EncodeKey'$1_string_String'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_simple_map_spec_remove'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), k: $1_string_String): Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest) {
    RemoveTable(t, $EncodeKey'$1_string_String'(k))
}
function {:inline} $1_simple_map_spec_get'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(t: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), k: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    GetTable(t, $EncodeKey'$1_string_String'(k))
}



// ==================================================================================
// Native Hash

// Hash is modeled as an otherwise uninterpreted injection.
// In truth, it is not an injection since the domain has greater cardinality
// (arbitrary length vectors) than the co-domain (vectors of length 32).  But it is
// common to assume in code there are no hash collisions in practice.  Fortunately,
// Boogie is not smart enough to recognized that there is an inconsistency.
// FIXME: If we were using a reliable extensional theory of arrays, and if we could use ==
// instead of $IsEqual, we might be able to avoid so many quantified formulas by
// using a sha2_inverse function in the ensures conditions of Hash_sha2_256 to
// assert that sha2/3 are injections without using global quantified axioms.


function $1_hash_sha2(val: Vec int): Vec int;

// This says that Hash_sha2 is bijective.
axiom (forall v1,v2: Vec int :: {$1_hash_sha2(v1), $1_hash_sha2(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha2(v1), $1_hash_sha2(v2)));

procedure $1_hash_sha2_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha2(val);     // returns Hash_sha2 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha2_256(val: Vec int): Vec int {
    $1_hash_sha2(val)
}

// similarly for Hash_sha3
function $1_hash_sha3(val: Vec int): Vec int;

axiom (forall v1,v2: Vec int :: {$1_hash_sha3(v1), $1_hash_sha3(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha3(v1), $1_hash_sha3(v2)));

procedure $1_hash_sha3_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha3(val);     // returns Hash_sha3 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha3_256(val: Vec int): Vec int {
    $1_hash_sha3(val)
}

// ==================================================================================
// Native string

// TODO: correct implementation of strings

procedure {:inline 1} $1_string_internal_check_utf8(x: Vec int) returns (r: bool) {
}

procedure {:inline 1} $1_string_internal_sub_string(x: Vec int, i: int, j: int) returns (r: Vec int) {
}

procedure {:inline 1} $1_string_internal_index_of(x: Vec int, y: Vec int) returns (r: int) {
}

procedure {:inline 1} $1_string_internal_is_char_boundary(x: Vec int, i: int) returns (r: bool) {
}




// ==================================================================================
// Native diem_account

procedure {:inline 1} $1_DiemAccount_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

procedure {:inline 1} $1_DiemAccount_destroy_signer(
  signer: $signer
) {
  return;
}

// ==================================================================================
// Native account

procedure {:inline 1} $1_Account_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

// ==================================================================================
// Native Signer

datatype $signer {
    $signer($addr: int)
}
function {:inline} $IsValid'signer'(s: $signer): bool {
    $IsValid'address'(s->$addr)
}
function {:inline} $IsEqual'signer'(s1: $signer, s2: $signer): bool {
    s1 == s2
}

procedure {:inline 1} $1_signer_borrow_address(signer: $signer) returns (res: int) {
    res := signer->$addr;
}

function {:inline} $1_signer_$borrow_address(signer: $signer): int
{
    signer->$addr
}

function $1_signer_is_txn_signer(s: $signer): bool;

function $1_signer_is_txn_signer_addr(a: int): bool;


// ==================================================================================
// Native signature

// Signature related functionality is handled via uninterpreted functions. This is sound
// currently because we verify every code path based on signature verification with
// an arbitrary interpretation.

function $1_Signature_$ed25519_validate_pubkey(public_key: Vec int): bool;
function $1_Signature_$ed25519_verify(signature: Vec int, public_key: Vec int, message: Vec int): bool;

// Needed because we do not have extensional equality:
axiom (forall k1, k2: Vec int ::
    {$1_Signature_$ed25519_validate_pubkey(k1), $1_Signature_$ed25519_validate_pubkey(k2)}
    $IsEqual'vec'u8''(k1, k2) ==> $1_Signature_$ed25519_validate_pubkey(k1) == $1_Signature_$ed25519_validate_pubkey(k2));
axiom (forall s1, s2, k1, k2, m1, m2: Vec int ::
    {$1_Signature_$ed25519_verify(s1, k1, m1), $1_Signature_$ed25519_verify(s2, k2, m2)}
    $IsEqual'vec'u8''(s1, s2) && $IsEqual'vec'u8''(k1, k2) && $IsEqual'vec'u8''(m1, m2)
    ==> $1_Signature_$ed25519_verify(s1, k1, m1) == $1_Signature_$ed25519_verify(s2, k2, m2));


procedure {:inline 1} $1_Signature_ed25519_validate_pubkey(public_key: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_validate_pubkey(public_key);
}

procedure {:inline 1} $1_Signature_ed25519_verify(
        signature: Vec int, public_key: Vec int, message: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_verify(signature, public_key, message);
}


// ==================================================================================
// Native bcs::serialize

// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `address`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'address'(v: int): Vec int;

axiom (forall v1, v2: int :: {$1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)}
   $IsEqual'address'(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'address'(v: int) returns (res: Vec int);
ensures res == $1_bcs_serialize'address'(v);

function {:inline} $1_bcs_$to_bytes'address'(v: int): Vec int {
    $1_bcs_serialize'address'(v)
}

// Serialized addresses should have the same length.
const $serialized_address_len: int;
// Serialized addresses should have the same length
axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); LenVec(r) == $serialized_address_len));




// ==================================================================================
// Native Event module



procedure {:inline 1} $InitEventStore() {
}

// ============================================================================================
// Type Reflection on Type Parameters

datatype $TypeParamInfo {
    $TypeParamBool(),
    $TypeParamU8(),
    $TypeParamU16(),
    $TypeParamU32(),
    $TypeParamU64(),
    $TypeParamU128(),
    $TypeParamU256(),
    $TypeParamAddress(),
    $TypeParamSigner(),
    $TypeParamVector(e: $TypeParamInfo),
    $TypeParamStruct(a: int, m: Vec int, s: Vec int)
}



//==================================
// Begin Translation

function $TypeName(t: $TypeParamInfo): Vec int;
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamBool ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)) ==> t is $TypeParamBool);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU8 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)) ==> t is $TypeParamU8);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU16 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)) ==> t is $TypeParamU16);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU32 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)) ==> t is $TypeParamU32);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU64 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)) ==> t is $TypeParamU64);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU128 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)) ==> t is $TypeParamU128);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU256 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)) ==> t is $TypeParamU256);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamAddress ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)) ==> t is $TypeParamAddress);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamSigner ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)) ==> t is $TypeParamSigner);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamVector ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7), $TypeName(t->e)), Vec(DefaultVecMap()[0 := 62], 1))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} ($IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7)) && $IsSuffix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 62], 1))) ==> t is $TypeParamVector);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamStruct ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 48][1 := 120], 2), MakeVec1(t->a)), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->m), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->s)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 48][1 := 120], 2)) ==> t is $TypeParamVector);


// Given Types for Type Parameters

type #0;
function {:inline} $IsEqual'#0'(x1: #0, x2: #0): bool { x1 == x2 }
function {:inline} $IsValid'#0'(x: #0): bool { true }
var #0_info: $TypeParamInfo;
var #0_$memory: $Memory #0;

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u64''($1_from_bcs_deserialize'vec'u64''(b1), $1_from_bcs_deserialize'vec'u64''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'address''($1_from_bcs_deserialize'vec'address''(b1), $1_from_bcs_deserialize'vec'address''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_string_String''($1_from_bcs_deserialize'vec'$1_string_String''(b1), $1_from_bcs_deserialize'vec'$1_string_String''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$4_royalty_Royalty''($1_from_bcs_deserialize'vec'$4_royalty_Royalty''(b1), $1_from_bcs_deserialize'vec'$4_royalty_Royalty''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<collection::UnlimitedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$4_collection_UnlimitedSupply''($1_from_bcs_deserialize'vec'$4_collection_UnlimitedSupply''(b1), $1_from_bcs_deserialize'vec'$4_collection_UnlimitedSupply''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<base::Campaign>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<base::CampaignMetrics>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<base::ClaimRecord>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<base::Quest>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<base::QuestListItem>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<base::QuestMetrics>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<base::RewardItem>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'u64''($1_from_bcs_deserialize'$1_option_Option'u64''(b1), $1_from_bcs_deserialize'$1_option_Option'u64''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <option::Option<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'$4_royalty_Royalty''($1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(b1), $1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <option::Option<collection::UnlimitedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'$4_collection_UnlimitedSupply''($1_from_bcs_deserialize'$1_option_Option'$4_collection_UnlimitedSupply''(b1), $1_from_bcs_deserialize'$1_option_Option'$4_collection_UnlimitedSupply''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <event::EventHandle<object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_object_TransferEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <event::EventHandle<collection::BurnEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$4_collection_BurnEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <event::EventHandle<collection::MintEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$4_collection_MintEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <event::EventHandle<collection::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$4_collection_MutationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <event::EventHandle<token::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$4_token_MutationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_chain_status_GenesisEndMarker'($1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_timestamp_CurrentTimeMicroseconds'($1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <simple_map::SimpleMap<string::String, base::Campaign>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <simple_map::SimpleMap<string::String, base::Quest>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_reconfiguration_Configuration'($1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::NIL>>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''($1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(b1), $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::NIL>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''($1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(b1), $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <string_utils::Cons<string::String, string_utils::NIL>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''($1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(b1), $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <string_utils::NIL>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_string_utils_NIL'($1_from_bcs_deserialize'$1_string_utils_NIL'(b1), $1_from_bcs_deserialize'$1_string_utils_NIL'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_object_ConstructorRef'($1_from_bcs_deserialize'$1_object_ConstructorRef'(b1), $1_from_bcs_deserialize'$1_object_ConstructorRef'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <object::LinearTransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_object_LinearTransferRef'($1_from_bcs_deserialize'$1_object_LinearTransferRef'(b1), $1_from_bcs_deserialize'$1_object_LinearTransferRef'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <object::Object<object::ObjectCore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_object_Object'$1_object_ObjectCore''($1_from_bcs_deserialize'$1_object_Object'$1_object_ObjectCore''(b1), $1_from_bcs_deserialize'$1_object_Object'$1_object_ObjectCore''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <object::Object<collection::Collection>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_object_Object'$4_collection_Collection''($1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(b1), $1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <object::Object<token::Token>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_object_Object'$4_token_Token''($1_from_bcs_deserialize'$1_object_Object'$4_token_Token''(b1), $1_from_bcs_deserialize'$1_object_Object'$4_token_Token''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_object_ObjectCore'($1_from_bcs_deserialize'$1_object_ObjectCore'(b1), $1_from_bcs_deserialize'$1_object_ObjectCore'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_object_TransferEvent'($1_from_bcs_deserialize'$1_object_TransferEvent'(b1), $1_from_bcs_deserialize'$1_object_TransferEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_object_TransferRef'($1_from_bcs_deserialize'$1_object_TransferRef'(b1), $1_from_bcs_deserialize'$1_object_TransferRef'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <royalty::Royalty>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$4_royalty_Royalty'($1_from_bcs_deserialize'$4_royalty_Royalty'(b1), $1_from_bcs_deserialize'$4_royalty_Royalty'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <collection::Collection>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$4_collection_Collection'($1_from_bcs_deserialize'$4_collection_Collection'(b1), $1_from_bcs_deserialize'$4_collection_Collection'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <collection::FixedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$4_collection_FixedSupply'($1_from_bcs_deserialize'$4_collection_FixedSupply'(b1), $1_from_bcs_deserialize'$4_collection_FixedSupply'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <collection::MintEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$4_collection_MintEvent'($1_from_bcs_deserialize'$4_collection_MintEvent'(b1), $1_from_bcs_deserialize'$4_collection_MintEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <collection::UnlimitedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$4_collection_UnlimitedSupply'($1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(b1), $1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <token::Token>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$4_token_Token'($1_from_bcs_deserialize'$4_token_Token'(b1), $1_from_bcs_deserialize'$4_token_Token'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <base::AppState>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <base::Campaign>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <base::CampaignMetrics>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <base::ProtocolState>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <base::Quest>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <base::QuestListItem>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <base::QuestMetrics>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <base::RealWorldReward>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <base::RewardItem>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <base::RewardItemPower>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <base::RewardPower>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <base::UserState>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:14:9+116, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'bool'(b1), $1_from_bcs_deserializable'bool'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u8'(b1), $1_from_bcs_deserializable'u8'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u64'(b1), $1_from_bcs_deserializable'u64'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u256'(b1), $1_from_bcs_deserializable'u256'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'address'(b1), $1_from_bcs_deserializable'address'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'signer'(b1), $1_from_bcs_deserializable'signer'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u8''(b1), $1_from_bcs_deserializable'vec'u8''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u64''(b1), $1_from_bcs_deserializable'vec'u64''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'address''(b1), $1_from_bcs_deserializable'vec'address''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_string_String''(b1), $1_from_bcs_deserializable'vec'$1_string_String''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$4_royalty_Royalty''(b1), $1_from_bcs_deserializable'vec'$4_royalty_Royalty''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<collection::UnlimitedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$4_collection_UnlimitedSupply''(b1), $1_from_bcs_deserializable'vec'$4_collection_UnlimitedSupply''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<base::Campaign>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(b1), $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<base::CampaignMetrics>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(b1), $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<base::ClaimRecord>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(b1), $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<base::Quest>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(b1), $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<base::QuestListItem>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(b1), $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<base::QuestMetrics>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(b1), $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<base::RewardItem>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(b1), $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'#0''(b1), $1_from_bcs_deserializable'vec'#0''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'u64''(b1), $1_from_bcs_deserializable'$1_option_Option'u64''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(b1), $1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<collection::UnlimitedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$4_collection_UnlimitedSupply''(b1), $1_from_bcs_deserializable'$1_option_Option'$4_collection_UnlimitedSupply''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_String'(b1), $1_from_bcs_deserializable'$1_string_String'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_GUID'(b1), $1_from_bcs_deserializable'$1_guid_GUID'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_ID'(b1), $1_from_bcs_deserializable'$1_guid_ID'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<collection::BurnEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<collection::MintEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<collection::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<token::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <simple_map::SimpleMap<string::String, base::Campaign>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(b1), $1_from_bcs_deserializable'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <simple_map::SimpleMap<string::String, base::Quest>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(b1), $1_from_bcs_deserializable'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::NIL>>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(b1), $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::NIL>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(b1), $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <string_utils::Cons<string::String, string_utils::NIL>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(b1), $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <string_utils::NIL>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_utils_NIL'(b1), $1_from_bcs_deserializable'$1_string_utils_NIL'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ConstructorRef'(b1), $1_from_bcs_deserializable'$1_object_ConstructorRef'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::LinearTransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_LinearTransferRef'(b1), $1_from_bcs_deserializable'$1_object_LinearTransferRef'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::Object<object::ObjectCore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$1_object_ObjectCore''(b1), $1_from_bcs_deserializable'$1_object_Object'$1_object_ObjectCore''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::Object<collection::Collection>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(b1), $1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::Object<token::Token>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$4_token_Token''(b1), $1_from_bcs_deserializable'$1_object_Object'$4_token_Token''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ObjectCore'(b1), $1_from_bcs_deserializable'$1_object_ObjectCore'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferEvent'(b1), $1_from_bcs_deserializable'$1_object_TransferEvent'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferRef'(b1), $1_from_bcs_deserializable'$1_object_TransferRef'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <royalty::Royalty>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_royalty_Royalty'(b1), $1_from_bcs_deserializable'$4_royalty_Royalty'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <collection::Collection>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_Collection'(b1), $1_from_bcs_deserializable'$4_collection_Collection'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <collection::FixedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_FixedSupply'(b1), $1_from_bcs_deserializable'$4_collection_FixedSupply'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <collection::MintEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_MintEvent'(b1), $1_from_bcs_deserializable'$4_collection_MintEvent'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <collection::UnlimitedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(b1), $1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <token::Token>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_token_Token'(b1), $1_from_bcs_deserializable'$4_token_Token'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <base::AppState>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'(b1), $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <base::Campaign>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(b1), $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <base::CampaignMetrics>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(b1), $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <base::ProtocolState>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'(b1), $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <base::Quest>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(b1), $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <base::QuestListItem>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(b1), $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <base::QuestMetrics>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(b1), $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <base::RealWorldReward>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(b1), $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <base::RewardItem>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(b1), $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <base::RewardItemPower>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'(b1), $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <base::RewardPower>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'(b1), $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <base::UserState>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'(b1), $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'#0'(b1), $1_from_bcs_deserializable'#0'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u64''($1_from_bcs_deserialize'vec'u64''(b1), $1_from_bcs_deserialize'vec'u64''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'address''($1_from_bcs_deserialize'vec'address''(b1), $1_from_bcs_deserialize'vec'address''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_string_String''($1_from_bcs_deserialize'vec'$1_string_String''(b1), $1_from_bcs_deserialize'vec'$1_string_String''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$4_royalty_Royalty''($1_from_bcs_deserialize'vec'$4_royalty_Royalty''(b1), $1_from_bcs_deserialize'vec'$4_royalty_Royalty''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<collection::UnlimitedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$4_collection_UnlimitedSupply''($1_from_bcs_deserialize'vec'$4_collection_UnlimitedSupply''(b1), $1_from_bcs_deserialize'vec'$4_collection_UnlimitedSupply''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<base::Campaign>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<base::CampaignMetrics>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<base::ClaimRecord>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<base::Quest>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<base::QuestListItem>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<base::QuestMetrics>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<base::RewardItem>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''($1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(b1), $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'u64''($1_from_bcs_deserialize'$1_option_Option'u64''(b1), $1_from_bcs_deserialize'$1_option_Option'u64''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$4_royalty_Royalty''($1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(b1), $1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<collection::UnlimitedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$4_collection_UnlimitedSupply''($1_from_bcs_deserialize'$1_option_Option'$4_collection_UnlimitedSupply''(b1), $1_from_bcs_deserialize'$1_option_Option'$4_collection_UnlimitedSupply''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<collection::BurnEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_collection_BurnEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<collection::MintEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_collection_MintEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<collection::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_collection_MutationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<token::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_token_MutationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_chain_status_GenesisEndMarker'($1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_timestamp_CurrentTimeMicroseconds'($1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <simple_map::SimpleMap<string::String, base::Campaign>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <simple_map::SimpleMap<string::String, base::Quest>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_reconfiguration_Configuration'($1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::NIL>>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''($1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(b1), $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::NIL>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''($1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(b1), $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <string_utils::Cons<string::String, string_utils::NIL>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''($1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(b1), $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <string_utils::NIL>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_utils_NIL'($1_from_bcs_deserialize'$1_string_utils_NIL'(b1), $1_from_bcs_deserialize'$1_string_utils_NIL'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ConstructorRef'($1_from_bcs_deserialize'$1_object_ConstructorRef'(b1), $1_from_bcs_deserialize'$1_object_ConstructorRef'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::LinearTransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_LinearTransferRef'($1_from_bcs_deserialize'$1_object_LinearTransferRef'(b1), $1_from_bcs_deserialize'$1_object_LinearTransferRef'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::Object<object::ObjectCore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$1_object_ObjectCore''($1_from_bcs_deserialize'$1_object_Object'$1_object_ObjectCore''(b1), $1_from_bcs_deserialize'$1_object_Object'$1_object_ObjectCore''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::Object<collection::Collection>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$4_collection_Collection''($1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(b1), $1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::Object<token::Token>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$4_token_Token''($1_from_bcs_deserialize'$1_object_Object'$4_token_Token''(b1), $1_from_bcs_deserialize'$1_object_Object'$4_token_Token''(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ObjectCore'($1_from_bcs_deserialize'$1_object_ObjectCore'(b1), $1_from_bcs_deserialize'$1_object_ObjectCore'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferEvent'($1_from_bcs_deserialize'$1_object_TransferEvent'(b1), $1_from_bcs_deserialize'$1_object_TransferEvent'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferRef'($1_from_bcs_deserialize'$1_object_TransferRef'(b1), $1_from_bcs_deserialize'$1_object_TransferRef'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <royalty::Royalty>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_royalty_Royalty'($1_from_bcs_deserialize'$4_royalty_Royalty'(b1), $1_from_bcs_deserialize'$4_royalty_Royalty'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <collection::Collection>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_Collection'($1_from_bcs_deserialize'$4_collection_Collection'(b1), $1_from_bcs_deserialize'$4_collection_Collection'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <collection::FixedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_FixedSupply'($1_from_bcs_deserialize'$4_collection_FixedSupply'(b1), $1_from_bcs_deserialize'$4_collection_FixedSupply'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <collection::MintEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_MintEvent'($1_from_bcs_deserialize'$4_collection_MintEvent'(b1), $1_from_bcs_deserialize'$4_collection_MintEvent'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <collection::UnlimitedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_UnlimitedSupply'($1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(b1), $1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <token::Token>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_token_Token'($1_from_bcs_deserialize'$4_token_Token'(b1), $1_from_bcs_deserialize'$4_token_Token'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <base::AppState>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <base::Campaign>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <base::CampaignMetrics>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <base::ProtocolState>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <base::Quest>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <base::QuestListItem>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <base::QuestMetrics>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <base::RealWorldReward>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <base::RewardItem>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <base::RewardItemPower>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <base::RewardPower>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <base::UserState>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'($1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'(b1), $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:8:9+113
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_keccak256(b1), $1_aptos_hash_spec_keccak256(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:13:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha2_512_internal(b1), $1_aptos_hash_spec_sha2_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:18:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha3_512_internal(b1), $1_aptos_hash_spec_sha3_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:23:9+131
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_ripemd160_internal(b1), $1_aptos_hash_spec_ripemd160_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:28:9+135
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_blake2b_256_internal(b1), $1_aptos_hash_spec_blake2b_256_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:146:5+86
function {:inline} $1_vector_$is_empty'u64'(v: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'u64'(v), 0)
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)): bool {
    $IsEqual'u64'($1_vector_$length'$4_royalty_Royalty'(v), 0)
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$4_collection_UnlimitedSupply'(v: Vec ($4_collection_UnlimitedSupply)): bool {
    $IsEqual'u64'($1_vector_$length'$4_collection_UnlimitedSupply'(v), 0)
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:34:10+78
function {:inline} $1_option_spec_none'u64'(): $1_option_Option'u64' {
    $1_option_Option'u64'($EmptyVec'u64'())
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:34:10+78
function {:inline} $1_option_spec_none'$4_royalty_Royalty'(): $1_option_Option'$4_royalty_Royalty' {
    $1_option_Option'$4_royalty_Royalty'($EmptyVec'$4_royalty_Royalty'())
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+89
function {:inline} $1_option_spec_some'u64'(e: int): $1_option_Option'u64' {
    $1_option_Option'u64'(MakeVec1(e))
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+89
function {:inline} $1_option_spec_some'$4_collection_UnlimitedSupply'(e: $4_collection_UnlimitedSupply): $1_option_Option'$4_collection_UnlimitedSupply' {
    $1_option_Option'$4_collection_UnlimitedSupply'(MakeVec1(e))
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:69:10+91
function {:inline} $1_option_spec_is_none'$4_royalty_Royalty'(t: $1_option_Option'$4_royalty_Royalty'): bool {
    $1_vector_$is_empty'$4_royalty_Royalty'(t->$vec)
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:69:10+91
function {:inline} $1_option_spec_is_none'$4_collection_UnlimitedSupply'(t: $1_option_Option'$4_collection_UnlimitedSupply'): bool {
    $1_vector_$is_empty'$4_collection_UnlimitedSupply'(t->$vec)
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+92
function {:inline} $1_option_spec_is_some'u64'(t: $1_option_Option'u64'): bool {
    !$1_vector_$is_empty'u64'(t->$vec)
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+92
function {:inline} $1_option_spec_is_some'$4_royalty_Royalty'(t: $1_option_Option'$4_royalty_Royalty'): bool {
    !$1_vector_$is_empty'$4_royalty_Royalty'(t->$vec)
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+92
function {:inline} $1_option_spec_is_some'$4_collection_UnlimitedSupply'(t: $1_option_Option'$4_collection_UnlimitedSupply'): bool {
    !$1_vector_$is_empty'$4_collection_UnlimitedSupply'(t->$vec)
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:111:10+78
function {:inline} $1_option_spec_borrow'u64'(t: $1_option_Option'u64'): int {
    ReadVec(t->$vec, 0)
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:111:10+78
function {:inline} $1_option_spec_borrow'$4_royalty_Royalty'(t: $1_option_Option'$4_royalty_Royalty'): $4_royalty_Royalty {
    ReadVec(t->$vec, 0)
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:111:10+78
function {:inline} $1_option_spec_borrow'$4_collection_UnlimitedSupply'(t: $1_option_Option'$4_collection_UnlimitedSupply'): $4_collection_UnlimitedSupply {
    ReadVec(t->$vec, 0)
}

// struct option::Option<u64> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'u64' {
    $1_option_Option'u64'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'u64''_vec(s: $1_option_Option'u64', x: Vec (int)): $1_option_Option'u64' {
    $1_option_Option'u64'(x)
}
function $IsValid'$1_option_Option'u64''(s: $1_option_Option'u64'): bool {
    $IsValid'vec'u64''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'u64''(s1: $1_option_Option'u64', s2: $1_option_Option'u64'): bool {
    $IsEqual'vec'u64''(s1->$vec, s2->$vec)}

// struct option::Option<royalty::Royalty> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'$4_royalty_Royalty' {
    $1_option_Option'$4_royalty_Royalty'($vec: Vec ($4_royalty_Royalty))
}
function {:inline} $Update'$1_option_Option'$4_royalty_Royalty''_vec(s: $1_option_Option'$4_royalty_Royalty', x: Vec ($4_royalty_Royalty)): $1_option_Option'$4_royalty_Royalty' {
    $1_option_Option'$4_royalty_Royalty'(x)
}
function $IsValid'$1_option_Option'$4_royalty_Royalty''(s: $1_option_Option'$4_royalty_Royalty'): bool {
    $IsValid'vec'$4_royalty_Royalty''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$4_royalty_Royalty''(s1: $1_option_Option'$4_royalty_Royalty', s2: $1_option_Option'$4_royalty_Royalty'): bool {
    $IsEqual'vec'$4_royalty_Royalty''(s1->$vec, s2->$vec)}

// struct option::Option<collection::UnlimitedSupply> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'$4_collection_UnlimitedSupply' {
    $1_option_Option'$4_collection_UnlimitedSupply'($vec: Vec ($4_collection_UnlimitedSupply))
}
function {:inline} $Update'$1_option_Option'$4_collection_UnlimitedSupply''_vec(s: $1_option_Option'$4_collection_UnlimitedSupply', x: Vec ($4_collection_UnlimitedSupply)): $1_option_Option'$4_collection_UnlimitedSupply' {
    $1_option_Option'$4_collection_UnlimitedSupply'(x)
}
function $IsValid'$1_option_Option'$4_collection_UnlimitedSupply''(s: $1_option_Option'$4_collection_UnlimitedSupply'): bool {
    $IsValid'vec'$4_collection_UnlimitedSupply''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$4_collection_UnlimitedSupply''(s1: $1_option_Option'$4_collection_UnlimitedSupply', s2: $1_option_Option'$4_collection_UnlimitedSupply'): bool {
    $IsEqual'vec'$4_collection_UnlimitedSupply''(s1->$vec, s2->$vec)}

// struct string::String at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:13:5+70
datatype $1_string_String {
    $1_string_String($bytes: Vec (int))
}
function {:inline} $Update'$1_string_String'_bytes(s: $1_string_String, x: Vec (int)): $1_string_String {
    $1_string_String(x)
}
function $IsValid'$1_string_String'(s: $1_string_String): bool {
    $IsValid'vec'u8''(s->$bytes)
}
function {:inline} $IsEqual'$1_string_String'(s1: $1_string_String, s2: $1_string_String): bool {
    $IsEqual'vec'u8''(s1->$bytes, s2->$bytes)}

// fun string::length [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:43:5+75
procedure {:inline 1} $1_string_length(_$t0: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: int;
    var $t3: int;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:43:5+1
    assume {:print "$at(14,1295,1296)"} true;
    assume {:print "$track_local(2,10,0):", $t0} $t0 == $t0;

    // $t1 := get_field<string::String>.bytes($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:44:24+8
    assume {:print "$at(14,1355,1363)"} true;
    $t1 := $t0->$bytes;

    // $t2 := vector::length<u8>($t1) on_abort goto L2 with $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:44:9+24
    call $t2 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(14,1340,1364)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(2,10):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:44:9+24
    assume {:print "$track_return(2,10,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:45:5+1
    assume {:print "$at(14,1369,1370)"} true;
L1:

    // return $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:45:5+1
    assume {:print "$at(14,1369,1370)"} true;
    $ret0 := $t2;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:45:5+1
L2:

    // abort($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:45:5+1
    assume {:print "$at(14,1369,1370)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun string::bytes [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:33:5+66
procedure {:inline 1} $1_string_bytes(_$t0: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: Vec (int);
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:33:5+1
    assume {:print "$at(14,1039,1040)"} true;
    assume {:print "$track_local(2,2,0):", $t0} $t0 == $t0;

    // $t1 := get_field<string::String>.bytes($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:34:9+8
    assume {:print "$at(14,1091,1099)"} true;
    $t1 := $t0->$bytes;

    // trace_return[0]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:34:9+8
    assume {:print "$track_return(2,2,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:35:5+1
    assume {:print "$at(14,1104,1105)"} true;
L1:

    // return $t1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:35:5+1
    assume {:print "$at(14,1104,1105)"} true;
    $ret0 := $t1;
    return;

}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:12:5+77
function {:inline} $1_signer_$address_of(s: $signer): int {
    $1_signer_$borrow_address(s)
}

// fun signer::address_of [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:12:5+77
procedure {:inline 1} $1_signer_address_of(_$t0: $signer) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:12:5+1
    assume {:print "$at(13,396,397)"} true;
    assume {:print "$track_local(3,0,0):", $t0} $t0 == $t0;

    // $t1 := signer::borrow_address($t0) on_abort goto L2 with $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:13:10+17
    assume {:print "$at(13,450,467)"} true;
    call $t1 := $1_signer_borrow_address($t0);
    if ($abort_flag) {
        assume {:print "$at(13,450,467)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(3,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:13:9+18
    assume {:print "$track_return(3,0,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:14:5+1
    assume {:print "$at(13,472,473)"} true;
L1:

    // return $t1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:14:5+1
    assume {:print "$at(13,472,473)"} true;
    $ret0 := $t1;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:14:5+1
L2:

    // abort($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:14:5+1
    assume {:print "$at(13,472,473)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun error::already_exists [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:3+71
procedure {:inline 1} $1_error_already_exists(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:3+1
    assume {:print "$at(9,3585,3586)"} true;
    assume {:print "$track_local(4,1,0):", $t0} $t0 == $t0;

    // $t1 := 8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:54+14
    $t1 := 8;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28
    assume {:print "$at(9,3626,3654)"} true;

    // assume WellFormed($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28

    // trace_return[0]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28
    assume {:print "$track_return(4,1,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:73+1
L1:

    // return $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:73+1
    assume {:print "$at(9,3655,3656)"} true;
    $ret0 := $t3;
    return;

}

// fun error::not_found [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:3+61
procedure {:inline 1} $1_error_not_found(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:3+1
    assume {:print "$at(9,3461,3462)"} true;
    assume {:print "$track_local(4,6,0):", $t0} $t0 == $t0;

    // $t1 := 6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:49+9
    $t1 := 6;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23
    assume {:print "$at(9,3497,3520)"} true;

    // assume WellFormed($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23

    // trace_return[0]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23
    assume {:print "$track_return(4,6,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:63+1
L1:

    // return $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:63+1
    assume {:print "$at(9,3521,3522)"} true;
    $ret0 := $t3;
    return;

}

// fun error::out_of_range [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:3+68
procedure {:inline 1} $1_error_out_of_range(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:3+1
    assume {:print "$at(9,3161,3162)"} true;
    assume {:print "$track_local(4,8,0):", $t0} $t0 == $t0;

    // $t1 := 2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:53+12
    $t1 := 2;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26
    assume {:print "$at(9,3201,3227)"} true;

    // assume WellFormed($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26

    // trace_return[0]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26
    assume {:print "$track_return(4,8,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:70+1
L1:

    // return $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:70+1
    assume {:print "$at(9,3228,3229)"} true;
    $ret0 := $t3;
    return;

}

// fun error::permission_denied [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:3+77
procedure {:inline 1} $1_error_permission_denied(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:3+1
    assume {:print "$at(9,3381,3382)"} true;
    assume {:print "$track_local(4,9,0):", $t0} $t0 == $t0;

    // $t1 := 5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:57+17
    $t1 := 5;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31
    assume {:print "$at(9,3425,3456)"} true;

    // assume WellFormed($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31

    // trace_return[0]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31
    assume {:print "$track_return(4,9,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:79+1
L1:

    // return $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:79+1
    assume {:print "$at(9,3457,3458)"} true;
    $ret0 := $t3;
    return;

}

// struct guid::GUID at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:7:5+50
datatype $1_guid_GUID {
    $1_guid_GUID($id: $1_guid_ID)
}
function {:inline} $Update'$1_guid_GUID'_id(s: $1_guid_GUID, x: $1_guid_ID): $1_guid_GUID {
    $1_guid_GUID(x)
}
function $IsValid'$1_guid_GUID'(s: $1_guid_GUID): bool {
    $IsValid'$1_guid_ID'(s->$id)
}
function {:inline} $IsEqual'$1_guid_GUID'(s1: $1_guid_GUID, s2: $1_guid_GUID): bool {
    s1 == s2
}

// struct guid::ID at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:12:5+209
datatype $1_guid_ID {
    $1_guid_ID($creation_num: int, $addr: int)
}
function {:inline} $Update'$1_guid_ID'_creation_num(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(x, s->$addr)
}
function {:inline} $Update'$1_guid_ID'_addr(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(s->$creation_num, x)
}
function $IsValid'$1_guid_ID'(s: $1_guid_ID): bool {
    $IsValid'u64'(s->$creation_num)
      && $IsValid'address'(s->$addr)
}
function {:inline} $IsEqual'$1_guid_ID'(s1: $1_guid_ID, s2: $1_guid_ID): bool {
    s1 == s2
}

// fun guid::create [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:23:5+286
procedure {:inline 1} $1_guid_create(_$t0: int, _$t1: $Mutation (int)) returns ($ret0: $1_guid_GUID, $ret1: $Mutation (int))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_guid_ID;
    var $t8: $1_guid_GUID;
    var $t0: int;
    var $t1: $Mutation (int);
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[addr]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:23:5+1
    assume {:print "$at(118,836,837)"} true;
    assume {:print "$track_local(13,0,0):", $t0} $t0 == $t0;

    // trace_local[creation_num_ref]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:23:5+1
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t3 := read_ref($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:24:28+17
    assume {:print "$at(118,940,957)"} true;
    $t3 := $Dereference($t1);

    // trace_local[creation_num]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:24:13+12
    assume {:print "$track_local(13,0,2):", $t3} $t3 == $t3;

    // $t4 := 1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:25:44+1
    assume {:print "$at(118,1002,1003)"} true;
    $t4 := 1;
    assume $IsValid'u64'($t4);

    // $t5 := +($t3, $t4) on_abort goto L2 with $t6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:25:42+1
    call $t5 := $AddU64($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(118,1000,1001)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(13,0):", $t6} $t6 == $t6;
        goto L2;
    }

    // write_ref($t1, $t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:25:9+36
    $t1 := $UpdateMutation($t1, $t5);

    // $t7 := pack guid::ID($t3, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:27:17+70
    assume {:print "$at(118,1036,1106)"} true;
    $t7 := $1_guid_ID($t3, $t0);

    // $t8 := pack guid::GUID($t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:26:9+103
    assume {:print "$at(118,1013,1116)"} true;
    $t8 := $1_guid_GUID($t7);

    // trace_return[0]($t8) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:26:9+103
    assume {:print "$track_return(13,0,0):", $t8} $t8 == $t8;

    // trace_local[creation_num_ref]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:26:9+103
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:32:5+1
    assume {:print "$at(118,1121,1122)"} true;
L1:

    // return $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:32:5+1
    assume {:print "$at(118,1121,1122)"} true;
    $ret0 := $t8;
    $ret1 := $t1;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:32:5+1
L2:

    // abort($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\guid.move:32:5+1
    assume {:print "$at(118,1121,1122)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u8'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u8'(bytes);
$IsValid'u8'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u64'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u64'(bytes);
$IsValid'u64'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u256'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u256'(bytes);
$IsValid'u256'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'address'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'address'(bytes);
$IsValid'address'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'signer'(bytes: Vec (int)): $signer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'signer'(bytes);
$IsValid'signer'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u8''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u8''(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u64''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u64''(bytes);
$IsValid'vec'u64''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'address''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'address''(bytes);
$IsValid'vec'address''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_string_String''(bytes: Vec (int)): Vec ($1_string_String);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_string_String''(bytes);
$IsValid'vec'$1_string_String''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$4_royalty_Royalty''(bytes: Vec (int)): Vec ($4_royalty_Royalty);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$4_royalty_Royalty''(bytes);
$IsValid'vec'$4_royalty_Royalty''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$4_collection_UnlimitedSupply''(bytes: Vec (int)): Vec ($4_collection_UnlimitedSupply);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$4_collection_UnlimitedSupply''(bytes);
$IsValid'vec'$4_collection_UnlimitedSupply''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(bytes: Vec (int)): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(bytes);
$IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(bytes: Vec (int)): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(bytes);
$IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(bytes: Vec (int)): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(bytes);
$IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(bytes: Vec (int)): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(bytes);
$IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(bytes: Vec (int)): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(bytes);
$IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(bytes: Vec (int)): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(bytes);
$IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(bytes: Vec (int)): Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(bytes);
$IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'#0''(bytes: Vec (int)): Vec (#0);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'#0''(bytes);
$IsValid'vec'#0''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'u64''(bytes: Vec (int)): $1_option_Option'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'u64''(bytes);
$IsValid'$1_option_Option'u64''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(bytes: Vec (int)): $1_option_Option'$4_royalty_Royalty';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(bytes);
$IsValid'$1_option_Option'$4_royalty_Royalty''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$4_collection_UnlimitedSupply''(bytes: Vec (int)): $1_option_Option'$4_collection_UnlimitedSupply';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$4_collection_UnlimitedSupply''(bytes);
$IsValid'$1_option_Option'$4_collection_UnlimitedSupply''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_String'(bytes: Vec (int)): $1_string_String;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_String'(bytes);
$IsValid'$1_string_String'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_GUID'(bytes: Vec (int)): $1_guid_GUID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_GUID'(bytes);
$IsValid'$1_guid_GUID'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_ID'(bytes: Vec (int)): $1_guid_ID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_ID'(bytes);
$IsValid'$1_guid_ID'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_object_TransferEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_object_TransferEvent''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_collection_BurnEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_collection_BurnEvent''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_collection_MintEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_collection_MintEvent''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_collection_MutationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_collection_MutationEvent''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_token_MutationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_token_MutationEvent''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): $1_chain_status_GenesisEndMarker;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'$1_chain_status_GenesisEndMarker'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): $1_timestamp_CurrentTimeMicroseconds;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'$1_timestamp_CurrentTimeMicroseconds'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(bytes: Vec (int)): Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(bytes);
$IsValid'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(bytes: Vec (int)): Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(bytes);
$IsValid'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes: Vec (int)): $1_reconfiguration_Configuration;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes);
$IsValid'$1_reconfiguration_Configuration'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(bytes: Vec (int)): $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(bytes);
$IsValid'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(bytes: Vec (int)): $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(bytes);
$IsValid'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(bytes: Vec (int)): $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(bytes);
$IsValid'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_utils_NIL'(bytes: Vec (int)): $1_string_utils_NIL;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_utils_NIL'(bytes);
$IsValid'$1_string_utils_NIL'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes: Vec (int)): $1_object_ConstructorRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes);
$IsValid'$1_object_ConstructorRef'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_LinearTransferRef'(bytes: Vec (int)): $1_object_LinearTransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_LinearTransferRef'(bytes);
$IsValid'$1_object_LinearTransferRef'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$1_object_ObjectCore''(bytes: Vec (int)): $1_object_Object'$1_object_ObjectCore';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$1_object_ObjectCore''(bytes);
$IsValid'$1_object_Object'$1_object_ObjectCore''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(bytes: Vec (int)): $1_object_Object'$4_collection_Collection';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(bytes);
$IsValid'$1_object_Object'$4_collection_Collection''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$4_token_Token''(bytes: Vec (int)): $1_object_Object'$4_token_Token';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$4_token_Token''(bytes);
$IsValid'$1_object_Object'$4_token_Token''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes: Vec (int)): $1_object_ObjectCore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes);
$IsValid'$1_object_ObjectCore'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes: Vec (int)): $1_object_TransferEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes);
$IsValid'$1_object_TransferEvent'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferRef'(bytes: Vec (int)): $1_object_TransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferRef'(bytes);
$IsValid'$1_object_TransferRef'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_royalty_Royalty'(bytes: Vec (int)): $4_royalty_Royalty;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_royalty_Royalty'(bytes);
$IsValid'$4_royalty_Royalty'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_Collection'(bytes: Vec (int)): $4_collection_Collection;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_Collection'(bytes);
$IsValid'$4_collection_Collection'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_FixedSupply'(bytes: Vec (int)): $4_collection_FixedSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_FixedSupply'(bytes);
$IsValid'$4_collection_FixedSupply'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_MintEvent'(bytes: Vec (int)): $4_collection_MintEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_MintEvent'(bytes);
$IsValid'$4_collection_MintEvent'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(bytes: Vec (int)): $4_collection_UnlimitedSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(bytes);
$IsValid'$4_collection_UnlimitedSupply'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_token_Token'(bytes: Vec (int)): $4_token_Token;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_token_Token'(bytes);
$IsValid'$4_token_Token'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'(bytes: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'(bytes);
$IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(bytes: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(bytes);
$IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(bytes: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(bytes);
$IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'(bytes: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'(bytes);
$IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(bytes: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(bytes);
$IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(bytes: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(bytes);
$IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(bytes: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(bytes);
$IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(bytes: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(bytes);
$IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(bytes: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(bytes);
$IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'(bytes: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'(bytes);
$IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'(bytes: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'(bytes);
$IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'(bytes: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'(bytes);
$IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'#0'(bytes: Vec (int)): #0;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'#0'(bytes);
$IsValid'#0'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u8'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u8'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u64'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u64'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u256'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u256'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'address'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'address'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'signer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'signer'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u8''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u8''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_string_String''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_string_String''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$4_royalty_Royalty''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$4_royalty_Royalty''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$4_collection_UnlimitedSupply''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$4_collection_UnlimitedSupply''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$4_collection_UnlimitedSupply''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$4_collection_UnlimitedSupply''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_String'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_String'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_GUID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_GUID'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_ID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_ID'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_utils_NIL'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_utils_NIL'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_LinearTransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_LinearTransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$1_object_ObjectCore''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$1_object_ObjectCore''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$4_token_Token''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$4_token_Token''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_royalty_Royalty'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_royalty_Royalty'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_Collection'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_Collection'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_FixedSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_FixedSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_MintEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_MintEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_token_Token'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_token_Token'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'#0'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'#0'(bytes);
$IsValid'bool'($$res)));

// fun from_bcs::to_address [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:47:5+84
procedure {:inline 1} $1_from_bcs_to_address(_$t0: Vec (int)) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t0: Vec (int);
    var $temp_0'address': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[v]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:47:5+1
    assume {:print "$at(48,1348,1349)"} true;
    assume {:print "$track_local(14,1,0):", $t0} $t0 == $t0;

    // $t1 := opaque begin: from_bcs::from_bytes<address>($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:48:9+22
    assume {:print "$at(48,1404,1426)"} true;

    // assume Identical($t2, Not(from_bcs::deserializable<address>($t0))) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:48:9+22
    assume ($t2 == !$1_from_bcs_deserializable'address'($t0));

    // if ($t2) goto L4 else goto L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:48:9+22
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:48:9+22
L4:

    // trace_abort($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:48:9+22
    assume {:print "$at(48,1404,1426)"} true;
    assume {:print "$track_abort(14,1):", $t3} $t3 == $t3;

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:48:9+22
    goto L2;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:48:9+22
L3:

    // assume WellFormed($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:48:9+22
    assume {:print "$at(48,1404,1426)"} true;
    assume $IsValid'address'($t1);

    // assume Eq<address>($t1, from_bcs::deserialize<address>($t0)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:48:9+22
    assume $IsEqual'address'($t1, $1_from_bcs_deserialize'address'($t0));

    // $t1 := opaque end: from_bcs::from_bytes<address>($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:48:9+22

    // trace_return[0]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:48:9+22
    assume {:print "$track_return(14,1,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:49:5+1
    assume {:print "$at(48,1431,1432)"} true;
L1:

    // return $t1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:49:5+1
    assume {:print "$at(48,1431,1432)"} true;
    $ret0 := $t1;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:49:5+1
L2:

    // abort($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.move:49:5+1
    assume {:print "$at(48,1431,1432)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// struct event::EventHandle<reconfiguration::NewEpochEvent> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:16:5+224
datatype $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_counter(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: int): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_guid(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s1: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', s2: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<object::TransferEvent> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:16:5+224
datatype $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_counter(s: $1_event_EventHandle'$1_object_TransferEvent', x: int): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_guid(s: $1_event_EventHandle'$1_object_TransferEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''(s1: $1_event_EventHandle'$1_object_TransferEvent', s2: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<collection::BurnEvent> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:16:5+224
datatype $1_event_EventHandle'$4_collection_BurnEvent' {
    $1_event_EventHandle'$4_collection_BurnEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_BurnEvent''_counter(s: $1_event_EventHandle'$4_collection_BurnEvent', x: int): $1_event_EventHandle'$4_collection_BurnEvent' {
    $1_event_EventHandle'$4_collection_BurnEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_BurnEvent''_guid(s: $1_event_EventHandle'$4_collection_BurnEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_collection_BurnEvent' {
    $1_event_EventHandle'$4_collection_BurnEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_collection_BurnEvent''(s: $1_event_EventHandle'$4_collection_BurnEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_collection_BurnEvent''(s1: $1_event_EventHandle'$4_collection_BurnEvent', s2: $1_event_EventHandle'$4_collection_BurnEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<collection::MintEvent> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:16:5+224
datatype $1_event_EventHandle'$4_collection_MintEvent' {
    $1_event_EventHandle'$4_collection_MintEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MintEvent''_counter(s: $1_event_EventHandle'$4_collection_MintEvent', x: int): $1_event_EventHandle'$4_collection_MintEvent' {
    $1_event_EventHandle'$4_collection_MintEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MintEvent''_guid(s: $1_event_EventHandle'$4_collection_MintEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_collection_MintEvent' {
    $1_event_EventHandle'$4_collection_MintEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_collection_MintEvent''(s: $1_event_EventHandle'$4_collection_MintEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_collection_MintEvent''(s1: $1_event_EventHandle'$4_collection_MintEvent', s2: $1_event_EventHandle'$4_collection_MintEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<collection::MutationEvent> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:16:5+224
datatype $1_event_EventHandle'$4_collection_MutationEvent' {
    $1_event_EventHandle'$4_collection_MutationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MutationEvent''_counter(s: $1_event_EventHandle'$4_collection_MutationEvent', x: int): $1_event_EventHandle'$4_collection_MutationEvent' {
    $1_event_EventHandle'$4_collection_MutationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MutationEvent''_guid(s: $1_event_EventHandle'$4_collection_MutationEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_collection_MutationEvent' {
    $1_event_EventHandle'$4_collection_MutationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_collection_MutationEvent''(s: $1_event_EventHandle'$4_collection_MutationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_collection_MutationEvent''(s1: $1_event_EventHandle'$4_collection_MutationEvent', s2: $1_event_EventHandle'$4_collection_MutationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<token::MutationEvent> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:16:5+224
datatype $1_event_EventHandle'$4_token_MutationEvent' {
    $1_event_EventHandle'$4_token_MutationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_token_MutationEvent''_counter(s: $1_event_EventHandle'$4_token_MutationEvent', x: int): $1_event_EventHandle'$4_token_MutationEvent' {
    $1_event_EventHandle'$4_token_MutationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_token_MutationEvent''_guid(s: $1_event_EventHandle'$4_token_MutationEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_token_MutationEvent' {
    $1_event_EventHandle'$4_token_MutationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_token_MutationEvent''(s: $1_event_EventHandle'$4_token_MutationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_token_MutationEvent''(s1: $1_event_EventHandle'$4_token_MutationEvent', s2: $1_event_EventHandle'$4_token_MutationEvent'): bool {
    s1 == s2
}

// fun event::new_event_handle<object::TransferEvent> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_object_TransferEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_object_TransferEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_object_TransferEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_object_TransferEvent'': $1_event_EventHandle'$1_object_TransferEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_object_TransferEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<collection::BurnEvent> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_collection_BurnEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_collection_BurnEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_collection_BurnEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_collection_BurnEvent'': $1_event_EventHandle'$4_collection_BurnEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$4_collection_BurnEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<collection::MintEvent> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_collection_MintEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_collection_MintEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_collection_MintEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_collection_MintEvent'': $1_event_EventHandle'$4_collection_MintEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$4_collection_MintEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<collection::MutationEvent> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_collection_MutationEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_collection_MutationEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_collection_MutationEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_collection_MutationEvent'': $1_event_EventHandle'$4_collection_MutationEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$4_collection_MutationEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<token::MutationEvent> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_token_MutationEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_token_MutationEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_token_MutationEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_token_MutationEvent'': $1_event_EventHandle'$4_token_MutationEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$4_token_MutationEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\chain_status.move:35:5+90
function {:inline} $1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker): bool {
    $ResourceExists($1_chain_status_GenesisEndMarker_$memory, 1)
}

// struct chain_status::GenesisEndMarker at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\chain_status.move:12:5+34
datatype $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker($dummy_field: bool)
}
function {:inline} $Update'$1_chain_status_GenesisEndMarker'_dummy_field(s: $1_chain_status_GenesisEndMarker, x: bool): $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker(x)
}
function $IsValid'$1_chain_status_GenesisEndMarker'(s: $1_chain_status_GenesisEndMarker): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_chain_status_GenesisEndMarker'(s1: $1_chain_status_GenesisEndMarker, s2: $1_chain_status_GenesisEndMarker): bool {
    s1 == s2
}
var $1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker;

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.spec.move:22:10+111
function {:inline} $1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds): int {
    $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, 1)->$microseconds
}

// struct timestamp::CurrentTimeMicroseconds at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:12:5+73
datatype $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds($microseconds: int)
}
function {:inline} $Update'$1_timestamp_CurrentTimeMicroseconds'_microseconds(s: $1_timestamp_CurrentTimeMicroseconds, x: int): $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds(x)
}
function $IsValid'$1_timestamp_CurrentTimeMicroseconds'(s: $1_timestamp_CurrentTimeMicroseconds): bool {
    $IsValid'u64'(s->$microseconds)
}
function {:inline} $IsEqual'$1_timestamp_CurrentTimeMicroseconds'(s1: $1_timestamp_CurrentTimeMicroseconds, s2: $1_timestamp_CurrentTimeMicroseconds): bool {
    s1 == s2
}
var $1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds;

// fun timestamp::now_microseconds [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:61:5+153
procedure {:inline 1} $1_timestamp_now_microseconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: $1_timestamp_CurrentTimeMicroseconds;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := 0x1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:62:48+16
    assume {:print "$at(143,2511,2527)"} true;
    $t0 := 1;
    assume $IsValid'address'($t0);

    // $t1 := get_global<timestamp::CurrentTimeMicroseconds>($t0) on_abort goto L2 with $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:62:9+13
    if (!$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t1 := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(143,2472,2485)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(28,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_field<timestamp::CurrentTimeMicroseconds>.microseconds($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:62:9+69
    $t3 := $t1->$microseconds;

    // trace_return[0]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:62:9+69
    assume {:print "$track_return(28,0,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:63:5+1
    assume {:print "$at(143,2546,2547)"} true;
L1:

    // return $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:63:5+1
    assume {:print "$at(143,2546,2547)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:63:5+1
L2:

    // abort($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:63:5+1
    assume {:print "$at(143,2546,2547)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun timestamp::now_seconds [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:67:5+123
procedure {:inline 1} $1_timestamp_now_seconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := timestamp::now_microseconds() on_abort goto L2 with $t1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:68:9+18
    assume {:print "$at(143,2680,2698)"} true;
    call $t0 := $1_timestamp_now_microseconds();
    if ($abort_flag) {
        assume {:print "$at(143,2680,2698)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(28,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := 1000000 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:68:30+23
    $t2 := 1000000;
    assume $IsValid'u64'($t2);

    // $t3 := /($t0, $t2) on_abort goto L2 with $t1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:68:28+1
    call $t3 := $Div($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(143,2699,2700)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(28,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // trace_return[0]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:68:9+44
    assume {:print "$track_return(28,1,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:69:5+1
    assume {:print "$at(143,2729,2730)"} true;
L1:

    // return $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:69:5+1
    assume {:print "$at(143,2729,2730)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:69:5+1
L2:

    // abort($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.move:69:5+1
    assume {:print "$at(143,2729,2730)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:7:9+50
function  $1_aptos_hash_spec_keccak256(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_keccak256(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:12:9+58
function  $1_aptos_hash_spec_sha2_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha2_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:17:9+58
function  $1_aptos_hash_spec_sha3_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha3_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:22:9+59
function  $1_aptos_hash_spec_ripemd160_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_ripemd160_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:27:9+61
function  $1_aptos_hash_spec_blake2b_256_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_blake2b_256_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\reconfiguration.move:154:5+155
function {:inline} $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration): int {
    $ResourceValue($1_reconfiguration_Configuration_$memory, 1)->$last_reconfiguration_time
}

// struct reconfiguration::Configuration at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\reconfiguration.move:33:5+306
datatype $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration($epoch: int, $last_reconfiguration_time: int, $events: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent')
}
function {:inline} $Update'$1_reconfiguration_Configuration'_epoch(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(x, s->$last_reconfiguration_time, s->$events)
}
function {:inline} $Update'$1_reconfiguration_Configuration'_last_reconfiguration_time(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(s->$epoch, x, s->$events)
}
function {:inline} $Update'$1_reconfiguration_Configuration'_events(s: $1_reconfiguration_Configuration, x: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(s->$epoch, s->$last_reconfiguration_time, x)
}
function $IsValid'$1_reconfiguration_Configuration'(s: $1_reconfiguration_Configuration): bool {
    $IsValid'u64'(s->$epoch)
      && $IsValid'u64'(s->$last_reconfiguration_time)
      && $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s->$events)
}
function {:inline} $IsEqual'$1_reconfiguration_Configuration'(s1: $1_reconfiguration_Configuration, s2: $1_reconfiguration_Configuration): bool {
    s1 == s2
}
var $1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration;

// struct reconfiguration::NewEpochEvent at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\reconfiguration.move:28:5+64
datatype $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent($epoch: int)
}
function {:inline} $Update'$1_reconfiguration_NewEpochEvent'_epoch(s: $1_reconfiguration_NewEpochEvent, x: int): $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent(x)
}
function $IsValid'$1_reconfiguration_NewEpochEvent'(s: $1_reconfiguration_NewEpochEvent): bool {
    $IsValid'u64'(s->$epoch)
}
function {:inline} $IsEqual'$1_reconfiguration_NewEpochEvent'(s1: $1_reconfiguration_NewEpochEvent, s2: $1_reconfiguration_NewEpochEvent): bool {
    s1 == s2
}

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.spec.move:54:10+120
function  $1_string_utils_spec_native_format'address'(s: int, type_tag: bool, canonicalize: bool, single_line: bool, include_int_types: bool): $1_string_String;
axiom (forall s: int, type_tag: bool, canonicalize: bool, single_line: bool, include_int_types: bool ::
(var $$res := $1_string_utils_spec_native_format'address'(s, type_tag, canonicalize, single_line, include_int_types);
$IsValid'$1_string_String'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.spec.move:54:10+120
function  $1_string_utils_spec_native_format'vec'u8''(s: Vec (int), type_tag: bool, canonicalize: bool, single_line: bool, include_int_types: bool): $1_string_String;
axiom (forall s: Vec (int), type_tag: bool, canonicalize: bool, single_line: bool, include_int_types: bool ::
(var $$res := $1_string_utils_spec_native_format'vec'u8''(s, type_tag, canonicalize, single_line, include_int_types);
$IsValid'$1_string_String'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.spec.move:55:10+64
function  $1_string_utils_spec_native_format_list'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(fmt: Vec (int), val: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''): $1_string_String;
axiom (forall fmt: Vec (int), val: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''' ::
(var $$res := $1_string_utils_spec_native_format_list'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(fmt, val);
$IsValid'$1_string_String'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.spec.move:55:10+64
function  $1_string_utils_spec_native_format_list'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(fmt: Vec (int), val: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''): $1_string_String;
axiom (forall fmt: Vec (int), val: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'' ::
(var $$res := $1_string_utils_spec_native_format_list'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(fmt, val);
$IsValid'$1_string_String'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.spec.move:56:10+70
function  $1_string_utils_args_mismatch_or_invalid_format'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(fmt: Vec (int), val: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''): bool;
axiom (forall fmt: Vec (int), val: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''' ::
(var $$res := $1_string_utils_args_mismatch_or_invalid_format'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(fmt, val);
$IsValid'bool'($$res)));

// spec fun at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.spec.move:56:10+70
function  $1_string_utils_args_mismatch_or_invalid_format'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(fmt: Vec (int), val: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''): bool;
axiom (forall fmt: Vec (int), val: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'' ::
(var $$res := $1_string_utils_args_mismatch_or_invalid_format'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(fmt, val);
$IsValid'bool'($$res)));

// struct string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::NIL>>> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:51:5+79
datatype $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''($car: $1_string_String, $cdr: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'')
}
function {:inline} $Update'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''_car(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''', x: $1_string_String): $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(x, s->$cdr)
}
function {:inline} $Update'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''_cdr(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''', x: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''): $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(s->$car, x)
}
function $IsValid'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''): bool {
    $IsValid'$1_string_String'(s->$car)
      && $IsValid'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(s->$cdr)
}
function {:inline} $IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''(s1: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''', s2: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''): bool {
    $IsEqual'$1_string_String'(s1->$car, s2->$car)
    && $IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(s1->$cdr, s2->$cdr)}

// struct string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::NIL>> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:51:5+79
datatype $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''($car: $1_string_String, $cdr: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL')
}
function {:inline} $Update'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''_car(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'', x: $1_string_String): $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(x, s->$cdr)
}
function {:inline} $Update'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''_cdr(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'', x: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'): $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(s->$car, x)
}
function $IsValid'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''): bool {
    $IsValid'$1_string_String'(s->$car)
      && $IsValid'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(s->$cdr)
}
function {:inline} $IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(s1: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'', s2: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''): bool {
    $IsEqual'$1_string_String'(s1->$car, s2->$car)
    && $IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(s1->$cdr, s2->$cdr)}

// struct string_utils::Cons<string::String, string_utils::NIL> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:51:5+79
datatype $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'($car: $1_string_String, $cdr: $1_string_utils_NIL)
}
function {:inline} $Update'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''_car(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL', x: $1_string_String): $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'(x, s->$cdr)
}
function {:inline} $Update'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''_cdr(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL', x: $1_string_utils_NIL): $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL' {
    $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'(s->$car, x)
}
function $IsValid'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(s: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'): bool {
    $IsValid'$1_string_String'(s->$car)
      && $IsValid'$1_string_utils_NIL'(s->$cdr)
}
function {:inline} $IsEqual'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(s1: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL', s2: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'): bool {
    $IsEqual'$1_string_String'(s1->$car, s2->$car)
    && $IsEqual'$1_string_utils_NIL'(s1->$cdr, s2->$cdr)}

// struct string_utils::NIL at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:56:5+35
datatype $1_string_utils_NIL {
    $1_string_utils_NIL($dummy_field: bool)
}
function {:inline} $Update'$1_string_utils_NIL'_dummy_field(s: $1_string_utils_NIL, x: bool): $1_string_utils_NIL {
    $1_string_utils_NIL(x)
}
function $IsValid'$1_string_utils_NIL'(s: $1_string_utils_NIL): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_string_utils_NIL'(s1: $1_string_utils_NIL, s2: $1_string_utils_NIL): bool {
    s1 == s2
}

// fun string_utils::to_string<address> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:17:5+98
procedure {:inline 1} $1_string_utils_to_string'address'(_$t0: int) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: bool;
    var $t4: bool;
    var $t5: $1_string_String;
    var $t0: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:17:5+1
    assume {:print "$at(64,930,931)"} true;
    assume {:print "$track_local(53,9,0):", $t0} $t0 == $t0;

    // $t1 := false at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:26+5
    assume {:print "$at(64,996,1001)"} true;
    $t1 := false;
    assume $IsValid'bool'($t1);

    // $t2 := false at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:33+5
    $t2 := false;
    assume $IsValid'bool'($t2);

    // $t3 := true at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:40+4
    $t3 := true;
    assume $IsValid'bool'($t3);

    // $t4 := false at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:46+5
    $t4 := false;
    assume $IsValid'bool'($t4);

    // $t5 := opaque begin: string_utils::native_format<#0>($t0, $t1, $t2, $t3, $t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43

    // assume WellFormed($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43
    assume $IsValid'$1_string_String'($t5);

    // assume Eq<string::String>($t5, string_utils::spec_native_format<#0>($t0, $t1, $t2, $t3, $t4)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43
    assume $IsEqual'$1_string_String'($t5, $1_string_utils_spec_native_format'address'($t0, $t1, $t2, $t3, $t4));

    // $t5 := opaque end: string_utils::native_format<#0>($t0, $t1, $t2, $t3, $t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43

    // trace_return[0]($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43
    assume {:print "$track_return(53,9,0):", $t5} $t5 == $t5;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:19:5+1
    assume {:print "$at(64,1027,1028)"} true;
L1:

    // return $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:19:5+1
    assume {:print "$at(64,1027,1028)"} true;
    $ret0 := $t5;
    return;

}

// fun string_utils::to_string<vector<u8>> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:17:5+98
procedure {:inline 1} $1_string_utils_to_string'vec'u8''(_$t0: Vec (int)) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: bool;
    var $t4: bool;
    var $t5: $1_string_String;
    var $t0: Vec (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:17:5+1
    assume {:print "$at(64,930,931)"} true;
    assume {:print "$track_local(53,9,0):", $t0} $t0 == $t0;

    // $t1 := false at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:26+5
    assume {:print "$at(64,996,1001)"} true;
    $t1 := false;
    assume $IsValid'bool'($t1);

    // $t2 := false at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:33+5
    $t2 := false;
    assume $IsValid'bool'($t2);

    // $t3 := true at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:40+4
    $t3 := true;
    assume $IsValid'bool'($t3);

    // $t4 := false at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:46+5
    $t4 := false;
    assume $IsValid'bool'($t4);

    // $t5 := opaque begin: string_utils::native_format<#0>($t0, $t1, $t2, $t3, $t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43

    // assume WellFormed($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43
    assume $IsValid'$1_string_String'($t5);

    // assume Eq<string::String>($t5, string_utils::spec_native_format<#0>($t0, $t1, $t2, $t3, $t4)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43
    assume $IsEqual'$1_string_String'($t5, $1_string_utils_spec_native_format'vec'u8''($t0, $t1, $t2, $t3, $t4));

    // $t5 := opaque end: string_utils::native_format<#0>($t0, $t1, $t2, $t3, $t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43

    // trace_return[0]($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43
    assume {:print "$track_return(53,9,0):", $t5} $t5 == $t5;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:19:5+1
    assume {:print "$at(64,1027,1028)"} true;
L1:

    // return $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:19:5+1
    assume {:print "$at(64,1027,1028)"} true;
    $ret0 := $t5;
    return;

}

// fun string_utils::cons<string::String, string_utils::Cons<string::String, string_utils::Cons<string::String, string_utils::NIL>>> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:5+64
procedure {:inline 1} $1_string_utils_cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''(_$t0: $1_string_String, _$t1: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'') returns ($ret0: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''')
{
    // declare local variables
    var $t2: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''';
    var $t0: $1_string_String;
    var $t1: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''': $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''';
    var $temp_0'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''': $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'';
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[car]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:5+1
    assume {:print "$at(64,2534,2535)"} true;
    assume {:print "$track_local(53,0,0):", $t0} $t0 == $t0;

    // trace_local[cdr]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:5+1
    assume {:print "$track_local(53,0,1):", $t1} $t1 == $t1;

    // $t2 := pack string_utils::Cons<#0, #1>($t0, $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:50+17
    $t2 := $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''($t0, $t1);

    // trace_return[0]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:50+17
    assume {:print "$track_return(53,0,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:68+1
L1:

    // return $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:68+1
    assume {:print "$at(64,2597,2598)"} true;
    $ret0 := $t2;
    return;

}

// fun string_utils::cons<string::String, string_utils::Cons<string::String, string_utils::NIL>> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:5+64
procedure {:inline 1} $1_string_utils_cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''(_$t0: $1_string_String, _$t1: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL') returns ($ret0: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'')
{
    // declare local variables
    var $t2: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'';
    var $t0: $1_string_String;
    var $t1: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''': $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'';
    var $temp_0'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'': $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL';
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[car]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:5+1
    assume {:print "$at(64,2534,2535)"} true;
    assume {:print "$track_local(53,0,0):", $t0} $t0 == $t0;

    // trace_local[cdr]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:5+1
    assume {:print "$track_local(53,0,1):", $t1} $t1 == $t1;

    // $t2 := pack string_utils::Cons<#0, #1>($t0, $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:50+17
    $t2 := $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''($t0, $t1);

    // trace_return[0]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:50+17
    assume {:print "$track_return(53,0,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:68+1
L1:

    // return $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:68+1
    assume {:print "$at(64,2597,2598)"} true;
    $ret0 := $t2;
    return;

}

// fun string_utils::cons<string::String, string_utils::NIL> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:5+64
procedure {:inline 1} $1_string_utils_cons'$1_string_String_$1_string_utils_NIL'(_$t0: $1_string_String, _$t1: $1_string_utils_NIL) returns ($ret0: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL')
{
    // declare local variables
    var $t2: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL';
    var $t0: $1_string_String;
    var $t1: $1_string_utils_NIL;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'': $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL';
    var $temp_0'$1_string_utils_NIL': $1_string_utils_NIL;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[car]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:5+1
    assume {:print "$at(64,2534,2535)"} true;
    assume {:print "$track_local(53,0,0):", $t0} $t0 == $t0;

    // trace_local[cdr]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:5+1
    assume {:print "$track_local(53,0,1):", $t1} $t1 == $t1;

    // $t2 := pack string_utils::Cons<#0, #1>($t0, $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:50+17
    $t2 := $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'($t0, $t1);

    // trace_return[0]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:50+17
    assume {:print "$track_return(53,0,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:68+1
L1:

    // return $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:59:68+1
    assume {:print "$at(64,2597,2598)"} true;
    $ret0 := $t2;
    return;

}

// fun string_utils::format2<string::String, string::String> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:40:5+132
procedure {:inline 1} $1_string_utils_format2'$1_string_String_$1_string_String'(_$t0: Vec (int), _$t1: $1_string_String, _$t2: $1_string_String) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t3: $1_string_String;
    var $t4: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'';
    var $t5: Vec (int);
    var $t6: $1_string_String;
    var $t7: $1_string_String;
    var $t8: $1_string_utils_NIL;
    var $t9: int;
    var $t10: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL';
    var $t11: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'';
    var $t12: $1_string_String;
    var $t13: bool;
    var $t0: Vec (int);
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[fmt]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:40:5+1
    assume {:print "$at(64,1804,1805)"} true;
    assume {:print "$track_local(53,3,0):", $t0} $t0 == $t0;

    // trace_local[a]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:40:5+1
    assume {:print "$track_local(53,3,1):", $t1} $t1 == $t1;

    // trace_local[b]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:40:5+1
    assume {:print "$track_local(53,3,2):", $t2} $t2 == $t2;

    // trace_local[b#253]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:66:37+1
    assume {:print "$at(64,2792,2793)"} true;
    assume {:print "$track_local(53,3,7):", $t2} $t2 == $t2;

    // trace_local[a#254]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:65:26+1
    assume {:print "$at(64,2715,2716)"} true;
    assume {:print "$track_local(53,3,6):", $t2} $t2 == $t2;

    // $t8 := string_utils::nil() on_abort goto L2 with $t9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:65:58+5
    call $t8 := $1_string_utils_nil();
    if ($abort_flag) {
        assume {:print "$at(64,2747,2752)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(53,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t10 := string_utils::cons<#1, string_utils::NIL>($t2, $t8) on_abort goto L2 with $t9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:65:50+14
    call $t10 := $1_string_utils_cons'$1_string_String_$1_string_utils_NIL'($t2, $t8);
    if ($abort_flag) {
        assume {:print "$at(64,2739,2753)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(53,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t11 := string_utils::cons<#0, string_utils::Cons<#1, string_utils::NIL>>($t1, $t10) on_abort goto L2 with $t9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:66:71+17
    assume {:print "$at(64,2826,2843)"} true;
    call $t11 := $1_string_utils_cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''($t1, $t10);
    if ($abort_flag) {
        assume {:print "$at(64,2826,2843)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(53,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t12 := opaque begin: string_utils::native_format_list<string_utils::Cons<#0, string_utils::Cons<#1, string_utils::NIL>>>($t0, $t11) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:41:9+37
    assume {:print "$at(64,1893,1930)"} true;

    // assume Identical($t13, string_utils::args_mismatch_or_invalid_format<string_utils::Cons<#0, string_utils::Cons<#1, string_utils::NIL>>>($t0, $t11)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:41:9+37
    assume ($t13 == $1_string_utils_args_mismatch_or_invalid_format'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''($t0, $t11));

    // if ($t13) goto L4 else goto L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:41:9+37
    if ($t13) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:41:9+37
L4:

    // trace_abort($t9) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:41:9+37
    assume {:print "$at(64,1893,1930)"} true;
    assume {:print "$track_abort(53,3):", $t9} $t9 == $t9;

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:41:9+37
    goto L2;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:41:9+37
L3:

    // assume WellFormed($t12) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:41:9+37
    assume {:print "$at(64,1893,1930)"} true;
    assume $IsValid'$1_string_String'($t12);

    // assume Eq<string::String>($t12, string_utils::spec_native_format_list<string_utils::Cons<#0, string_utils::Cons<#1, string_utils::NIL>>>($t0, $t11)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:41:9+37
    assume $IsEqual'$1_string_String'($t12, $1_string_utils_spec_native_format_list'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''($t0, $t11));

    // $t12 := opaque end: string_utils::native_format_list<string_utils::Cons<#0, string_utils::Cons<#1, string_utils::NIL>>>($t0, $t11) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:41:9+37

    // trace_return[0]($t12) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:41:9+37
    assume {:print "$track_return(53,3,0):", $t12} $t12 == $t12;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:42:5+1
    assume {:print "$at(64,1935,1936)"} true;
L1:

    // return $t12 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:42:5+1
    assume {:print "$at(64,1935,1936)"} true;
    $ret0 := $t12;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:42:5+1
L2:

    // abort($t9) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:42:5+1
    assume {:print "$at(64,1935,1936)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun string_utils::format3<string::String, string::String, string::String> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:43:5+152
procedure {:inline 1} $1_string_utils_format3'$1_string_String_$1_string_String_$1_string_String'(_$t0: Vec (int), _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_string_String) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t4: $1_string_String;
    var $t5: $1_string_String;
    var $t6: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''';
    var $t7: Vec (int);
    var $t8: $1_string_String;
    var $t9: $1_string_String;
    var $t10: $1_string_String;
    var $t11: $1_string_String;
    var $t12: $1_string_utils_NIL;
    var $t13: int;
    var $t14: $1_string_utils_Cons'$1_string_String_$1_string_utils_NIL';
    var $t15: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'';
    var $t16: $1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''';
    var $t17: $1_string_String;
    var $t18: bool;
    var $t0: Vec (int);
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // bytecode translation starts here
    // trace_local[fmt]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:43:5+1
    assume {:print "$at(64,1941,1942)"} true;
    assume {:print "$track_local(53,4,0):", $t0} $t0 == $t0;

    // trace_local[a]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:43:5+1
    assume {:print "$track_local(53,4,1):", $t1} $t1 == $t1;

    // trace_local[b]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:43:5+1
    assume {:print "$track_local(53,4,2):", $t2} $t2 == $t2;

    // trace_local[c]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:43:5+1
    assume {:print "$track_local(53,4,3):", $t3} $t3 == $t3;

    // trace_local[c#257]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:67:48+1
    assume {:print "$at(64,2893,2894)"} true;
    assume {:print "$track_local(53,4,11):", $t3} $t3 == $t3;

    // trace_local[b#256]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:67:41+1
    assume {:print "$track_local(53,4,9):", $t2} $t2 == $t2;

    // trace_local[b#259]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:66:37+1
    assume {:print "$at(64,2792,2793)"} true;
    assume {:print "$track_local(53,4,10):", $t3} $t3 == $t3;

    // trace_local[a#260]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:65:26+1
    assume {:print "$at(64,2715,2716)"} true;
    assume {:print "$track_local(53,4,8):", $t3} $t3 == $t3;

    // $t12 := string_utils::nil() on_abort goto L2 with $t13 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:65:58+5
    call $t12 := $1_string_utils_nil();
    if ($abort_flag) {
        assume {:print "$at(64,2747,2752)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(53,4):", $t13} $t13 == $t13;
        goto L2;
    }

    // $t14 := string_utils::cons<#2, string_utils::NIL>($t3, $t12) on_abort goto L2 with $t13 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:65:50+14
    call $t14 := $1_string_utils_cons'$1_string_String_$1_string_utils_NIL'($t3, $t12);
    if ($abort_flag) {
        assume {:print "$at(64,2739,2753)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(53,4):", $t13} $t13 == $t13;
        goto L2;
    }

    // $t15 := string_utils::cons<#1, string_utils::Cons<#2, string_utils::NIL>>($t2, $t14) on_abort goto L2 with $t13 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:66:71+17
    assume {:print "$at(64,2826,2843)"} true;
    call $t15 := $1_string_utils_cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''($t2, $t14);
    if ($abort_flag) {
        assume {:print "$at(64,2826,2843)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(53,4):", $t13} $t13 == $t13;
        goto L2;
    }

    // $t16 := string_utils::cons<#0, string_utils::Cons<#1, string_utils::Cons<#2, string_utils::NIL>>>($t1, $t15) on_abort goto L2 with $t13 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:67:92+20
    assume {:print "$at(64,2937,2957)"} true;
    call $t16 := $1_string_utils_cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL'''($t1, $t15);
    if ($abort_flag) {
        assume {:print "$at(64,2937,2957)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(53,4):", $t13} $t13 == $t13;
        goto L2;
    }

    // $t17 := opaque begin: string_utils::native_format_list<string_utils::Cons<#0, string_utils::Cons<#1, string_utils::Cons<#2, string_utils::NIL>>>>($t0, $t16) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:44:9+40
    assume {:print "$at(64,2047,2087)"} true;

    // assume Identical($t18, string_utils::args_mismatch_or_invalid_format<string_utils::Cons<#0, string_utils::Cons<#1, string_utils::Cons<#2, string_utils::NIL>>>>($t0, $t16)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:44:9+40
    assume ($t18 == $1_string_utils_args_mismatch_or_invalid_format'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''($t0, $t16));

    // if ($t18) goto L4 else goto L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:44:9+40
    if ($t18) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:44:9+40
L4:

    // trace_abort($t13) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:44:9+40
    assume {:print "$at(64,2047,2087)"} true;
    assume {:print "$track_abort(53,4):", $t13} $t13 == $t13;

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:44:9+40
    goto L2;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:44:9+40
L3:

    // assume WellFormed($t17) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:44:9+40
    assume {:print "$at(64,2047,2087)"} true;
    assume $IsValid'$1_string_String'($t17);

    // assume Eq<string::String>($t17, string_utils::spec_native_format_list<string_utils::Cons<#0, string_utils::Cons<#1, string_utils::Cons<#2, string_utils::NIL>>>>($t0, $t16)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:44:9+40
    assume $IsEqual'$1_string_String'($t17, $1_string_utils_spec_native_format_list'$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_Cons'$1_string_String_$1_string_utils_NIL''''($t0, $t16));

    // $t17 := opaque end: string_utils::native_format_list<string_utils::Cons<#0, string_utils::Cons<#1, string_utils::Cons<#2, string_utils::NIL>>>>($t0, $t16) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:44:9+40

    // trace_return[0]($t17) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:44:9+40
    assume {:print "$track_return(53,4,0):", $t17} $t17 == $t17;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:45:5+1
    assume {:print "$at(64,2092,2093)"} true;
L1:

    // return $t17 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:45:5+1
    assume {:print "$at(64,2092,2093)"} true;
    $ret0 := $t17;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:45:5+1
L2:

    // abort($t13) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:45:5+1
    assume {:print "$at(64,2092,2093)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// fun string_utils::nil [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:62:5+25
procedure {:inline 1} $1_string_utils_nil() returns ($ret0: $1_string_utils_NIL)
{
    // declare local variables
    var $t0: bool;
    var $t1: $1_string_utils_NIL;
    var $temp_0'$1_string_utils_NIL': $1_string_utils_NIL;

    // bytecode translation starts here
    // $t0 := false at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:62:22+6
    assume {:print "$at(64,2648,2654)"} true;
    $t0 := false;
    assume $IsValid'bool'($t0);

    // $t1 := pack string_utils::NIL($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:62:22+6
    $t1 := $1_string_utils_NIL($t0);

    // trace_return[0]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:62:22+6
    assume {:print "$track_return(53,8,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:62:29+1
L1:

    // return $t1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:62:29+1
    assume {:print "$at(64,2655,2656)"} true;
    $ret0 := $t1;
    return;

}

// struct object::ConstructorRef at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:113:5+167
datatype $1_object_ConstructorRef {
    $1_object_ConstructorRef($self: int, $can_delete: bool)
}
function {:inline} $Update'$1_object_ConstructorRef'_self(s: $1_object_ConstructorRef, x: int): $1_object_ConstructorRef {
    $1_object_ConstructorRef(x, s->$can_delete)
}
function {:inline} $Update'$1_object_ConstructorRef'_can_delete(s: $1_object_ConstructorRef, x: bool): $1_object_ConstructorRef {
    $1_object_ConstructorRef(s->$self, x)
}
function $IsValid'$1_object_ConstructorRef'(s: $1_object_ConstructorRef): bool {
    $IsValid'address'(s->$self)
      && $IsValid'bool'(s->$can_delete)
}
function {:inline} $IsEqual'$1_object_ConstructorRef'(s1: $1_object_ConstructorRef, s2: $1_object_ConstructorRef): bool {
    s1 == s2
}

// struct object::LinearTransferRef at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:136:5+88
datatype $1_object_LinearTransferRef {
    $1_object_LinearTransferRef($self: int, $owner: int)
}
function {:inline} $Update'$1_object_LinearTransferRef'_self(s: $1_object_LinearTransferRef, x: int): $1_object_LinearTransferRef {
    $1_object_LinearTransferRef(x, s->$owner)
}
function {:inline} $Update'$1_object_LinearTransferRef'_owner(s: $1_object_LinearTransferRef, x: int): $1_object_LinearTransferRef {
    $1_object_LinearTransferRef(s->$self, x)
}
function $IsValid'$1_object_LinearTransferRef'(s: $1_object_LinearTransferRef): bool {
    $IsValid'address'(s->$self)
      && $IsValid'address'(s->$owner)
}
function {:inline} $IsEqual'$1_object_LinearTransferRef'(s1: $1_object_LinearTransferRef, s2: $1_object_LinearTransferRef): bool {
    s1 == s2
}

// struct object::Object<object::ObjectCore> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:108:5+78
datatype $1_object_Object'$1_object_ObjectCore' {
    $1_object_Object'$1_object_ObjectCore'($inner: int)
}
function {:inline} $Update'$1_object_Object'$1_object_ObjectCore''_inner(s: $1_object_Object'$1_object_ObjectCore', x: int): $1_object_Object'$1_object_ObjectCore' {
    $1_object_Object'$1_object_ObjectCore'(x)
}
function $IsValid'$1_object_Object'$1_object_ObjectCore''(s: $1_object_Object'$1_object_ObjectCore'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$1_object_ObjectCore''(s1: $1_object_Object'$1_object_ObjectCore', s2: $1_object_Object'$1_object_ObjectCore'): bool {
    s1 == s2
}

// struct object::Object<collection::Collection> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:108:5+78
datatype $1_object_Object'$4_collection_Collection' {
    $1_object_Object'$4_collection_Collection'($inner: int)
}
function {:inline} $Update'$1_object_Object'$4_collection_Collection''_inner(s: $1_object_Object'$4_collection_Collection', x: int): $1_object_Object'$4_collection_Collection' {
    $1_object_Object'$4_collection_Collection'(x)
}
function $IsValid'$1_object_Object'$4_collection_Collection''(s: $1_object_Object'$4_collection_Collection'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$4_collection_Collection''(s1: $1_object_Object'$4_collection_Collection', s2: $1_object_Object'$4_collection_Collection'): bool {
    s1 == s2
}

// struct object::Object<token::Token> at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:108:5+78
datatype $1_object_Object'$4_token_Token' {
    $1_object_Object'$4_token_Token'($inner: int)
}
function {:inline} $Update'$1_object_Object'$4_token_Token''_inner(s: $1_object_Object'$4_token_Token', x: int): $1_object_Object'$4_token_Token' {
    $1_object_Object'$4_token_Token'(x)
}
function $IsValid'$1_object_Object'$4_token_Token''(s: $1_object_Object'$4_token_Token'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$4_token_Token''(s1: $1_object_Object'$4_token_Token', s2: $1_object_Object'$4_token_Token'): bool {
    s1 == s2
}

// struct object::ObjectCore at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:88:5+551
datatype $1_object_ObjectCore {
    $1_object_ObjectCore($guid_creation_num: int, $owner: int, $allow_ungated_transfer: bool, $transfer_events: $1_event_EventHandle'$1_object_TransferEvent')
}
function {:inline} $Update'$1_object_ObjectCore'_guid_creation_num(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(x, s->$owner, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_owner(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, x, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_allow_ungated_transfer(s: $1_object_ObjectCore, x: bool): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, x, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_transfer_events(s: $1_object_ObjectCore, x: $1_event_EventHandle'$1_object_TransferEvent'): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, s->$allow_ungated_transfer, x)
}
function $IsValid'$1_object_ObjectCore'(s: $1_object_ObjectCore): bool {
    $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'address'(s->$owner)
      && $IsValid'bool'(s->$allow_ungated_transfer)
      && $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s->$transfer_events)
}
function {:inline} $IsEqual'$1_object_ObjectCore'(s1: $1_object_ObjectCore, s2: $1_object_ObjectCore): bool {
    s1 == s2
}
var $1_object_ObjectCore_$memory: $Memory $1_object_ObjectCore;

// struct object::TransferEvent at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:147:5+113
datatype $1_object_TransferEvent {
    $1_object_TransferEvent($object: int, $from: int, $to: int)
}
function {:inline} $Update'$1_object_TransferEvent'_object(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(x, s->$from, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_from(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, x, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_to(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, s->$from, x)
}
function $IsValid'$1_object_TransferEvent'(s: $1_object_TransferEvent): bool {
    $IsValid'address'(s->$object)
      && $IsValid'address'(s->$from)
      && $IsValid'address'(s->$to)
}
function {:inline} $IsEqual'$1_object_TransferEvent'(s1: $1_object_TransferEvent, s2: $1_object_TransferEvent): bool {
    s1 == s2
}

// struct object::TransferRef at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:130:5+65
datatype $1_object_TransferRef {
    $1_object_TransferRef($self: int)
}
function {:inline} $Update'$1_object_TransferRef'_self(s: $1_object_TransferRef, x: int): $1_object_TransferRef {
    $1_object_TransferRef(x)
}
function $IsValid'$1_object_TransferRef'(s: $1_object_TransferRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_TransferRef'(s1: $1_object_TransferRef, s2: $1_object_TransferRef): bool {
    s1 == s2
}

// fun object::new_event_handle<collection::BurnEvent> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:332:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_collection_BurnEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_collection_BurnEvent')
{
    // declare local variables
    var $t1: $1_guid_GUID;
    var $t2: int;
    var $t3: $1_event_EventHandle'$4_collection_BurnEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_collection_BurnEvent'': $1_event_EventHandle'$4_collection_BurnEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:332:5+1
    assume {:print "$at(123,14691,14692)"} true;
    assume {:print "$track_local(55,30,0):", $t0} $t0 == $t0;

    // $t1 := object::create_guid($t0) on_abort goto L2 with $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:335:33+19
    assume {:print "$at(123,14845,14864)"} true;
    call $t1 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(123,14845,14864)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(55,30):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := event::new_event_handle<#0>($t1) on_abort goto L2 with $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:335:9+44
    call $t3 := $1_event_new_event_handle'$4_collection_BurnEvent'($t1);
    if ($abort_flag) {
        assume {:print "$at(123,14821,14865)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(55,30):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:335:9+44
    assume {:print "$track_return(55,30,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
    assume {:print "$at(123,14870,14871)"} true;
L1:

    // return $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
    assume {:print "$at(123,14870,14871)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
L2:

    // abort($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
    assume {:print "$at(123,14870,14871)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun object::new_event_handle<collection::MintEvent> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:332:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_collection_MintEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_collection_MintEvent')
{
    // declare local variables
    var $t1: $1_guid_GUID;
    var $t2: int;
    var $t3: $1_event_EventHandle'$4_collection_MintEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_collection_MintEvent'': $1_event_EventHandle'$4_collection_MintEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:332:5+1
    assume {:print "$at(123,14691,14692)"} true;
    assume {:print "$track_local(55,30,0):", $t0} $t0 == $t0;

    // $t1 := object::create_guid($t0) on_abort goto L2 with $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:335:33+19
    assume {:print "$at(123,14845,14864)"} true;
    call $t1 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(123,14845,14864)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(55,30):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := event::new_event_handle<#0>($t1) on_abort goto L2 with $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:335:9+44
    call $t3 := $1_event_new_event_handle'$4_collection_MintEvent'($t1);
    if ($abort_flag) {
        assume {:print "$at(123,14821,14865)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(55,30):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:335:9+44
    assume {:print "$track_return(55,30,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
    assume {:print "$at(123,14870,14871)"} true;
L1:

    // return $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
    assume {:print "$at(123,14870,14871)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
L2:

    // abort($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
    assume {:print "$at(123,14870,14871)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun object::new_event_handle<collection::MutationEvent> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:332:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_collection_MutationEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_collection_MutationEvent')
{
    // declare local variables
    var $t1: $1_guid_GUID;
    var $t2: int;
    var $t3: $1_event_EventHandle'$4_collection_MutationEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_collection_MutationEvent'': $1_event_EventHandle'$4_collection_MutationEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:332:5+1
    assume {:print "$at(123,14691,14692)"} true;
    assume {:print "$track_local(55,30,0):", $t0} $t0 == $t0;

    // $t1 := object::create_guid($t0) on_abort goto L2 with $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:335:33+19
    assume {:print "$at(123,14845,14864)"} true;
    call $t1 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(123,14845,14864)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(55,30):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := event::new_event_handle<#0>($t1) on_abort goto L2 with $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:335:9+44
    call $t3 := $1_event_new_event_handle'$4_collection_MutationEvent'($t1);
    if ($abort_flag) {
        assume {:print "$at(123,14821,14865)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(55,30):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:335:9+44
    assume {:print "$track_return(55,30,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
    assume {:print "$at(123,14870,14871)"} true;
L1:

    // return $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
    assume {:print "$at(123,14870,14871)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
L2:

    // abort($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
    assume {:print "$at(123,14870,14871)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun object::new_event_handle<token::MutationEvent> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:332:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_token_MutationEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_token_MutationEvent')
{
    // declare local variables
    var $t1: $1_guid_GUID;
    var $t2: int;
    var $t3: $1_event_EventHandle'$4_token_MutationEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_token_MutationEvent'': $1_event_EventHandle'$4_token_MutationEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:332:5+1
    assume {:print "$at(123,14691,14692)"} true;
    assume {:print "$track_local(55,30,0):", $t0} $t0 == $t0;

    // $t1 := object::create_guid($t0) on_abort goto L2 with $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:335:33+19
    assume {:print "$at(123,14845,14864)"} true;
    call $t1 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(123,14845,14864)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(55,30):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := event::new_event_handle<#0>($t1) on_abort goto L2 with $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:335:9+44
    call $t3 := $1_event_new_event_handle'$4_token_MutationEvent'($t1);
    if ($abort_flag) {
        assume {:print "$at(123,14821,14865)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(55,30):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:335:9+44
    assume {:print "$track_return(55,30,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
    assume {:print "$at(123,14870,14871)"} true;
L1:

    // return $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
    assume {:print "$at(123,14870,14871)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
L2:

    // abort($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:336:5+1
    assume {:print "$at(123,14870,14871)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun object::create_guid [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:325:5+252
procedure {:inline 1} $1_object_create_guid(_$t0: $signer) returns ($ret0: $1_guid_GUID)
{
    // declare local variables
    var $t1: int;
    var $t2: $Mutation ($1_object_ObjectCore);
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation ($1_object_ObjectCore);
    var $t6: $Mutation (int);
    var $t7: $1_guid_GUID;
    var $t0: $signer;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:325:5+1
    assume {:print "$at(123,14396,14397)"} true;
    assume {:print "$track_local(55,6,0):", $t0} $t0 == $t0;

    // $t3 := signer::address_of($t0) on_abort goto L2 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:326:20+26
    assume {:print "$at(123,14489,14515)"} true;
    call $t3 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(123,14489,14515)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,6):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[addr]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:326:13+4
    assume {:print "$track_local(55,6,1):", $t3} $t3 == $t3;

    // $t5 := borrow_global<object::ObjectCore>($t3) on_abort goto L2 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:327:27+17
    assume {:print "$at(123,14543,14560)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $Mutation($Global($t3), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t3));
    }
    if ($abort_flag) {
        assume {:print "$at(123,14543,14560)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,6):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[object_data]($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:327:13+11
    $temp_0'$1_object_ObjectCore' := $Dereference($t5);
    assume {:print "$track_local(55,6,2):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t6 := borrow_field<object::ObjectCore>.guid_creation_num($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:328:28+34
    assume {:print "$at(123,14607,14641)"} true;
    $t6 := $ChildMutation($t5, 0, $Dereference($t5)->$guid_creation_num);

    // $t7 := guid::create($t3, $t6) on_abort goto L2 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:328:9+54
    call $t7,$t6 := $1_guid_create($t3, $t6);
    if ($abort_flag) {
        assume {:print "$at(123,14588,14642)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,6):", $t4} $t4 == $t4;
        goto L2;
    }

    // write_back[Reference($t5).guid_creation_num (u64)]($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:328:9+54
    $t5 := $UpdateMutation($t5, $Update'$1_object_ObjectCore'_guid_creation_num($Dereference($t5), $Dereference($t6)));

    // write_back[object::ObjectCore@]($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:328:9+54
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t5),
        $Dereference($t5));

    // trace_return[0]($t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:328:9+54
    assume {:print "$track_return(55,6,0):", $t7} $t7 == $t7;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:329:5+1
    assume {:print "$at(123,14647,14648)"} true;
L1:

    // return $t7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:329:5+1
    assume {:print "$at(123,14647,14648)"} true;
    $ret0 := $t7;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:329:5+1
L2:

    // abort($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:329:5+1
    assume {:print "$at(123,14647,14648)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::owner<object::ObjectCore> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:522:5+262
procedure {:inline 1} $1_object_owner'$1_object_ObjectCore'(_$t0: $1_object_Object'$1_object_ObjectCore') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_object_ObjectCore;
    var $t8: int;
    var $t0: $1_object_Object'$1_object_ObjectCore';
    var $temp_0'$1_object_Object'$1_object_ObjectCore'': $1_object_Object'$1_object_ObjectCore';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:522:5+1
    assume {:print "$at(123,21325,21326)"} true;
    assume {:print "$track_local(55,34,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:524:32+12
    assume {:print "$at(123,21448,21460)"} true;
    $t1 := $t0->$inner;

    // $t2 := exists<object::ObjectCore>($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:524:13+6
    $t2 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // if ($t2) goto L1 else goto L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:523:9+118
    assume {:print "$at(123,21408,21526)"} true;
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:523:9+118
L1:

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:523:9+118
    assume {:print "$at(123,21408,21526)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:525:30+22
    assume {:print "$at(123,21492,21514)"} true;
L0:

    // $t3 := 2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:525:30+22
    assume {:print "$at(123,21492,21514)"} true;
    $t3 := 2;
    assume $IsValid'u64'($t3);

    // $t4 := error::not_found($t3) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:525:13+40
    call $t4 := $1_error_not_found($t3);
    if ($abort_flag) {
        assume {:print "$at(123,21475,21515)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,34):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_abort($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:523:9+118
    assume {:print "$at(123,21408,21526)"} true;
    assume {:print "$track_abort(55,34):", $t4} $t4 == $t4;

    // $t5 := move($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:523:9+118
    $t5 := $t4;

    // goto L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:523:9+118
    goto L4;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:527:35+6
    assume {:print "$at(123,21562,21568)"} true;
L2:

    // $t6 := get_field<object::Object<#0>>.inner($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:527:35+12
    assume {:print "$at(123,21562,21574)"} true;
    $t6 := $t0->$inner;

    // $t7 := get_global<object::ObjectCore>($t6) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:527:9+13
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_object_ObjectCore_$memory, $t6);
    }
    if ($abort_flag) {
        assume {:print "$at(123,21536,21549)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,34):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t8 := get_field<object::ObjectCore>.owner($t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:527:9+45
    $t8 := $t7->$owner;

    // trace_return[0]($t8) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:527:9+45
    assume {:print "$track_return(55,34,0):", $t8} $t8 == $t8;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:528:5+1
    assume {:print "$at(123,21586,21587)"} true;
L3:

    // return $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:528:5+1
    assume {:print "$at(123,21586,21587)"} true;
    $ret0 := $t8;
    return;

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:528:5+1
L4:

    // abort($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:528:5+1
    assume {:print "$at(123,21586,21587)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::owner<token::Token> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:522:5+262
procedure {:inline 1} $1_object_owner'$4_token_Token'(_$t0: $1_object_Object'$4_token_Token') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_object_ObjectCore;
    var $t8: int;
    var $t0: $1_object_Object'$4_token_Token';
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:522:5+1
    assume {:print "$at(123,21325,21326)"} true;
    assume {:print "$track_local(55,34,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:524:32+12
    assume {:print "$at(123,21448,21460)"} true;
    $t1 := $t0->$inner;

    // $t2 := exists<object::ObjectCore>($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:524:13+6
    $t2 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // if ($t2) goto L1 else goto L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:523:9+118
    assume {:print "$at(123,21408,21526)"} true;
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:523:9+118
L1:

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:523:9+118
    assume {:print "$at(123,21408,21526)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:525:30+22
    assume {:print "$at(123,21492,21514)"} true;
L0:

    // $t3 := 2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:525:30+22
    assume {:print "$at(123,21492,21514)"} true;
    $t3 := 2;
    assume $IsValid'u64'($t3);

    // $t4 := error::not_found($t3) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:525:13+40
    call $t4 := $1_error_not_found($t3);
    if ($abort_flag) {
        assume {:print "$at(123,21475,21515)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,34):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_abort($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:523:9+118
    assume {:print "$at(123,21408,21526)"} true;
    assume {:print "$track_abort(55,34):", $t4} $t4 == $t4;

    // $t5 := move($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:523:9+118
    $t5 := $t4;

    // goto L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:523:9+118
    goto L4;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:527:35+6
    assume {:print "$at(123,21562,21568)"} true;
L2:

    // $t6 := get_field<object::Object<#0>>.inner($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:527:35+12
    assume {:print "$at(123,21562,21574)"} true;
    $t6 := $t0->$inner;

    // $t7 := get_global<object::ObjectCore>($t6) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:527:9+13
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_object_ObjectCore_$memory, $t6);
    }
    if ($abort_flag) {
        assume {:print "$at(123,21536,21549)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,34):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t8 := get_field<object::ObjectCore>.owner($t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:527:9+45
    $t8 := $t7->$owner;

    // trace_return[0]($t8) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:527:9+45
    assume {:print "$track_return(55,34,0):", $t8} $t8 == $t8;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:528:5+1
    assume {:print "$at(123,21586,21587)"} true;
L3:

    // return $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:528:5+1
    assume {:print "$at(123,21586,21587)"} true;
    $ret0 := $t8;
    return;

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:528:5+1
L4:

    // abort($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:528:5+1
    assume {:print "$at(123,21586,21587)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::transfer<token::Token> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:427:5+186
procedure {:inline 1} $1_object_transfer'$4_token_Token'(_$t0: $signer, _$t1: $1_object_Object'$4_token_Token', _$t2: int) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$4_token_Token';
    var $t2: int;
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:427:5+1
    assume {:print "$at(123,17937,17938)"} true;
    assume {:print "$track_local(55,36,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:427:5+1
    assume {:print "$track_local(55,36,1):", $t1} $t1 == $t1;

    // trace_local[to]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:427:5+1
    assume {:print "$track_local(55,36,2):", $t2} $t2 == $t2;

    // $t3 := get_field<object::Object<#0>>.inner($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:432:29+12
    assume {:print "$at(123,18100,18112)"} true;
    $t3 := $t1->$inner;

    // object::transfer_raw($t0, $t3, $t2) on_abort goto L2 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:432:9+37
    call $1_object_transfer_raw($t0, $t3, $t2);
    if ($abort_flag) {
        assume {:print "$at(123,18080,18117)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,36):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:433:5+1
    assume {:print "$at(123,18122,18123)"} true;
L1:

    // return () at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:433:5+1
    assume {:print "$at(123,18122,18123)"} true;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:433:5+1
L2:

    // abort($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:433:5+1
    assume {:print "$at(123,18122,18123)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::address_to_object<collection::Collection> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:154:5+278
procedure {:inline 1} $1_object_address_to_object'$4_collection_Collection'(_$t0: int) returns ($ret0: $1_object_Object'$4_collection_Collection')
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_Object'$4_collection_Collection';
    var $t0: int;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:154:5+1
    assume {:print "$at(123,6756,6757)"} true;
    assume {:print "$track_local(55,3,0):", $t0} $t0 == $t0;

    // $t1 := exists<object::ObjectCore>($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:17+6
    assume {:print "$at(123,6839,6845)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:9+77
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:9+77
L1:

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:9+77
    assume {:print "$at(123,6831,6908)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:62+22
L0:

    // $t2 := 2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:62+22
    assume {:print "$at(123,6884,6906)"} true;
    $t2 := 2;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L7 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:45+40
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(123,6867,6907)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:9+77
    assume {:print "$at(123,6831,6908)"} true;
    assume {:print "$track_abort(55,3):", $t3} $t3 == $t3;

    // $t4 := move($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:9+77
    $t4 := $t3;

    // goto L7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:9+77
    goto L7;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:30+6
    assume {:print "$at(123,6939,6945)"} true;
L2:

    // $t5 := object::exists_at<#0>($t0) on_abort goto L7 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:17+20
    assume {:print "$at(123,6926,6946)"} true;
    call $t5 := $1_object_exists_at'$4_collection_Collection'($t0);
    if ($abort_flag) {
        assume {:print "$at(123,6926,6946)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // if ($t5) goto L4 else goto L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:9+73
    if ($t5) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:9+73
L4:

    // goto L5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:9+73
    assume {:print "$at(123,6918,6991)"} true;
    goto L5;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:56+24
L3:

    // $t6 := 7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:56+24
    assume {:print "$at(123,6965,6989)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L7 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(123,6948,6990)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:9+73
    assume {:print "$at(123,6918,6991)"} true;
    assume {:print "$track_abort(55,3):", $t7} $t7 == $t7;

    // $t4 := move($t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:9+73
    $t4 := $t7;

    // goto L7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:9+73
    goto L7;

    // label L5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:157:28+6
    assume {:print "$at(123,7020,7026)"} true;
L5:

    // $t8 := pack object::Object<#0>($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:157:9+27
    assume {:print "$at(123,7001,7028)"} true;
    $t8 := $1_object_Object'$4_collection_Collection'($t0);

    // trace_return[0]($t8) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:157:9+27
    assume {:print "$track_return(55,3,0):", $t8} $t8 == $t8;

    // label L6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:158:5+1
    assume {:print "$at(123,7033,7034)"} true;
L6:

    // return $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:158:5+1
    assume {:print "$at(123,7033,7034)"} true;
    $ret0 := $t8;
    return;

    // label L7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:158:5+1
L7:

    // abort($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:158:5+1
    assume {:print "$at(123,7033,7034)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::address_to_object<token::Token> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:154:5+278
procedure {:inline 1} $1_object_address_to_object'$4_token_Token'(_$t0: int) returns ($ret0: $1_object_Object'$4_token_Token')
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_Object'$4_token_Token';
    var $t0: int;
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:154:5+1
    assume {:print "$at(123,6756,6757)"} true;
    assume {:print "$track_local(55,3,0):", $t0} $t0 == $t0;

    // $t1 := exists<object::ObjectCore>($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:17+6
    assume {:print "$at(123,6839,6845)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:9+77
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:9+77
L1:

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:9+77
    assume {:print "$at(123,6831,6908)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:62+22
L0:

    // $t2 := 2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:62+22
    assume {:print "$at(123,6884,6906)"} true;
    $t2 := 2;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L7 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:45+40
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(123,6867,6907)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:9+77
    assume {:print "$at(123,6831,6908)"} true;
    assume {:print "$track_abort(55,3):", $t3} $t3 == $t3;

    // $t4 := move($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:9+77
    $t4 := $t3;

    // goto L7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:155:9+77
    goto L7;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:30+6
    assume {:print "$at(123,6939,6945)"} true;
L2:

    // $t5 := object::exists_at<#0>($t0) on_abort goto L7 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:17+20
    assume {:print "$at(123,6926,6946)"} true;
    call $t5 := $1_object_exists_at'$4_token_Token'($t0);
    if ($abort_flag) {
        assume {:print "$at(123,6926,6946)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // if ($t5) goto L4 else goto L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:9+73
    if ($t5) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:9+73
L4:

    // goto L5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:9+73
    assume {:print "$at(123,6918,6991)"} true;
    goto L5;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:56+24
L3:

    // $t6 := 7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:56+24
    assume {:print "$at(123,6965,6989)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L7 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(123,6948,6990)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:9+73
    assume {:print "$at(123,6918,6991)"} true;
    assume {:print "$track_abort(55,3):", $t7} $t7 == $t7;

    // $t4 := move($t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:9+73
    $t4 := $t7;

    // goto L7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:156:9+73
    goto L7;

    // label L5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:157:28+6
    assume {:print "$at(123,7020,7026)"} true;
L5:

    // $t8 := pack object::Object<#0>($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:157:9+27
    assume {:print "$at(123,7001,7028)"} true;
    $t8 := $1_object_Object'$4_token_Token'($t0);

    // trace_return[0]($t8) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:157:9+27
    assume {:print "$track_return(55,3,0):", $t8} $t8 == $t8;

    // label L6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:158:5+1
    assume {:print "$at(123,7033,7034)"} true;
L6:

    // return $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:158:5+1
    assume {:print "$at(123,7033,7034)"} true;
    $ret0 := $t8;
    return;

    // label L7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:158:5+1
L7:

    // abort($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:158:5+1
    assume {:print "$at(123,7033,7034)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::create_named_object [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:203:5+284
procedure {:inline 1} $1_object_create_named_object(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: $1_object_ConstructorRef;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[creator]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:203:5+1
    assume {:print "$at(123,8983,8984)"} true;
    assume {:print "$track_local(55,8,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:203:5+1
    assume {:print "$track_local(55,8,1):", $t1} $t1 == $t1;

    // $t4 := signer::address_of($t0) on_abort goto L2 with $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:204:31+27
    assume {:print "$at(123,9098,9125)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(123,9098,9125)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,8):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[creator_address]($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:204:13+15
    assume {:print "$track_local(55,8,2):", $t4} $t4 == $t4;

    // $t6 := object::create_object_address($t4, $t1) on_abort goto L2 with $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:205:24+45
    assume {:print "$at(123,9150,9195)"} true;
    call $t6 := $1_object_create_object_address($t4, $t1);
    if ($abort_flag) {
        assume {:print "$at(123,9150,9195)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,8):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[obj_addr]($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:205:13+8
    assume {:print "$track_local(55,8,3):", $t6} $t6 == $t6;

    // $t7 := false at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:206:59+5
    assume {:print "$at(123,9255,9260)"} true;
    $t7 := false;
    assume $IsValid'bool'($t7);

    // $t8 := object::create_object_internal($t4, $t6, $t7) on_abort goto L2 with $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:206:9+56
    call $t8 := $1_object_create_object_internal($t4, $t6, $t7);
    if ($abort_flag) {
        assume {:print "$at(123,9205,9261)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,8):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t8) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:206:9+56
    assume {:print "$track_return(55,8,0):", $t8} $t8 == $t8;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:207:5+1
    assume {:print "$at(123,9266,9267)"} true;
L1:

    // return $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:207:5+1
    assume {:print "$at(123,9266,9267)"} true;
    $ret0 := $t8;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:207:5+1
L2:

    // abort($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:207:5+1
    assume {:print "$at(123,9266,9267)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::create_object_address [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:166:5+294
procedure {:inline 1} $1_object_create_object_address(_$t0: int, _$t1: Vec (int)) returns ($ret0: int)
{
    // declare local variables
    var $t2: Vec (int);
    var $t3: int;
    var $t4: $Mutation (Vec (int));
    var $t5: $Mutation (Vec (int));
    var $t6: int;
    var $t7: Vec (int);
    var $t8: Vec (int);
    var $t9: int;
    var $t0: int;
    var $t1: Vec (int);
    var $temp_0'address': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[source]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:166:5+1
    assume {:print "$at(123,7308,7309)"} true;
    assume {:print "$track_local(55,10,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:166:5+1
    assume {:print "$track_local(55,10,1):", $t1} $t1 == $t1;

    // $t2 := bcs::to_bytes<address>($t0) on_abort goto L2 with $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:167:21+21
    assume {:print "$at(123,7408,7429)"} true;
    call $t2 := $1_bcs_to_bytes'address'($t0);
    if ($abort_flag) {
        assume {:print "$at(123,7408,7429)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(55,10):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_local[bytes]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:167:13+5
    assume {:print "$track_local(55,10,2):", $t2} $t2 == $t2;

    // $t4 := borrow_local($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:168:24+10
    assume {:print "$at(123,7454,7464)"} true;
    $t4 := $Mutation($Local(2), EmptyVec(), $t2);

    // vector::append<u8>($t4, $t1) on_abort goto L2 with $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:168:9+32
    call $t4 := $1_vector_append'u8'($t4, $t1);
    if ($abort_flag) {
        assume {:print "$at(123,7439,7471)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(55,10):", $t3} $t3 == $t3;
        goto L2;
    }

    // write_back[LocalRoot($t2)@]($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:168:9+32
    $t2 := $Dereference($t4);

    // trace_local[bytes]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:168:9+32
    assume {:print "$track_local(55,10,2):", $t2} $t2 == $t2;

    // $t5 := borrow_local($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:169:27+10
    assume {:print "$at(123,7499,7509)"} true;
    $t5 := $Mutation($Local(2), EmptyVec(), $t2);

    // $t6 := 254 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:169:39+31
    $t6 := 254;
    assume $IsValid'u8'($t6);

    // vector::push_back<u8>($t5, $t6) on_abort goto L2 with $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:169:9+62
    call $t5 := $1_vector_push_back'u8'($t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(123,7481,7543)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(55,10):", $t3} $t3 == $t3;
        goto L2;
    }

    // write_back[LocalRoot($t2)@]($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:169:9+62
    $t2 := $Dereference($t5);

    // trace_local[bytes]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:169:9+62
    assume {:print "$track_local(55,10,2):", $t2} $t2 == $t2;

    // $t7 := move($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:170:45+5
    assume {:print "$at(123,7589,7594)"} true;
    $t7 := $t2;

    // $t8 := hash::sha3_256($t7) on_abort goto L2 with $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:170:30+21
    call $t8 := $1_hash_sha3_256($t7);
    if ($abort_flag) {
        assume {:print "$at(123,7574,7595)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(55,10):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t9 := from_bcs::to_address($t8) on_abort goto L2 with $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:170:9+43
    call $t9 := $1_from_bcs_to_address($t8);
    if ($abort_flag) {
        assume {:print "$at(123,7553,7596)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(55,10):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t9) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:170:9+43
    assume {:print "$track_return(55,10,0):", $t9} $t9 == $t9;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:171:5+1
    assume {:print "$at(123,7601,7602)"} true;
L1:

    // return $t9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:171:5+1
    assume {:print "$at(123,7601,7602)"} true;
    $ret0 := $t9;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:171:5+1
L2:

    // abort($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:171:5+1
    assume {:print "$at(123,7601,7602)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::create_object_internal [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:256:5+766
procedure {:inline 1} $1_object_create_object_internal(_$t0: int, _$t1: int, _$t2: bool) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t3: int;
    var $t4: $signer;
    var $t5: $1_guid_GUID;
    var $t6: bool;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $signer;
    var $t12: int;
    var $t13: $Mutation (int);
    var $t14: $1_guid_GUID;
    var $t15: int;
    var $t16: bool;
    var $t17: $1_event_EventHandle'$1_object_TransferEvent';
    var $t18: $1_object_ObjectCore;
    var $t19: $1_object_ConstructorRef;
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[creator_address]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:256:5+1
    assume {:print "$at(123,11896,11897)"} true;
    assume {:print "$track_local(55,14,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:256:5+1
    assume {:print "$track_local(55,14,1):", $t1} $t1 == $t1;

    // trace_local[can_delete]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:256:5+1
    assume {:print "$track_local(55,14,2):", $t2} $t2 == $t2;

    // $t6 := exists<object::ObjectCore>($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:261:18+6
    assume {:print "$at(123,12050,12056)"} true;
    $t6 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // $t7 := !($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:261:17+1
    call $t7 := $Not($t6);

    // if ($t7) goto L1 else goto L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:261:9+75
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:261:9+75
L1:

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:261:9+75
    assume {:print "$at(123,12041,12116)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:261:68+14
L0:

    // $t8 := 1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:261:68+14
    assume {:print "$at(123,12100,12114)"} true;
    $t8 := 1;
    assume $IsValid'u64'($t8);

    // $t9 := error::already_exists($t8) on_abort goto L4 with $t10 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:261:46+37
    call $t9 := $1_error_already_exists($t8);
    if ($abort_flag) {
        assume {:print "$at(123,12078,12115)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(55,14):", $t10} $t10 == $t10;
        goto L4;
    }

    // trace_abort($t9) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:261:9+75
    assume {:print "$at(123,12041,12116)"} true;
    assume {:print "$track_abort(55,14):", $t9} $t9 == $t9;

    // $t10 := move($t9) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:261:9+75
    $t10 := $t9;

    // goto L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:261:9+75
    goto L4;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:263:43+6
    assume {:print "$at(123,12161,12167)"} true;
L2:

    // $t11 := opaque begin: create_signer::create_signer($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:263:29+21
    assume {:print "$at(123,12147,12168)"} true;

    // assume WellFormed($t11) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:263:29+21
    assume $IsValid'signer'($t11) && $1_signer_is_txn_signer($t11) && $1_signer_is_txn_signer_addr($t11->$addr);

    // assume Eq<address>(signer::$address_of($t11), $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:263:29+21
    assume $IsEqual'address'($1_signer_$address_of($t11), $t1);

    // $t11 := opaque end: create_signer::create_signer($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:263:29+21

    // trace_local[object_signer]($t11) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:263:13+13
    assume {:print "$track_local(55,14,4):", $t11} $t11 == $t11;

    // $t12 := 1125899906842624 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:264:33+22
    assume {:print "$at(123,12202,12224)"} true;
    $t12 := 1125899906842624;
    assume $IsValid'u64'($t12);

    // $t3 := $t12 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:264:13+17
    $t3 := $t12;

    // trace_local[guid_creation_num]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:264:13+17
    assume {:print "$track_local(55,14,3):", $t3} $t3 == $t3;

    // $t13 := borrow_local($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:265:57+22
    assume {:print "$at(123,12282,12304)"} true;
    $t13 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t14 := guid::create($t1, $t13) on_abort goto L4 with $t10 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:265:36+44
    call $t14,$t13 := $1_guid_create($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(123,12261,12305)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(55,14):", $t10} $t10 == $t10;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t13) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:265:36+44
    $t3 := $Dereference($t13);

    // trace_local[guid_creation_num]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:265:36+44
    assume {:print "$track_local(55,14,3):", $t3} $t3 == $t3;

    // trace_local[transfer_events_guid]($t14) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:265:13+20
    assume {:print "$track_local(55,14,5):", $t14} $t14 == $t14;

    // $t15 := move($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:270:17+17
    assume {:print "$at(123,12394,12411)"} true;
    $t15 := $t3;

    // $t16 := true at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:272:41+4
    assume {:print "$at(123,12493,12497)"} true;
    $t16 := true;
    assume $IsValid'bool'($t16);

    // $t17 := event::new_event_handle<object::TransferEvent>($t14) on_abort goto L4 with $t10 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:273:34+45
    assume {:print "$at(123,12532,12577)"} true;
    call $t17 := $1_event_new_event_handle'$1_object_TransferEvent'($t14);
    if ($abort_flag) {
        assume {:print "$at(123,12532,12577)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(55,14):", $t10} $t10 == $t10;
        goto L4;
    }

    // $t18 := pack object::ObjectCore($t15, $t0, $t16, $t17) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:269:13+227
    assume {:print "$at(123,12365,12592)"} true;
    $t18 := $1_object_ObjectCore($t15, $t0, $t16, $t17);

    // move_to<object::ObjectCore>($t18, $t11) on_abort goto L4 with $t10 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:267:9+7
    assume {:print "$at(123,12316,12323)"} true;
    if ($ResourceExists($1_object_ObjectCore_$memory, $t11->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $t11->$addr, $t18);
    }
    if ($abort_flag) {
        assume {:print "$at(123,12316,12323)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(55,14):", $t10} $t10 == $t10;
        goto L4;
    }

    // $t19 := pack object::ConstructorRef($t1, $t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:276:9+43
    assume {:print "$at(123,12613,12656)"} true;
    $t19 := $1_object_ConstructorRef($t1, $t2);

    // trace_return[0]($t19) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:276:9+43
    assume {:print "$track_return(55,14,0):", $t19} $t19 == $t19;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:277:5+1
    assume {:print "$at(123,12661,12662)"} true;
L3:

    // return $t19 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:277:5+1
    assume {:print "$at(123,12661,12662)"} true;
    $ret0 := $t19;
    return;

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:277:5+1
L4:

    // abort($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:277:5+1
    assume {:print "$at(123,12661,12662)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun object::disable_ungated_transfer [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:377:5+191
procedure {:inline 1} $1_object_disable_ungated_transfer(_$t0: $1_object_TransferRef) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_object_ObjectCore);
    var $t2: int;
    var $t3: $Mutation ($1_object_ObjectCore);
    var $t4: int;
    var $t5: bool;
    var $t6: $Mutation (bool);
    var $t0: $1_object_TransferRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:377:5+1
    assume {:print "$at(123,16076,16077)"} true;
    assume {:print "$track_local(55,18,0):", $t0} $t0 == $t0;

    // $t2 := get_field<object::TransferRef>.self($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:378:52+8
    assume {:print "$at(123,16204,16212)"} true;
    $t2 := $t0->$self;

    // $t3 := borrow_global<object::ObjectCore>($t2) on_abort goto L2 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:378:22+17
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $Mutation($Global($t2), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t2));
    }
    if ($abort_flag) {
        assume {:print "$at(123,16174,16191)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,18):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[object]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:378:13+6
    $temp_0'$1_object_ObjectCore' := $Dereference($t3);
    assume {:print "$track_local(55,18,1):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t5 := false at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:379:41+5
    assume {:print "$at(123,16255,16260)"} true;
    $t5 := false;
    assume $IsValid'bool'($t5);

    // $t6 := borrow_field<object::ObjectCore>.allow_ungated_transfer($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:379:9+29
    $t6 := $ChildMutation($t3, 2, $Dereference($t3)->$allow_ungated_transfer);

    // write_ref($t6, $t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:379:9+37
    $t6 := $UpdateMutation($t6, $t5);

    // write_back[Reference($t3).allow_ungated_transfer (bool)]($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:379:9+37
    $t3 := $UpdateMutation($t3, $Update'$1_object_ObjectCore'_allow_ungated_transfer($Dereference($t3), $Dereference($t6)));

    // write_back[object::ObjectCore@]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:379:9+37
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t3),
        $Dereference($t3));

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:380:5+1
    assume {:print "$at(123,16266,16267)"} true;
L1:

    // return () at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:380:5+1
    assume {:print "$at(123,16266,16267)"} true;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:380:5+1
L2:

    // abort($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:380:5+1
    assume {:print "$at(123,16266,16267)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::generate_linear_transfer_ref [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:390:5+257
procedure {:inline 1} $1_object_generate_linear_transfer_ref(_$t0: $1_object_TransferRef) returns ($ret0: $1_object_LinearTransferRef)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $1_object_Object'$1_object_ObjectCore';
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_object_LinearTransferRef;
    var $t0: $1_object_TransferRef;
    var $temp_0'$1_object_LinearTransferRef': $1_object_LinearTransferRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:390:5+1
    assume {:print "$at(123,16665,16666)"} true;
    assume {:print "$track_local(55,24,0):", $t0} $t0 == $t0;

    // $t2 := get_field<object::TransferRef>.self($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:391:55+8
    assume {:print "$at(123,16819,16827)"} true;
    $t2 := $t0->$self;

    // $t3 := pack object::Object<object::ObjectCore>($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:391:27+38
    $t3 := $1_object_Object'$1_object_ObjectCore'($t2);

    // $t4 := object::owner<object::ObjectCore>($t3) on_abort goto L2 with $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:391:21+45
    call $t4 := $1_object_owner'$1_object_ObjectCore'($t3);
    if ($abort_flag) {
        assume {:print "$at(123,16785,16830)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,24):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[owner]($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:391:13+5
    assume {:print "$track_local(55,24,1):", $t4} $t4 == $t4;

    // $t6 := get_field<object::TransferRef>.self($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:393:19+8
    assume {:print "$at(123,16878,16886)"} true;
    $t6 := $t0->$self;

    // $t7 := pack object::LinearTransferRef($t6, $t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:392:9+76
    assume {:print "$at(123,16840,16916)"} true;
    $t7 := $1_object_LinearTransferRef($t6, $t4);

    // trace_return[0]($t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:392:9+76
    assume {:print "$track_return(55,24,0):", $t7} $t7 == $t7;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:396:5+1
    assume {:print "$at(123,16921,16922)"} true;
L1:

    // return $t7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:396:5+1
    assume {:print "$at(123,16921,16922)"} true;
    $ret0 := $t7;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:396:5+1
L2:

    // abort($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:396:5+1
    assume {:print "$at(123,16921,16922)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::generate_signer [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:303:5+96
procedure {:inline 1} $1_object_generate_signer(_$t0: $1_object_ConstructorRef) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: $signer;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:303:5+1
    assume {:print "$at(123,13664,13665)"} true;
    assume {:print "$track_local(55,25,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:304:23+8
    assume {:print "$at(123,13745,13753)"} true;
    $t1 := $t0->$self;

    // $t2 := opaque begin: create_signer::create_signer($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:304:9+23

    // assume WellFormed($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:304:9+23
    assume $IsValid'signer'($t2) && $1_signer_is_txn_signer($t2) && $1_signer_is_txn_signer_addr($t2->$addr);

    // assume Eq<address>(signer::$address_of($t2), $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:304:9+23
    assume $IsEqual'address'($1_signer_$address_of($t2), $t1);

    // $t2 := opaque end: create_signer::create_signer($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:304:9+23

    // trace_return[0]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:304:9+23
    assume {:print "$track_return(55,25,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:305:5+1
    assume {:print "$at(123,13759,13760)"} true;
L1:

    // return $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:305:5+1
    assume {:print "$at(123,13759,13760)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_transfer_ref [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:293:5+114
procedure {:inline 1} $1_object_generate_transfer_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_TransferRef)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_TransferRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:293:5+1
    assume {:print "$at(123,13268,13269)"} true;
    assume {:print "$track_local(55,27,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:294:29+8
    assume {:print "$at(123,13366,13374)"} true;
    $t1 := $t0->$self;

    // $t2 := pack object::TransferRef($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:294:9+30
    $t2 := $1_object_TransferRef($t1);

    // trace_return[0]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:294:9+30
    assume {:print "$track_return(55,27,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:295:5+1
    assume {:print "$at(123,13381,13382)"} true;
L1:

    // return $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:295:5+1
    assume {:print "$at(123,13381,13382)"} true;
    $ret0 := $t2;
    return;

}

// fun object::is_owner<token::Token> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:531:5+127
procedure {:inline 1} $1_object_is_owner'$4_token_Token'(_$t0: $1_object_Object'$4_token_Token', _$t1: int) returns ($ret0: bool)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t0: $1_object_Object'$4_token_Token';
    var $t1: int;
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:531:5+1
    assume {:print "$at(123,21659,21660)"} true;
    assume {:print "$track_local(55,29,0):", $t0} $t0 == $t0;

    // trace_local[owner]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:531:5+1
    assume {:print "$track_local(55,29,1):", $t1} $t1 == $t1;

    // $t2 := object::owner<#0>($t0) on_abort goto L2 with $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:532:9+13
    assume {:print "$at(123,21758,21771)"} true;
    call $t2 := $1_object_owner'$4_token_Token'($t0);
    if ($abort_flag) {
        assume {:print "$at(123,21758,21771)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(55,29):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := ==($t2, $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:532:23+2
    $t4 := $IsEqual'address'($t2, $t1);

    // trace_return[0]($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:532:9+22
    assume {:print "$track_return(55,29,0):", $t4} $t4 == $t4;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:533:5+1
    assume {:print "$at(123,21785,21786)"} true;
L1:

    // return $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:533:5+1
    assume {:print "$at(123,21785,21786)"} true;
    $ret0 := $t4;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:533:5+1
L2:

    // abort($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:533:5+1
    assume {:print "$at(123,21785,21786)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::object_address<collection::Collection> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:192:5+91
procedure {:inline 1} $1_object_object_address'$4_collection_Collection'(_$t0: $1_object_Object'$4_collection_Collection') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:192:5+1
    assume {:print "$at(123,8525,8526)"} true;
    assume {:print "$track_local(55,31,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:193:9+12
    assume {:print "$at(123,8598,8610)"} true;
    $t1 := $t0->$inner;

    // trace_return[0]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:193:9+12
    assume {:print "$track_return(55,31,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:194:5+1
    assume {:print "$at(123,8615,8616)"} true;
L1:

    // return $t1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:194:5+1
    assume {:print "$at(123,8615,8616)"} true;
    $ret0 := $t1;
    return;

}

// fun object::object_address<token::Token> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:192:5+91
procedure {:inline 1} $1_object_object_address'$4_token_Token'(_$t0: $1_object_Object'$4_token_Token') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_Object'$4_token_Token';
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:192:5+1
    assume {:print "$at(123,8525,8526)"} true;
    assume {:print "$track_local(55,31,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:193:9+12
    assume {:print "$at(123,8598,8610)"} true;
    $t1 := $t0->$inner;

    // trace_return[0]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:193:9+12
    assume {:print "$track_return(55,31,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:194:5+1
    assume {:print "$at(123,8615,8616)"} true;
L1:

    // return $t1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:194:5+1
    assume {:print "$at(123,8615,8616)"} true;
    $ret0 := $t1;
    return;

}

// fun object::object_from_constructor_ref<token::Token> [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:313:5+126
procedure {:inline 1} $1_object_object_from_constructor_ref'$4_token_Token'(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_Object'$4_token_Token')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$4_token_Token';
    var $t3: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:313:5+1
    assume {:print "$at(123,13985,13986)"} true;
    assume {:print "$track_local(55,32,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:314:30+8
    assume {:print "$at(123,14096,14104)"} true;
    $t1 := $t0->$self;

    // $t2 := object::address_to_object<#0>($t1) on_abort goto L2 with $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:314:9+30
    call $t2 := $1_object_address_to_object'$4_token_Token'($t1);
    if ($abort_flag) {
        assume {:print "$at(123,14075,14105)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(55,32):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:314:9+30
    assume {:print "$track_return(55,32,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:315:5+1
    assume {:print "$at(123,14110,14111)"} true;
L1:

    // return $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:315:5+1
    assume {:print "$at(123,14110,14111)"} true;
    $ret0 := $t2;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:315:5+1
L2:

    // abort($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:315:5+1
    assume {:print "$at(123,14110,14111)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::transfer_raw [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:439:5+633
procedure {:inline 1} $1_object_transfer_raw(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: $Mutation ($1_object_ObjectCore);
    var $t4: int;
    var $t5: int;
    var $t6: $Mutation ($1_object_ObjectCore);
    var $t7: int;
    var $t8: bool;
    var $t9: $Mutation ($1_event_EventHandle'$1_object_TransferEvent');
    var $t10: int;
    var $t11: $1_object_TransferEvent;
    var $t12: $Mutation (int);
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:439:5+1
    assume {:print "$at(123,18424,18425)"} true;
    assume {:print "$track_local(55,38,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:439:5+1
    assume {:print "$track_local(55,38,1):", $t1} $t1 == $t1;

    // trace_local[to]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:439:5+1
    assume {:print "$track_local(55,38,2):", $t2} $t2 == $t2;

    // $t4 := signer::address_of($t0) on_abort goto L3 with $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:444:29+25
    assume {:print "$at(123,18575,18600)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(123,18575,18600)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,38):", $t5} $t5 == $t5;
        goto L3;
    }

    // object::verify_ungated_and_descendant($t4, $t1) on_abort goto L3 with $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:445:9+52
    assume {:print "$at(123,18610,18662)"} true;
    call $1_object_verify_ungated_and_descendant($t4, $t1);
    if ($abort_flag) {
        assume {:print "$at(123,18610,18662)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,38):", $t5} $t5 == $t5;
        goto L3;
    }

    // $t6 := borrow_global<object::ObjectCore>($t1) on_abort goto L3 with $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:447:27+17
    assume {:print "$at(123,18691,18708)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(123,18691,18708)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,38):", $t5} $t5 == $t5;
        goto L3;
    }

    // trace_local[object_core]($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:447:13+11
    $temp_0'$1_object_ObjectCore' := $Dereference($t6);
    assume {:print "$track_local(55,38,3):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t7 := get_field<object::ObjectCore>.owner($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:448:13+17
    assume {:print "$at(123,18742,18759)"} true;
    $t7 := $Dereference($t6)->$owner;

    // $t8 := ==($t7, $t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:448:31+2
    $t8 := $IsEqual'address'($t7, $t2);

    // if ($t8) goto L1 else goto L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:448:9+59
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:449:13+6
    assume {:print "$at(123,18781,18787)"} true;
L1:

    // destroy($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:449:13+6
    assume {:print "$at(123,18781,18787)"} true;

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:449:13+6
    goto L2;

    // label L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:453:18+11
    assume {:print "$at(123,18844,18855)"} true;
L0:

    // $t9 := borrow_field<object::ObjectCore>.transfer_events($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:453:13+32
    assume {:print "$at(123,18839,18871)"} true;
    $t9 := $ChildMutation($t6, 3, $Dereference($t6)->$transfer_events);

    // $t10 := get_field<object::ObjectCore>.owner($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:456:23+17
    assume {:print "$at(123,18955,18972)"} true;
    $t10 := $Dereference($t6)->$owner;

    // $t11 := pack object::TransferEvent($t1, $t10, $t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:454:13+122
    assume {:print "$at(123,18885,19007)"} true;
    $t11 := $1_object_TransferEvent($t1, $t10, $t2);

    // opaque begin: event::emit_event<object::TransferEvent>($t9, $t11) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:452:9+210
    assume {:print "$at(123,18808,19018)"} true;

    // opaque end: event::emit_event<object::TransferEvent>($t9, $t11) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:452:9+210

    // write_back[Reference($t6).transfer_events (event::EventHandle<object::TransferEvent>)]($t9) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:452:9+210
    $t6 := $UpdateMutation($t6, $Update'$1_object_ObjectCore'_transfer_events($Dereference($t6), $Dereference($t9)));

    // $t12 := borrow_field<object::ObjectCore>.owner($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:460:9+17
    assume {:print "$at(123,19028,19045)"} true;
    $t12 := $ChildMutation($t6, 1, $Dereference($t6)->$owner);

    // write_ref($t12, $t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:460:9+22
    $t12 := $UpdateMutation($t12, $t2);

    // write_back[Reference($t6).owner (address)]($t12) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:460:9+22
    $t6 := $UpdateMutation($t6, $Update'$1_object_ObjectCore'_owner($Dereference($t6), $Dereference($t12)));

    // write_back[object::ObjectCore@]($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:460:9+22
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t6),
        $Dereference($t6));

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:461:5+1
    assume {:print "$at(123,19056,19057)"} true;
L2:

    // return () at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:461:5+1
    assume {:print "$at(123,19056,19057)"} true;
    return;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:461:5+1
L3:

    // abort($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:461:5+1
    assume {:print "$at(123,19056,19057)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::transfer_with_ref [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:399:5+518
procedure {:inline 1} $1_object_transfer_with_ref(_$t0: $1_object_LinearTransferRef, _$t1: int) returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_object_ObjectCore);
    var $t3: int;
    var $t4: $Mutation ($1_object_ObjectCore);
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: $Mutation ($1_event_EventHandle'$1_object_TransferEvent');
    var $t12: int;
    var $t13: int;
    var $t14: $1_object_TransferEvent;
    var $t15: $Mutation (int);
    var $t0: $1_object_LinearTransferRef;
    var $t1: int;
    var $temp_0'$1_object_LinearTransferRef': $1_object_LinearTransferRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:399:5+1
    assume {:print "$at(123,16999,17000)"} true;
    assume {:print "$track_local(55,40,0):", $t0} $t0 == $t0;

    // trace_local[to]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:399:5+1
    assume {:print "$track_local(55,40,1):", $t1} $t1 == $t1;

    // $t3 := get_field<object::LinearTransferRef>.self($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:400:52+8
    assume {:print "$at(123,17138,17146)"} true;
    $t3 := $t0->$self;

    // $t4 := borrow_global<object::ObjectCore>($t3) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:400:22+17
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $Mutation($Global($t3), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t3));
    }
    if ($abort_flag) {
        assume {:print "$at(123,17108,17125)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,40):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_local[object]($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:400:13+6
    $temp_0'$1_object_ObjectCore' := $Dereference($t4);
    assume {:print "$track_local(55,40,2):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t6 := get_field<object::ObjectCore>.owner($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:402:13+12
    assume {:print "$at(123,17178,17190)"} true;
    $t6 := $Dereference($t4)->$owner;

    // $t7 := get_field<object::LinearTransferRef>.owner($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:402:29+9
    $t7 := $t0->$owner;

    // $t8 := ==($t6, $t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:402:26+2
    $t8 := $IsEqual'address'($t6, $t7);

    // if ($t8) goto L1 else goto L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:401:9+114
    assume {:print "$at(123,17157,17271)"} true;
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:401:9+114
L1:

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:401:9+114
    assume {:print "$at(123,17157,17271)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:401:9+114
L0:

    // destroy($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:401:9+114
    assume {:print "$at(123,17157,17271)"} true;

    // $t9 := 4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:403:38+17
    assume {:print "$at(123,17242,17259)"} true;
    $t9 := 4;
    assume $IsValid'u64'($t9);

    // $t10 := error::permission_denied($t9) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:403:13+43
    call $t10 := $1_error_permission_denied($t9);
    if ($abort_flag) {
        assume {:print "$at(123,17217,17260)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,40):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_abort($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:401:9+114
    assume {:print "$at(123,17157,17271)"} true;
    assume {:print "$track_abort(55,40):", $t10} $t10 == $t10;

    // $t5 := move($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:401:9+114
    $t5 := $t10;

    // goto L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:401:9+114
    goto L4;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:406:18+6
    assume {:print "$at(123,17317,17323)"} true;
L2:

    // $t11 := borrow_field<object::ObjectCore>.transfer_events($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:406:13+27
    assume {:print "$at(123,17312,17339)"} true;
    $t11 := $ChildMutation($t4, 3, $Dereference($t4)->$transfer_events);

    // $t12 := get_field<object::LinearTransferRef>.self($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:408:25+8
    assume {:print "$at(123,17393,17401)"} true;
    $t12 := $t0->$self;

    // $t13 := get_field<object::ObjectCore>.owner($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:409:23+12
    assume {:print "$at(123,17425,17437)"} true;
    $t13 := $Dereference($t4)->$owner;

    // $t14 := pack object::TransferEvent($t12, $t13, $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:407:13+119
    assume {:print "$at(123,17353,17472)"} true;
    $t14 := $1_object_TransferEvent($t12, $t13, $t1);

    // opaque begin: event::emit_event<object::TransferEvent>($t11, $t14) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:405:9+202
    assume {:print "$at(123,17281,17483)"} true;

    // opaque end: event::emit_event<object::TransferEvent>($t11, $t14) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:405:9+202

    // write_back[Reference($t4).transfer_events (event::EventHandle<object::TransferEvent>)]($t11) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:405:9+202
    $t4 := $UpdateMutation($t4, $Update'$1_object_ObjectCore'_transfer_events($Dereference($t4), $Dereference($t11)));

    // $t15 := borrow_field<object::ObjectCore>.owner($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:413:9+12
    assume {:print "$at(123,17493,17505)"} true;
    $t15 := $ChildMutation($t4, 1, $Dereference($t4)->$owner);

    // write_ref($t15, $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:413:9+17
    $t15 := $UpdateMutation($t15, $t1);

    // write_back[Reference($t4).owner (address)]($t15) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:413:9+17
    $t4 := $UpdateMutation($t4, $Update'$1_object_ObjectCore'_owner($Dereference($t4), $Dereference($t15)));

    // write_back[object::ObjectCore@]($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:413:9+17
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t4),
        $Dereference($t4));

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:414:5+1
    assume {:print "$at(123,17516,17517)"} true;
L3:

    // return () at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:414:5+1
    assume {:print "$at(123,17516,17517)"} true;
    return;

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:414:5+1
L4:

    // abort($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:414:5+1
    assume {:print "$at(123,17516,17517)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::verify_ungated_and_descendant [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:475:5+1312
procedure {:inline 1} $1_object_verify_ungated_and_descendant(_$t0: int, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $1_object_ObjectCore;
    var $t5: $1_object_ObjectCore;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: $1_object_ObjectCore;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: bool;
    var $t20: $1_object_ObjectCore;
    var $t21: bool;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:475:5+1
    assume {:print "$at(123,19602,19603)"} true;
    assume {:print "$track_local(55,42,0):", $t0} $t0 == $t0;

    // trace_local[destination]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:475:5+1
    assume {:print "$track_local(55,42,1):", $t1} $t1 == $t1;

    // trace_local[current_address]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:476:13+15
    assume {:print "$at(123,19708,19723)"} true;
    assume {:print "$track_local(55,42,2):", $t1} $t1 == $t1;

    // $t6 := exists<object::ObjectCore>($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:478:13+6
    assume {:print "$at(123,19768,19774)"} true;
    $t6 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // if ($t6) goto L1 else goto L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:477:9+121
    assume {:print "$at(123,19747,19868)"} true;
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:477:9+121
L1:

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:477:9+121
    assume {:print "$at(123,19747,19868)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:479:30+22
    assume {:print "$at(123,19834,19856)"} true;
L0:

    // $t7 := 2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:479:30+22
    assume {:print "$at(123,19834,19856)"} true;
    $t7 := 2;
    assume $IsValid'u64'($t7);

    // $t8 := error::not_found($t7) on_abort goto L21 with $t9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:479:13+40
    call $t8 := $1_error_not_found($t7);
    if ($abort_flag) {
        assume {:print "$at(123,19817,19857)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,42):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_abort($t8) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:477:9+121
    assume {:print "$at(123,19747,19868)"} true;
    assume {:print "$track_abort(55,42):", $t8} $t8 == $t8;

    // $t9 := move($t8) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:477:9+121
    $t9 := $t8;

    // goto L21 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:477:9+121
    goto L21;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:482:48+15
    assume {:print "$at(123,19918,19933)"} true;
L2:

    // $t10 := get_global<object::ObjectCore>($t1) on_abort goto L21 with $t9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:482:22+13
    assume {:print "$at(123,19892,19905)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($1_object_ObjectCore_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(123,19892,19905)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,42):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_local[object]($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:482:13+6
    assume {:print "$track_local(55,42,4):", $t10} $t10 == $t10;

    // $t11 := get_field<object::ObjectCore>.allow_ungated_transfer($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:484:13+29
    assume {:print "$at(123,19965,19994)"} true;
    $t11 := $t10->$allow_ungated_transfer;

    // if ($t11) goto L4 else goto L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:483:9+122
    assume {:print "$at(123,19944,20066)"} true;
    if ($t11) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:483:9+122
L4:

    // goto L5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:483:9+122
    assume {:print "$at(123,19944,20066)"} true;
    goto L5;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:483:9+122
L3:

    // $t12 := 3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:485:38+21
    assume {:print "$at(123,20033,20054)"} true;
    $t12 := 3;
    assume $IsValid'u64'($t12);

    // $t13 := error::permission_denied($t12) on_abort goto L21 with $t9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:485:13+47
    call $t13 := $1_error_permission_denied($t12);
    if ($abort_flag) {
        assume {:print "$at(123,20008,20055)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,42):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_abort($t13) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:483:9+122
    assume {:print "$at(123,19944,20066)"} true;
    assume {:print "$track_abort(55,42):", $t13} $t13 == $t13;

    // $t9 := move($t13) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:483:9+122
    $t9 := $t13;

    // goto L21 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:483:9+122
    goto L21;

    // label L5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:488:31+6
    assume {:print "$at(123,20099,20105)"} true;
L5:

    // $t14 := get_field<object::ObjectCore>.owner($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:488:31+12
    assume {:print "$at(123,20099,20111)"} true;
    $t14 := $t10->$owner;

    // trace_local[current_address#1]($t14) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:488:13+15
    assume {:print "$track_local(55,42,3):", $t14} $t14 == $t14;

    // label L18 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    assume {:print "$at(123,20152,20157)"} true;
L18:

    // $t3 := havoc[val]() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    assume {:print "$at(123,20152,20157)"} true;
    havoc $t3;

    // assume WellFormed($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    assume $IsValid'address'($t3);

    // $t15 := havoc[val]() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    havoc $t15;

    // assume WellFormed($t15) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    assume $IsValid'bool'($t15);

    // $t16 := havoc[val]() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    havoc $t16;

    // assume WellFormed($t16) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    assume $IsValid'u8'($t16);

    // $t17 := havoc[val]() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    havoc $t17;

    // assume WellFormed($t17) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    assume $IsValid'u8'($t17);

    // $t18 := havoc[val]() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    havoc $t18;

    // assume WellFormed($t18) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    assume $IsValid'bool'($t18);

    // $t19 := havoc[val]() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    havoc $t19;

    // assume WellFormed($t19) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    assume $IsValid'bool'($t19);

    // $t20 := havoc[val]() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    havoc $t20;

    // assume WellFormed($t20) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    assume $IsValid'$1_object_ObjectCore'($t20);

    // $t21 := havoc[val]() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    havoc $t21;

    // assume WellFormed($t21) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    assume $IsValid'bool'($t21);

    // $t22 := havoc[val]() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    havoc $t22;

    // assume WellFormed($t22) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    assume $IsValid'address'($t22);

    // trace_local[current_address#1]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    assume {:print "$info(): enter loop, variable(s) current_address#1 havocked and reassigned"} true;
    assume {:print "$track_local(55,42,3):", $t3} $t3 == $t3;

    // assume Not(AbortFlag()) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:16+5
    assume !$abort_flag;

    // $t15 := !=($t0, $t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:22+2
    $t15 := !$IsEqual'address'($t0, $t3);

    // if ($t15) goto L7 else goto L6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:9+762
    if ($t15) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:491:9+762
L7:

    // label L8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:492:25+9
    assume {:print "$at(123,20204,20213)"} true;
L8:

    // $t16 := 1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:492:25+9
    assume {:print "$at(123,20204,20213)"} true;
    $t16 := 1;
    assume $IsValid'u8'($t16);

    // $t17 := 8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:493:29+22
    assume {:print "$at(123,20243,20265)"} true;
    $t17 := 8;
    assume $IsValid'u8'($t17);

    // $t18 := <($t16, $t17) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:493:27+1
    call $t18 := $Lt($t16, $t17);

    // if ($t18) goto L10 else goto L9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:493:13+78
    if ($t18) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:493:13+78
L10:

    // goto L11 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:493:13+78
    assume {:print "$at(123,20227,20305)"} true;
    goto L11;

    // label L9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:493:73+16
L9:

    // $t23 := 6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:493:73+16
    assume {:print "$at(123,20287,20303)"} true;
    $t23 := 6;
    assume $IsValid'u64'($t23);

    // $t24 := error::out_of_range($t23) on_abort goto L21 with $t9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:493:53+37
    call $t24 := $1_error_out_of_range($t23);
    if ($abort_flag) {
        assume {:print "$at(123,20267,20304)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,42):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_abort($t24) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:493:13+78
    assume {:print "$at(123,20227,20305)"} true;
    assume {:print "$track_abort(55,42):", $t24} $t24 == $t24;

    // $t9 := move($t24) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:493:13+78
    $t9 := $t24;

    // goto L21 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:493:13+78
    goto L21;

    // label L11 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:498:36+15
    assume {:print "$at(123,20542,20557)"} true;
L11:

    // $t19 := exists<object::ObjectCore>($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:498:17+6
    assume {:print "$at(123,20523,20529)"} true;
    $t19 := $ResourceExists($1_object_ObjectCore_$memory, $t3);

    // if ($t19) goto L13 else goto L12 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:497:13+136
    assume {:print "$at(123,20498,20634)"} true;
    if ($t19) { goto L13; } else { goto L12; }

    // label L13 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:497:13+136
L13:

    // goto L14 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:497:13+136
    assume {:print "$at(123,20498,20634)"} true;
    goto L14;

    // label L12 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:499:42+17
    assume {:print "$at(123,20601,20618)"} true;
L12:

    // $t25 := 4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:499:42+17
    assume {:print "$at(123,20601,20618)"} true;
    $t25 := 4;
    assume $IsValid'u64'($t25);

    // $t26 := error::permission_denied($t25) on_abort goto L21 with $t9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:499:17+43
    call $t26 := $1_error_permission_denied($t25);
    if ($abort_flag) {
        assume {:print "$at(123,20576,20619)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,42):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_abort($t26) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:497:13+136
    assume {:print "$at(123,20498,20634)"} true;
    assume {:print "$track_abort(55,42):", $t26} $t26 == $t26;

    // $t9 := move($t26) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:497:13+136
    $t9 := $t26;

    // goto L21 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:497:13+136
    goto L21;

    // label L14 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:501:52+15
    assume {:print "$at(123,20687,20702)"} true;
L14:

    // $t20 := get_global<object::ObjectCore>($t3) on_abort goto L21 with $t9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:501:26+13
    assume {:print "$at(123,20661,20674)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $ResourceValue($1_object_ObjectCore_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(123,20661,20674)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,42):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_local[object#3]($t20) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:501:17+6
    assume {:print "$track_local(55,42,5):", $t20} $t20 == $t20;

    // $t21 := get_field<object::ObjectCore>.allow_ungated_transfer($t20) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:503:17+29
    assume {:print "$at(123,20742,20771)"} true;
    $t21 := $t20->$allow_ungated_transfer;

    // if ($t21) goto L16 else goto L15 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:502:13+134
    assume {:print "$at(123,20717,20851)"} true;
    if ($t21) { goto L16; } else { goto L15; }

    // label L16 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:502:13+134
L16:

    // goto L17 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:502:13+134
    assume {:print "$at(123,20717,20851)"} true;
    goto L17;

    // label L15 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:502:13+134
L15:

    // $t27 := 3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:504:42+21
    assume {:print "$at(123,20814,20835)"} true;
    $t27 := 3;
    assume $IsValid'u64'($t27);

    // $t28 := error::permission_denied($t27) on_abort goto L21 with $t9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:504:17+47
    call $t28 := $1_error_permission_denied($t27);
    if ($abort_flag) {
        assume {:print "$at(123,20789,20836)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(55,42):", $t9} $t9 == $t9;
        goto L21;
    }

    // trace_abort($t28) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:502:13+134
    assume {:print "$at(123,20717,20851)"} true;
    assume {:print "$track_abort(55,42):", $t28} $t28 == $t28;

    // $t9 := move($t28) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:502:13+134
    $t9 := $t28;

    // goto L21 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:502:13+134
    goto L21;

    // label L17 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:507:31+6
    assume {:print "$at(123,20884,20890)"} true;
L17:

    // $t22 := get_field<object::ObjectCore>.owner($t20) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:507:31+12
    assume {:print "$at(123,20884,20896)"} true;
    $t22 := $t20->$owner;

    // trace_local[current_address#1]($t22) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:507:13+15
    assume {:print "$track_local(55,42,3):", $t22} $t22 == $t22;

    // goto L19 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:507:43+1
    goto L19;

    // label L6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:508:10+1
    assume {:print "$at(123,20907,20908)"} true;
L6:

    // goto L20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:508:10+1
    assume {:print "$at(123,20907,20908)"} true;
    goto L20;

    // label L19 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:508:10+1
    // Loop invariant checking block for the loop started with header: L18
L19:

    // stop() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:508:10+1
    assume {:print "$at(123,20907,20908)"} true;
    assume false;
    return;

    // label L20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:509:5+1
    assume {:print "$at(123,20913,20914)"} true;
L20:

    // return () at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:509:5+1
    assume {:print "$at(123,20913,20914)"} true;
    return;

    // label L21 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:509:5+1
L21:

    // abort($t9) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\object.move:509:5+1
    assume {:print "$at(123,20913,20914)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// struct royalty::Royalty at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\royalty.move:23:5+245
datatype $4_royalty_Royalty {
    $4_royalty_Royalty($numerator: int, $denominator: int, $payee_address: int)
}
function {:inline} $Update'$4_royalty_Royalty'_numerator(s: $4_royalty_Royalty, x: int): $4_royalty_Royalty {
    $4_royalty_Royalty(x, s->$denominator, s->$payee_address)
}
function {:inline} $Update'$4_royalty_Royalty'_denominator(s: $4_royalty_Royalty, x: int): $4_royalty_Royalty {
    $4_royalty_Royalty(s->$numerator, x, s->$payee_address)
}
function {:inline} $Update'$4_royalty_Royalty'_payee_address(s: $4_royalty_Royalty, x: int): $4_royalty_Royalty {
    $4_royalty_Royalty(s->$numerator, s->$denominator, x)
}
function $IsValid'$4_royalty_Royalty'(s: $4_royalty_Royalty): bool {
    $IsValid'u64'(s->$numerator)
      && $IsValid'u64'(s->$denominator)
      && $IsValid'address'(s->$payee_address)
}
function {:inline} $IsEqual'$4_royalty_Royalty'(s1: $4_royalty_Royalty, s2: $4_royalty_Royalty): bool {
    s1 == s2
}
var $4_royalty_Royalty_$memory: $Memory $4_royalty_Royalty;

// fun royalty::init [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\royalty.move:37:5+149
procedure {:inline 1} $4_royalty_init(_$t0: $1_object_ConstructorRef, _$t1: $4_royalty_Royalty) returns ()
{
    // declare local variables
    var $t2: $signer;
    var $t3: $signer;
    var $t4: int;
    var $t0: $1_object_ConstructorRef;
    var $t1: $4_royalty_Royalty;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$4_royalty_Royalty': $4_royalty_Royalty;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\royalty.move:37:5+1
    assume {:print "$at(160,1380,1381)"} true;
    assume {:print "$track_local(67,6,0):", $t0} $t0 == $t0;

    // trace_local[royalty]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\royalty.move:37:5+1
    assume {:print "$track_local(67,6,1):", $t1} $t1 == $t1;

    // $t3 := object::generate_signer($t0) on_abort goto L2 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\royalty.move:38:22+28
    assume {:print "$at(160,1459,1487)"} true;
    call $t3 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(160,1459,1487)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(67,6):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[signer]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\royalty.move:38:13+6
    assume {:print "$track_local(67,6,2):", $t3} $t3 == $t3;

    // move_to<royalty::Royalty>($t1, $t3) on_abort goto L2 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\royalty.move:39:9+7
    assume {:print "$at(160,1497,1504)"} true;
    if ($ResourceExists($4_royalty_Royalty_$memory, $t3->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_royalty_Royalty_$memory := $ResourceUpdate($4_royalty_Royalty_$memory, $t3->$addr, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(160,1497,1504)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(67,6):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\royalty.move:40:5+1
    assume {:print "$at(160,1528,1529)"} true;
L1:

    // return () at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\royalty.move:40:5+1
    assume {:print "$at(160,1528,1529)"} true;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\royalty.move:40:5+1
L2:

    // abort($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\royalty.move:40:5+1
    assume {:print "$at(160,1528,1529)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// struct collection::BurnEvent at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:100:5+84
datatype $4_collection_BurnEvent {
    $4_collection_BurnEvent($index: int, $token: int)
}
function {:inline} $Update'$4_collection_BurnEvent'_index(s: $4_collection_BurnEvent, x: int): $4_collection_BurnEvent {
    $4_collection_BurnEvent(x, s->$token)
}
function {:inline} $Update'$4_collection_BurnEvent'_token(s: $4_collection_BurnEvent, x: int): $4_collection_BurnEvent {
    $4_collection_BurnEvent(s->$index, x)
}
function $IsValid'$4_collection_BurnEvent'(s: $4_collection_BurnEvent): bool {
    $IsValid'u64'(s->$index)
      && $IsValid'address'(s->$token)
}
function {:inline} $IsEqual'$4_collection_BurnEvent'(s1: $4_collection_BurnEvent, s2: $4_collection_BurnEvent): bool {
    s1 == s2
}

// struct collection::Collection at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:50:5+576
datatype $4_collection_Collection {
    $4_collection_Collection($creator: int, $description: $1_string_String, $name: $1_string_String, $uri: $1_string_String, $mutation_events: $1_event_EventHandle'$4_collection_MutationEvent')
}
function {:inline} $Update'$4_collection_Collection'_creator(s: $4_collection_Collection, x: int): $4_collection_Collection {
    $4_collection_Collection(x, s->$description, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_description(s: $4_collection_Collection, x: $1_string_String): $4_collection_Collection {
    $4_collection_Collection(s->$creator, x, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_name(s: $4_collection_Collection, x: $1_string_String): $4_collection_Collection {
    $4_collection_Collection(s->$creator, s->$description, x, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_uri(s: $4_collection_Collection, x: $1_string_String): $4_collection_Collection {
    $4_collection_Collection(s->$creator, s->$description, s->$name, x, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_mutation_events(s: $4_collection_Collection, x: $1_event_EventHandle'$4_collection_MutationEvent'): $4_collection_Collection {
    $4_collection_Collection(s->$creator, s->$description, s->$name, s->$uri, x)
}
function $IsValid'$4_collection_Collection'(s: $4_collection_Collection): bool {
    $IsValid'address'(s->$creator)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$uri)
      && $IsValid'$1_event_EventHandle'$4_collection_MutationEvent''(s->$mutation_events)
}
function {:inline} $IsEqual'$4_collection_Collection'(s1: $4_collection_Collection, s2: $4_collection_Collection): bool {
    $IsEqual'address'(s1->$creator, s2->$creator)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$uri, s2->$uri)
    && $IsEqual'$1_event_EventHandle'$4_collection_MutationEvent''(s1->$mutation_events, s2->$mutation_events)}
var $4_collection_Collection_$memory: $Memory $4_collection_Collection;

// struct collection::FixedSupply at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:78:5+344
datatype $4_collection_FixedSupply {
    $4_collection_FixedSupply($current_supply: int, $max_supply: int, $total_minted: int, $burn_events: $1_event_EventHandle'$4_collection_BurnEvent', $mint_events: $1_event_EventHandle'$4_collection_MintEvent')
}
function {:inline} $Update'$4_collection_FixedSupply'_current_supply(s: $4_collection_FixedSupply, x: int): $4_collection_FixedSupply {
    $4_collection_FixedSupply(x, s->$max_supply, s->$total_minted, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_max_supply(s: $4_collection_FixedSupply, x: int): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, x, s->$total_minted, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_total_minted(s: $4_collection_FixedSupply, x: int): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, s->$max_supply, x, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_burn_events(s: $4_collection_FixedSupply, x: $1_event_EventHandle'$4_collection_BurnEvent'): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, s->$max_supply, s->$total_minted, x, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_mint_events(s: $4_collection_FixedSupply, x: $1_event_EventHandle'$4_collection_MintEvent'): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, s->$max_supply, s->$total_minted, s->$burn_events, x)
}
function $IsValid'$4_collection_FixedSupply'(s: $4_collection_FixedSupply): bool {
    $IsValid'u64'(s->$current_supply)
      && $IsValid'u64'(s->$max_supply)
      && $IsValid'u64'(s->$total_minted)
      && $IsValid'$1_event_EventHandle'$4_collection_BurnEvent''(s->$burn_events)
      && $IsValid'$1_event_EventHandle'$4_collection_MintEvent''(s->$mint_events)
}
function {:inline} $IsEqual'$4_collection_FixedSupply'(s1: $4_collection_FixedSupply, s2: $4_collection_FixedSupply): bool {
    s1 == s2
}
var $4_collection_FixedSupply_$memory: $Memory $4_collection_FixedSupply;

// struct collection::MintEvent at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:105:5+84
datatype $4_collection_MintEvent {
    $4_collection_MintEvent($index: int, $token: int)
}
function {:inline} $Update'$4_collection_MintEvent'_index(s: $4_collection_MintEvent, x: int): $4_collection_MintEvent {
    $4_collection_MintEvent(x, s->$token)
}
function {:inline} $Update'$4_collection_MintEvent'_token(s: $4_collection_MintEvent, x: int): $4_collection_MintEvent {
    $4_collection_MintEvent(s->$index, x)
}
function $IsValid'$4_collection_MintEvent'(s: $4_collection_MintEvent): bool {
    $IsValid'u64'(s->$index)
      && $IsValid'address'(s->$token)
}
function {:inline} $IsEqual'$4_collection_MintEvent'(s1: $4_collection_MintEvent, s2: $4_collection_MintEvent): bool {
    s1 == s2
}

// struct collection::MutationEvent at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:71:5+80
datatype $4_collection_MutationEvent {
    $4_collection_MutationEvent($mutated_field_name: $1_string_String)
}
function {:inline} $Update'$4_collection_MutationEvent'_mutated_field_name(s: $4_collection_MutationEvent, x: $1_string_String): $4_collection_MutationEvent {
    $4_collection_MutationEvent(x)
}
function $IsValid'$4_collection_MutationEvent'(s: $4_collection_MutationEvent): bool {
    $IsValid'$1_string_String'(s->$mutated_field_name)
}
function {:inline} $IsEqual'$4_collection_MutationEvent'(s1: $4_collection_MutationEvent, s2: $4_collection_MutationEvent): bool {
    $IsEqual'$1_string_String'(s1->$mutated_field_name, s2->$mutated_field_name)}

// struct collection::UnlimitedSupply at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:91:5+283
datatype $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply($current_supply: int, $total_minted: int, $burn_events: $1_event_EventHandle'$4_collection_BurnEvent', $mint_events: $1_event_EventHandle'$4_collection_MintEvent')
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_current_supply(s: $4_collection_UnlimitedSupply, x: int): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(x, s->$total_minted, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_total_minted(s: $4_collection_UnlimitedSupply, x: int): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(s->$current_supply, x, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_burn_events(s: $4_collection_UnlimitedSupply, x: $1_event_EventHandle'$4_collection_BurnEvent'): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(s->$current_supply, s->$total_minted, x, s->$mint_events)
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_mint_events(s: $4_collection_UnlimitedSupply, x: $1_event_EventHandle'$4_collection_MintEvent'): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(s->$current_supply, s->$total_minted, s->$burn_events, x)
}
function $IsValid'$4_collection_UnlimitedSupply'(s: $4_collection_UnlimitedSupply): bool {
    $IsValid'u64'(s->$current_supply)
      && $IsValid'u64'(s->$total_minted)
      && $IsValid'$1_event_EventHandle'$4_collection_BurnEvent''(s->$burn_events)
      && $IsValid'$1_event_EventHandle'$4_collection_MintEvent''(s->$mint_events)
}
function {:inline} $IsEqual'$4_collection_UnlimitedSupply'(s1: $4_collection_UnlimitedSupply, s2: $4_collection_UnlimitedSupply): bool {
    s1 == s2
}
var $4_collection_UnlimitedSupply_$memory: $Memory $4_collection_UnlimitedSupply;

// fun collection::create_collection_address [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:243:5+164
procedure {:inline 1} $4_collection_create_collection_address(_$t0: int, _$t1: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t2: Vec (int);
    var $t3: int;
    var $t4: int;
    var $t0: int;
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[creator]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:243:5+1
    assume {:print "$at(158,9321,9322)"} true;
    assume {:print "$track_local(68,1,0):", $t0} $t0 == $t0;

    // trace_local[name]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:243:5+1
    assume {:print "$track_local(68,1,1):", $t1} $t1 == $t1;

    // $t2 := collection::create_collection_seed($t1) on_abort goto L2 with $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:244:48+28
    assume {:print "$at(158,9450,9478)"} true;
    call $t2 := $4_collection_create_collection_seed($t1);
    if ($abort_flag) {
        assume {:print "$at(158,9450,9478)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(68,1):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := object::create_object_address($t0, $t2) on_abort goto L2 with $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:244:9+68
    call $t4 := $1_object_create_object_address($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(158,9411,9479)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(68,1):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:244:9+68
    assume {:print "$track_return(68,1,0):", $t4} $t4 == $t4;

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:245:5+1
    assume {:print "$at(158,9484,9485)"} true;
L1:

    // return $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:245:5+1
    assume {:print "$at(158,9484,9485)"} true;
    $ret0 := $t4;
    return;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:245:5+1
L2:

    // abort($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:245:5+1
    assume {:print "$at(158,9484,9485)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun collection::create_collection_seed [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:248:5+214
procedure {:inline 1} $4_collection_create_collection_seed(_$t0: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: Vec (int);
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[name]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:248:5+1
    assume {:print "$at(158,9573,9574)"} true;
    assume {:print "$track_local(68,2,0):", $t0} $t0 == $t0;

    // $t1 := string::length($t0) on_abort goto L4 with $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:249:17+20
    assume {:print "$at(158,9652,9672)"} true;
    call $t1 := $1_string_length($t0);
    if ($abort_flag) {
        assume {:print "$at(158,9652,9672)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(68,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // $t3 := 128 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:249:41+26
    $t3 := 128;
    assume $IsValid'u64'($t3);

    // $t4 := <=($t1, $t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:249:38+2
    call $t4 := $Le($t1, $t3);

    // if ($t4) goto L1 else goto L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:249:9+107
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:249:9+107
L1:

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:249:9+107
    assume {:print "$at(158,9644,9751)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:249:9+107
L0:

    // $t5 := 3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:249:89+25
    assume {:print "$at(158,9724,9749)"} true;
    $t5 := 3;
    assume $IsValid'u64'($t5);

    // $t6 := error::out_of_range($t5) on_abort goto L4 with $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:249:69+46
    call $t6 := $1_error_out_of_range($t5);
    if ($abort_flag) {
        assume {:print "$at(158,9704,9750)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(68,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_abort($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:249:9+107
    assume {:print "$at(158,9644,9751)"} true;
    assume {:print "$track_abort(68,2):", $t6} $t6 == $t6;

    // $t2 := move($t6) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:249:9+107
    $t2 := $t6;

    // goto L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:249:9+107
    goto L4;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:250:24+4
    assume {:print "$at(158,9776,9780)"} true;
L2:

    // $t7 := string::bytes($t0) on_abort goto L4 with $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:250:10+19
    assume {:print "$at(158,9762,9781)"} true;
    call $t7 := $1_string_bytes($t0);
    if ($abort_flag) {
        assume {:print "$at(158,9762,9781)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(68,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_return[0]($t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:250:9+20
    assume {:print "$track_return(68,2,0):", $t7} $t7 == $t7;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:251:5+1
    assume {:print "$at(158,9786,9787)"} true;
L3:

    // return $t7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:251:5+1
    assume {:print "$at(158,9786,9787)"} true;
    $ret0 := $t7;
    return;

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:251:5+1
L4:

    // abort($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:251:5+1
    assume {:print "$at(158,9786,9787)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun collection::create_unlimited_collection [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:149:5+875
procedure {:inline 1} $4_collection_create_unlimited_collection(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_option_Option'$4_royalty_Royalty', _$t4: $1_string_String) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t5: $4_collection_Collection;
    var $t6: Vec (int);
    var $t7: $1_object_ConstructorRef;
    var $t8: $1_object_ConstructorRef;
    var $t9: $signer;
    var $t10: $1_string_String;
    var $t11: $1_string_String;
    var $t12: $signer;
    var $t13: $signer;
    var $t14: $1_option_Option'$4_royalty_Royalty';
    var $t15: $4_collection_UnlimitedSupply;
    var $t16: $1_option_Option'$4_collection_UnlimitedSupply';
    var $t17: $1_object_TransferRef;
    var $t18: $1_string_String;
    var $t19: Vec (int);
    var $t20: int;
    var $t21: $1_object_ConstructorRef;
    var $t22: $signer;
    var $t23: int;
    var $t24: int;
    var $t25: $1_event_EventHandle'$4_collection_BurnEvent';
    var $t26: $1_event_EventHandle'$4_collection_MintEvent';
    var $t27: $4_collection_UnlimitedSupply;
    var $t28: $1_option_Option'$4_collection_UnlimitedSupply';
    var $t29: int;
    var $t30: int;
    var $t31: bool;
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t36: bool;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: bool;
    var $t42: int;
    var $t43: int;
    var $t44: $signer;
    var $t45: int;
    var $t46: $1_event_EventHandle'$4_collection_MutationEvent';
    var $t47: $4_collection_Collection;
    var $t48: bool;
    var $t49: $4_collection_UnlimitedSupply;
    var $t50: bool;
    var $t51: bool;
    var $t52: $1_option_Option'$4_royalty_Royalty';
    var $t53: bool;
    var $t54: $Mutation ($1_option_Option'$4_royalty_Royalty');
    var $t55: $4_royalty_Royalty;
    var $t56: $1_option_Option'$4_royalty_Royalty';
    var $t57: bool;
    var $t58: $1_object_TransferRef;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_option_Option'$4_royalty_Royalty';
    var $t4: $1_string_String;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'$1_option_Option'$4_collection_UnlimitedSupply'': $1_option_Option'$4_collection_UnlimitedSupply';
    var $temp_0'$1_option_Option'$4_royalty_Royalty'': $1_option_Option'$4_royalty_Royalty';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$4_collection_Collection': $4_collection_Collection;
    var $temp_0'$4_collection_UnlimitedSupply': $4_collection_UnlimitedSupply;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // bytecode translation starts here
    // trace_local[creator]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:149:5+1
    assume {:print "$at(158,6082,6083)"} true;
    assume {:print "$track_local(68,4,0):", $t0} $t0 == $t0;

    // trace_local[description]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:149:5+1
    assume {:print "$track_local(68,4,1):", $t1} $t1 == $t1;

    // trace_local[name]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:149:5+1
    assume {:print "$track_local(68,4,2):", $t2} $t2 == $t2;

    // trace_local[royalty]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:149:5+1
    assume {:print "$track_local(68,4,3):", $t3} $t3 == $t3;

    // trace_local[uri]($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:149:5+1
    assume {:print "$track_local(68,4,4):", $t4} $t4 == $t4;

    // $t19 := collection::create_collection_seed($t2) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:156:31+29
    assume {:print "$at(158,6308,6337)"} true;
    call $t19 := $4_collection_create_collection_seed($t2);
    if ($abort_flag) {
        assume {:print "$at(158,6308,6337)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_local[collection_seed]($t19) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:156:13+15
    assume {:print "$track_local(68,4,6):", $t19} $t19 == $t19;

    // $t21 := object::create_named_object($t0, $t19) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:157:31+53
    assume {:print "$at(158,6369,6422)"} true;
    call $t21 := $1_object_create_named_object($t0, $t19);
    if ($abort_flag) {
        assume {:print "$at(158,6369,6422)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_local[constructor_ref]($t21) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:157:13+15
    assume {:print "$track_local(68,4,7):", $t21} $t21 == $t21;

    // $t22 := object::generate_signer($t21) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:158:29+41
    assume {:print "$at(158,6452,6493)"} true;
    call $t22 := $1_object_generate_signer($t21);
    if ($abort_flag) {
        assume {:print "$at(158,6452,6493)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_local[object_signer]($t22) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:158:13+13
    assume {:print "$track_local(68,4,12):", $t22} $t22 == $t22;

    // $t23 := 0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:161:29+1
    assume {:print "$at(158,6563,6564)"} true;
    $t23 := 0;
    assume $IsValid'u64'($t23);

    // $t24 := 0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:162:27+1
    assume {:print "$at(158,6592,6593)"} true;
    $t24 := 0;
    assume $IsValid'u64'($t24);

    // $t25 := object::new_event_handle<collection::BurnEvent>($t22) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:163:26+40
    assume {:print "$at(158,6620,6660)"} true;
    call $t25 := $1_object_new_event_handle'$4_collection_BurnEvent'($t22);
    if ($abort_flag) {
        assume {:print "$at(158,6620,6660)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t26 := object::new_event_handle<collection::MintEvent>($t22) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:164:26+40
    assume {:print "$at(158,6687,6727)"} true;
    call $t26 := $1_object_new_event_handle'$4_collection_MintEvent'($t22);
    if ($abort_flag) {
        assume {:print "$at(158,6687,6727)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t27 := pack collection::UnlimitedSupply($t23, $t24, $t25, $t26) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:160:22+221
    assume {:print "$at(158,6517,6738)"} true;
    $t27 := $4_collection_UnlimitedSupply($t23, $t24, $t25, $t26);

    // trace_local[supply]($t27) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:160:13+6
    assume {:print "$track_local(68,4,15):", $t27} $t27 == $t27;

    // $t28 := opaque begin: option::some<collection::UnlimitedSupply>($t27) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:174:13+20
    assume {:print "$at(158,6920,6940)"} true;

    // assume And(WellFormed($t28), Le(Len<collection::UnlimitedSupply>(select option::Option.vec($t28)), 1)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:174:13+20
    assume ($IsValid'$1_option_Option'$4_collection_UnlimitedSupply''($t28) && (LenVec($t28->$vec) <= 1));

    // assume Eq<option::Option<collection::UnlimitedSupply>>($t28, option::spec_some<collection::UnlimitedSupply>($t27)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:174:13+20
    assume $IsEqual'$1_option_Option'$4_collection_UnlimitedSupply''($t28, $1_option_spec_some'$4_collection_UnlimitedSupply'($t27));

    // $t28 := opaque end: option::some<collection::UnlimitedSupply>($t27) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:174:13+20

    // trace_local[supply#329]($t28) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:209:9+6
    assume {:print "$at(158,8023,8029)"} true;
    assume {:print "$track_local(68,4,16):", $t28} $t28 == $t28;

    // trace_local[uri#328]($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:208:9+3
    assume {:print "$at(158,8002,8005)"} true;
    assume {:print "$track_local(68,4,18):", $t4} $t4 == $t4;

    // $t14 := $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:207:9+7
    assume {:print "$at(158,7968,7975)"} true;
    $t14 := $t3;

    // trace_local[royalty#327]($t14) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:207:9+7
    assume {:print "$track_local(68,4,14):", $t14} $t14 == $t14;

    // trace_local[name#326]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:206:9+4
    assume {:print "$at(158,7946,7950)"} true;
    assume {:print "$track_local(68,4,11):", $t2} $t2 == $t2;

    // trace_local[description#325]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:205:9+11
    assume {:print "$at(158,7917,7928)"} true;
    assume {:print "$track_local(68,4,10):", $t1} $t1 == $t1;

    // trace_local[constructor_ref#324]($t21) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:204:9+15
    assume {:print "$at(158,7876,7891)"} true;
    assume {:print "$track_local(68,4,8):", $t21} $t21 == $t21;

    // trace_local[creator#323]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:203:9+7
    assume {:print "$at(158,7850,7857)"} true;
    assume {:print "$track_local(68,4,9):", $t0} $t0 == $t0;

    // $t29 := string::length($t2) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:211:17+21
    assume {:print "$at(158,8087,8108)"} true;
    call $t29 := $1_string_length($t2);
    if ($abort_flag) {
        assume {:print "$at(158,8087,8108)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t30 := 128 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:211:42+26
    $t30 := 128;
    assume $IsValid'u64'($t30);

    // $t31 := <=($t29, $t30) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:211:39+2
    call $t31 := $Le($t29, $t30);

    // if ($t31) goto L1 else goto L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:211:9+108
    if ($t31) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:211:9+108
L1:

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:211:9+108
    assume {:print "$at(158,8079,8187)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:211:9+108
L0:

    // $t32 := 3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:211:90+25
    assume {:print "$at(158,8160,8185)"} true;
    $t32 := 3;
    assume $IsValid'u64'($t32);

    // $t33 := error::out_of_range($t32) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:211:70+46
    call $t33 := $1_error_out_of_range($t32);
    if ($abort_flag) {
        assume {:print "$at(158,8140,8186)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_abort($t33) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:211:9+108
    assume {:print "$at(158,8079,8187)"} true;
    assume {:print "$track_abort(68,4):", $t33} $t33 == $t33;

    // $t20 := move($t33) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:211:9+108
    $t20 := $t33;

    // goto L15 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:211:9+108
    goto L15;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:212:32+4
    assume {:print "$at(158,8220,8224)"} true;
L2:

    // $t34 := string::length($t4) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:212:17+20
    assume {:print "$at(158,8205,8225)"} true;
    call $t34 := $1_string_length($t4);
    if ($abort_flag) {
        assume {:print "$at(158,8205,8225)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t35 := 512 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:212:41+14
    $t35 := 512;
    assume $IsValid'u64'($t35);

    // $t36 := <=($t34, $t35) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:212:38+2
    call $t36 := $Le($t34, $t35);

    // if ($t36) goto L4 else goto L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:212:9+83
    if ($t36) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:212:9+83
L4:

    // goto L5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:212:9+83
    assume {:print "$at(158,8197,8280)"} true;
    goto L5;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:212:9+83
L3:

    // $t37 := 4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:212:77+13
    assume {:print "$at(158,8265,8278)"} true;
    $t37 := 4;
    assume $IsValid'u64'($t37);

    // $t38 := error::out_of_range($t37) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:212:57+34
    call $t38 := $1_error_out_of_range($t37);
    if ($abort_flag) {
        assume {:print "$at(158,8245,8279)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_abort($t38) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:212:9+83
    assume {:print "$at(158,8197,8280)"} true;
    assume {:print "$track_abort(68,4):", $t38} $t38 == $t38;

    // $t20 := move($t38) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:212:9+83
    $t20 := $t38;

    // goto L15 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:212:9+83
    goto L15;

    // label L5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:213:32+12
    assume {:print "$at(158,8313,8325)"} true;
L5:

    // $t39 := string::length($t1) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:213:17+28
    assume {:print "$at(158,8298,8326)"} true;
    call $t39 := $1_string_length($t1);
    if ($abort_flag) {
        assume {:print "$at(158,8298,8326)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t40 := 2048 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:213:49+22
    $t40 := 2048;
    assume $IsValid'u64'($t40);

    // $t41 := <=($t39, $t40) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:213:46+2
    call $t41 := $Le($t39, $t40);

    // if ($t41) goto L7 else goto L6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:213:9+107
    if ($t41) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:213:9+107
L7:

    // goto L8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:213:9+107
    assume {:print "$at(158,8290,8397)"} true;
    goto L8;

    // label L6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:213:9+107
L6:

    // $t42 := 5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:213:93+21
    assume {:print "$at(158,8374,8395)"} true;
    $t42 := 5;
    assume $IsValid'u64'($t42);

    // $t43 := error::out_of_range($t42) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:213:73+42
    call $t43 := $1_error_out_of_range($t42);
    if ($abort_flag) {
        assume {:print "$at(158,8354,8396)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_abort($t43) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:213:9+107
    assume {:print "$at(158,8290,8397)"} true;
    assume {:print "$track_abort(68,4):", $t43} $t43 == $t43;

    // $t20 := move($t43) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:213:9+107
    $t20 := $t43;

    // goto L15 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:213:9+107
    goto L15;

    // label L8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:215:53+16
    assume {:print "$at(158,8452,8468)"} true;
L8:

    // $t44 := object::generate_signer($t21) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:215:29+41
    assume {:print "$at(158,8428,8469)"} true;
    call $t44 := $1_object_generate_signer($t21);
    if ($abort_flag) {
        assume {:print "$at(158,8428,8469)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_local[object_signer#330]($t44) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:215:13+13
    assume {:print "$track_local(68,4,13):", $t44} $t44 == $t44;

    // $t45 := signer::address_of($t0) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:218:22+27
    assume {:print "$at(158,8531,8558)"} true;
    call $t45 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(158,8531,8558)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t46 := object::new_event_handle<collection::MutationEvent>($t44) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:222:30+40
    assume {:print "$at(158,8649,8689)"} true;
    call $t46 := $1_object_new_event_handle'$4_collection_MutationEvent'($t44);
    if ($abort_flag) {
        assume {:print "$at(158,8649,8689)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t47 := pack collection::Collection($t45, $t1, $t2, $t4, $t46) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:217:26+203
    assume {:print "$at(158,8497,8700)"} true;
    $t47 := $4_collection_Collection($t45, $t1, $t2, $t4, $t46);

    // trace_local[collection#331]($t47) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:217:13+10
    assume {:print "$track_local(68,4,5):", $t47} $t47 == $t47;

    // move_to<collection::Collection>($t47, $t44) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:224:9+7
    assume {:print "$at(158,8710,8717)"} true;
    if ($ResourceExists($4_collection_Collection_$memory, $t44->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_collection_Collection_$memory := $ResourceUpdate($4_collection_Collection_$memory, $t44->$addr, $t47);
    }
    if ($abort_flag) {
        assume {:print "$at(158,8710,8717)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // $t48 := opaque begin: option::is_some<collection::UnlimitedSupply>($t28) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:226:13+24
    assume {:print "$at(158,8760,8784)"} true;

    // assume WellFormed($t48) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:226:13+24
    assume $IsValid'bool'($t48);

    // assume Eq<bool>($t48, option::spec_is_some<collection::UnlimitedSupply>($t28)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:226:13+24
    assume $IsEqual'bool'($t48, $1_option_spec_is_some'$4_collection_UnlimitedSupply'($t28));

    // $t48 := opaque end: option::is_some<collection::UnlimitedSupply>($t28) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:226:13+24

    // if ($t48) goto L10 else goto L9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:226:9+165
    if ($t48) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:21+14
    assume {:print "$at(158,8808,8822)"} true;
L10:

    // $t49 := opaque begin: option::destroy_some<collection::UnlimitedSupply>($t28) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:37+28
    assume {:print "$at(158,8824,8852)"} true;

    // assume Identical($t50, option::spec_is_none<collection::UnlimitedSupply>($t28)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:37+28
    assume ($t50 == $1_option_spec_is_none'$4_collection_UnlimitedSupply'($t28));

    // if ($t50) goto L17 else goto L16 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:37+28
    if ($t50) { goto L17; } else { goto L16; }

    // label L17 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:37+28
L17:

    // assume And(option::spec_is_none<collection::UnlimitedSupply>($t28), Eq(262145, $t20)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:37+28
    assume {:print "$at(158,8824,8852)"} true;
    assume ($1_option_spec_is_none'$4_collection_UnlimitedSupply'($t28) && $IsEqual'num'(262145, $t20));

    // trace_abort($t20) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:37+28
    assume {:print "$at(158,8824,8852)"} true;
    assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;

    // goto L15 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:37+28
    goto L15;

    // label L16 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:37+28
L16:

    // assume WellFormed($t49) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:37+28
    assume {:print "$at(158,8824,8852)"} true;
    assume $IsValid'$4_collection_UnlimitedSupply'($t49);

    // assume Eq<collection::UnlimitedSupply>($t49, option::spec_borrow<collection::UnlimitedSupply>($t28)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:37+28
    assume $IsEqual'$4_collection_UnlimitedSupply'($t49, $1_option_spec_borrow'$4_collection_UnlimitedSupply'($t28));

    // $t49 := opaque end: option::destroy_some<collection::UnlimitedSupply>($t28) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:37+28

    // move_to<collection::UnlimitedSupply>($t49, $t44) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:13+7
    if ($ResourceExists($4_collection_UnlimitedSupply_$memory, $t44->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_collection_UnlimitedSupply_$memory := $ResourceUpdate($4_collection_UnlimitedSupply_$memory, $t44->$addr, $t49);
    }
    if ($abort_flag) {
        assume {:print "$at(158,8800,8807)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // goto L11 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:227:13+53
    goto L11;

    // label L9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:229:34+6
    assume {:print "$at(158,8904,8910)"} true;
L9:

    // opaque begin: option::destroy_none<collection::UnlimitedSupply>($t28) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:229:13+28
    assume {:print "$at(158,8883,8911)"} true;

    // assume Identical($t51, option::spec_is_some<collection::UnlimitedSupply>($t28)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:229:13+28
    assume ($t51 == $1_option_spec_is_some'$4_collection_UnlimitedSupply'($t28));

    // if ($t51) goto L19 else goto L18 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:229:13+28
    if ($t51) { goto L19; } else { goto L18; }

    // label L19 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:229:13+28
L19:

    // assume And(option::spec_is_some<collection::UnlimitedSupply>($t28), Eq(262144, $t20)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:229:13+28
    assume {:print "$at(158,8883,8911)"} true;
    assume ($1_option_spec_is_some'$4_collection_UnlimitedSupply'($t28) && $IsEqual'num'(262144, $t20));

    // trace_abort($t20) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:229:13+28
    assume {:print "$at(158,8883,8911)"} true;
    assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;

    // goto L15 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:229:13+28
    goto L15;

    // label L18 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:229:13+28
L18:

    // opaque end: option::destroy_none<collection::UnlimitedSupply>($t28) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:229:13+28
    assume {:print "$at(158,8883,8911)"} true;

    // label L11 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:232:29+8
    assume {:print "$at(158,8952,8960)"} true;
L11:

    // $t52 := copy($t14) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:232:29+8
    assume {:print "$at(158,8952,8960)"} true;
    $t52 := $t14;

    // $t53 := opaque begin: option::is_some<royalty::Royalty>($t52) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:232:13+25

    // assume WellFormed($t53) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:232:13+25
    assume $IsValid'bool'($t53);

    // assume Eq<bool>($t53, option::spec_is_some<royalty::Royalty>($t52)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:232:13+25
    assume $IsEqual'bool'($t53, $1_option_spec_is_some'$4_royalty_Royalty'($t52));

    // $t53 := opaque end: option::is_some<royalty::Royalty>($t52) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:232:13+25

    // if ($t53) goto L13 else goto L12 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:232:9+117
    if ($t53) { goto L13; } else { goto L12; }

    // label L13 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:27+16
    assume {:print "$at(158,8991,9007)"} true;
L13:

    // $t54 := borrow_local($t14) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:61+12
    assume {:print "$at(158,9025,9037)"} true;
    $t54 := $Mutation($Local(14), EmptyVec(), $t14);

    // $t55 := opaque begin: option::extract<royalty::Royalty>($t54) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29

    // $t56 := read_ref($t54) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
    $t56 := $Dereference($t54);

    // assume Identical($t57, option::spec_is_none<royalty::Royalty>($t54)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
    assume ($t57 == $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t54)));

    // if ($t57) goto L21 else goto L22 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
    if ($t57) { goto L21; } else { goto L22; }

    // label L21 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
L21:

    // assume And(option::spec_is_none<royalty::Royalty>($t54), Eq(262145, $t20)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
    assume {:print "$at(158,9009,9038)"} true;
    assume ($1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t54)) && $IsEqual'num'(262145, $t20));

    // trace_abort($t20) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
    assume {:print "$at(158,9009,9038)"} true;
    assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;

    // goto L15 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
    goto L15;

    // label L20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
L20:

    // $t54 := havoc[mut]() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
    assume {:print "$at(158,9009,9038)"} true;
    havoc $temp_0'$1_option_Option'$4_royalty_Royalty'';
    $t54 := $UpdateMutation($t54, $temp_0'$1_option_Option'$4_royalty_Royalty'');

    // assume And(WellFormed($t54), Le(Len<royalty::Royalty>(select option::Option.vec($t54)), 1)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($Dereference($t54)) && (LenVec($Dereference($t54)->$vec) <= 1));

    // assume WellFormed($t55) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
    assume $IsValid'$4_royalty_Royalty'($t55);

    // assume Eq<royalty::Royalty>($t55, option::spec_borrow<royalty::Royalty>($t56)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
    assume $IsEqual'$4_royalty_Royalty'($t55, $1_option_spec_borrow'$4_royalty_Royalty'($t56));

    // assume option::spec_is_none<royalty::Royalty>($t54) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
    assume $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t54));

    // $t55 := opaque end: option::extract<royalty::Royalty>($t54) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29

    // pack_ref_deep($t54) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29

    // write_back[LocalRoot($t14)@]($t54) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
    $t14 := $Dereference($t54);

    // trace_local[royalty#327]($t14) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:45+29
    assume {:print "$track_local(68,4,14):", $t14} $t14 == $t14;

    // royalty::init($t21, $t55) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:233:13+62
    call $4_royalty_init($t21, $t55);
    if ($abort_flag) {
        assume {:print "$at(158,8977,9039)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // label L12 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:236:58+16
    assume {:print "$at(158,9109,9125)"} true;
L12:

    // $t58 := object::generate_transfer_ref($t21) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:236:28+47
    assume {:print "$at(158,9079,9126)"} true;
    call $t58 := $1_object_generate_transfer_ref($t21);
    if ($abort_flag) {
        assume {:print "$at(158,9079,9126)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_local[transfer_ref#332]($t58) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:236:13+12
    assume {:print "$track_local(68,4,17):", $t58} $t58 == $t58;

    // object::disable_ungated_transfer($t58) on_abort goto L15 with $t20 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:237:9+47
    assume {:print "$at(158,9136,9183)"} true;
    call $1_object_disable_ungated_transfer($t58);
    if ($abort_flag) {
        assume {:print "$at(158,9136,9183)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(68,4):", $t20} $t20 == $t20;
        goto L15;
    }

    // trace_return[0]($t21) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:239:9+15
    assume {:print "$at(158,9194,9209)"} true;
    assume {:print "$track_return(68,4,0):", $t21} $t21 == $t21;

    // label L14 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:176:5+1
    assume {:print "$at(158,6956,6957)"} true;
L14:

    // return $t21 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:176:5+1
    assume {:print "$at(158,6956,6957)"} true;
    $ret0 := $t21;
    return;

    // label L15 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:176:5+1
L15:

    // abort($t20) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:176:5+1
    assume {:print "$at(158,6956,6957)"} true;
    $abort_code := $t20;
    $abort_flag := true;
    return;

    // label L22 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L22:

    // destroy($t54) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L20 at <internal>:1:1+10
    goto L20;

}

// fun collection::increment_supply [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:254:5+1452
procedure {:inline 1} $4_collection_increment_supply(_$t0: $1_object_Object'$4_collection_Collection', _$t1: int) returns ($ret0: $1_option_Option'u64')
{
    // declare local variables
    var $t2: $1_option_Option'u64';
    var $t3: $1_option_Option'u64';
    var $t4: int;
    var $t5: $Mutation ($4_collection_FixedSupply);
    var $t6: $Mutation ($4_collection_UnlimitedSupply);
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: $Mutation ($4_collection_FixedSupply);
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $Mutation (int);
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: $Mutation (int);
    var $t19: int;
    var $t20: int;
    var $t21: bool;
    var $t22: int;
    var $t23: int;
    var $t24: $Mutation ($1_event_EventHandle'$4_collection_MintEvent');
    var $t25: int;
    var $t26: $4_collection_MintEvent;
    var $t27: int;
    var $t28: bool;
    var $t29: $Mutation ($4_collection_UnlimitedSupply);
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: $Mutation (int);
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: $Mutation (int);
    var $t38: $Mutation ($1_event_EventHandle'$4_collection_MintEvent');
    var $t39: int;
    var $t40: $4_collection_MintEvent;
    var $t41: int;
    var $t0: $1_object_Object'$4_collection_Collection';
    var $t1: int;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_option_Option'u64'': $1_option_Option'u64';
    var $temp_0'$4_collection_FixedSupply': $4_collection_FixedSupply;
    var $temp_0'$4_collection_UnlimitedSupply': $4_collection_UnlimitedSupply;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[collection]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:254:5+1
    assume {:print "$at(158,9886,9887)"} true;
    assume {:print "$track_local(68,10,0):", $t0} $t0 == $t0;

    // trace_local[token]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:254:5+1
    assume {:print "$track_local(68,10,1):", $t1} $t1 == $t1;

    // $t7 := object::object_address<collection::Collection>($t0) on_abort goto L10 with $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:258:31+34
    assume {:print "$at(158,10077,10111)"} true;
    call $t7 := $1_object_object_address'$4_collection_Collection'($t0);
    if ($abort_flag) {
        assume {:print "$at(158,10077,10111)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // trace_local[collection_addr]($t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:258:13+15
    assume {:print "$track_local(68,10,4):", $t7} $t7 == $t7;

    // $t9 := exists<collection::FixedSupply>($t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:259:13+6
    assume {:print "$at(158,10125,10131)"} true;
    $t9 := $ResourceExists($4_collection_FixedSupply_$memory, $t7);

    // if ($t9) goto L1 else goto L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:259:9+1211
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:260:57+15
    assume {:print "$at(158,10221,10236)"} true;
L1:

    // $t10 := borrow_global<collection::FixedSupply>($t7) on_abort goto L10 with $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:260:26+17
    assume {:print "$at(158,10190,10207)"} true;
    if (!$ResourceExists($4_collection_FixedSupply_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t7), EmptyVec(), $ResourceValue($4_collection_FixedSupply_$memory, $t7));
    }
    if ($abort_flag) {
        assume {:print "$at(158,10190,10207)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // trace_local[supply]($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:260:17+6
    $temp_0'$4_collection_FixedSupply' := $Dereference($t10);
    assume {:print "$track_local(68,10,5):", $temp_0'$4_collection_FixedSupply'} $temp_0'$4_collection_FixedSupply' == $temp_0'$4_collection_FixedSupply';

    // $t11 := get_field<collection::FixedSupply>.current_supply($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:261:37+21
    assume {:print "$at(158,10275,10296)"} true;
    $t11 := $Dereference($t10)->$current_supply;

    // $t12 := 1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:261:61+1
    $t12 := 1;
    assume $IsValid'u64'($t12);

    // $t13 := +($t11, $t12) on_abort goto L10 with $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:261:59+1
    call $t13 := $AddU64($t11, $t12);
    if ($abort_flag) {
        assume {:print "$at(158,10297,10298)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // $t14 := borrow_field<collection::FixedSupply>.current_supply($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:261:13+21
    $t14 := $ChildMutation($t10, 0, $Dereference($t10)->$current_supply);

    // write_ref($t14, $t13) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:261:13+49
    $t14 := $UpdateMutation($t14, $t13);

    // write_back[Reference($t10).current_supply (u64)]($t14) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:261:13+49
    $t10 := $UpdateMutation($t10, $Update'$4_collection_FixedSupply'_current_supply($Dereference($t10), $Dereference($t14)));

    // $t15 := get_field<collection::FixedSupply>.total_minted($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:262:35+19
    assume {:print "$at(158,10336,10355)"} true;
    $t15 := $Dereference($t10)->$total_minted;

    // $t16 := 1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:262:57+1
    $t16 := 1;
    assume $IsValid'u64'($t16);

    // $t17 := +($t15, $t16) on_abort goto L10 with $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:262:55+1
    call $t17 := $AddU64($t15, $t16);
    if ($abort_flag) {
        assume {:print "$at(158,10356,10357)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // $t18 := borrow_field<collection::FixedSupply>.total_minted($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:262:13+19
    $t18 := $ChildMutation($t10, 2, $Dereference($t10)->$total_minted);

    // write_ref($t18, $t17) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:262:13+45
    $t18 := $UpdateMutation($t18, $t17);

    // write_back[Reference($t10).total_minted (u64)]($t18) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:262:13+45
    $t10 := $UpdateMutation($t10, $Update'$4_collection_FixedSupply'_total_minted($Dereference($t10), $Dereference($t18)));

    // $t19 := get_field<collection::FixedSupply>.current_supply($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:264:17+21
    assume {:print "$at(158,10398,10419)"} true;
    $t19 := $Dereference($t10)->$current_supply;

    // $t20 := get_field<collection::FixedSupply>.max_supply($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:264:42+17
    $t20 := $Dereference($t10)->$max_supply;

    // $t21 := <=($t19, $t20) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:264:39+2
    call $t21 := $Le($t19, $t20);

    // if ($t21) goto L3 else goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:263:13+148
    assume {:print "$at(158,10373,10521)"} true;
    if ($t21) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:263:13+148
L3:

    // goto L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:263:13+148
    assume {:print "$at(158,10373,10521)"} true;
    goto L4;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:263:13+148
L2:

    // write_back[collection::FixedSupply@]($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:263:13+148
    assume {:print "$at(158,10373,10521)"} true;
    $4_collection_FixedSupply_$memory := $ResourceUpdate($4_collection_FixedSupply_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // destroy($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:263:13+148

    // $t22 := 2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:265:37+27
    assume {:print "$at(158,10478,10505)"} true;
    $t22 := 2;
    assume $IsValid'u64'($t22);

    // $t23 := error::out_of_range($t22) on_abort goto L10 with $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:265:17+48
    call $t23 := $1_error_out_of_range($t22);
    if ($abort_flag) {
        assume {:print "$at(158,10458,10506)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // trace_abort($t23) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:263:13+148
    assume {:print "$at(158,10373,10521)"} true;
    assume {:print "$track_abort(68,10):", $t23} $t23 == $t23;

    // $t8 := move($t23) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:263:13+148
    $t8 := $t23;

    // goto L10 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:263:13+148
    goto L10;

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:267:36+6
    assume {:print "$at(158,10558,10564)"} true;
L4:

    // $t24 := borrow_field<collection::FixedSupply>.mint_events($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:267:31+23
    assume {:print "$at(158,10553,10576)"} true;
    $t24 := $ChildMutation($t10, 4, $Dereference($t10)->$mint_events);

    // $t25 := get_field<collection::FixedSupply>.total_minted($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:269:28+19
    assume {:print "$at(158,10633,10652)"} true;
    $t25 := $Dereference($t10)->$total_minted;

    // $t26 := pack collection::MintEvent($t25, $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:268:17+104
    assume {:print "$at(158,10594,10698)"} true;
    $t26 := $4_collection_MintEvent($t25, $t1);

    // opaque begin: event::emit_event<collection::MintEvent>($t24, $t26) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:267:13+178
    assume {:print "$at(158,10535,10713)"} true;

    // opaque end: event::emit_event<collection::MintEvent>($t24, $t26) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:267:13+178

    // write_back[Reference($t10).mint_events (event::EventHandle<collection::MintEvent>)]($t24) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:267:13+178
    $t10 := $UpdateMutation($t10, $Update'$4_collection_FixedSupply'_mint_events($Dereference($t10), $Dereference($t24)));

    // $t27 := get_field<collection::FixedSupply>.total_minted($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:273:26+19
    assume {:print "$at(158,10740,10759)"} true;
    $t27 := $Dereference($t10)->$total_minted;

    // write_back[collection::FixedSupply@]($t10) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:273:26+19
    $4_collection_FixedSupply_$memory := $ResourceUpdate($4_collection_FixedSupply_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // $t3 := opaque begin: option::some<u64>($t27) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:273:13+33

    // assume And(WellFormed($t3), Le(Len<u64>(select option::Option.vec($t3)), 1)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:273:13+33
    assume ($IsValid'$1_option_Option'u64''($t3) && (LenVec($t3->$vec) <= 1));

    // assume Eq<option::Option<u64>>($t3, option::spec_some<u64>($t27)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:273:13+33
    assume $IsEqual'$1_option_Option'u64''($t3, $1_option_spec_some'u64'($t27));

    // $t3 := opaque end: option::some<u64>($t27) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:273:13+33

    // goto L5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:259:9+1211
    assume {:print "$at(158,10121,11332)"} true;
    goto L5;

    // label L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:274:44+15
    assume {:print "$at(158,10804,10819)"} true;
L0:

    // $t28 := exists<collection::UnlimitedSupply>($t7) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:274:20+6
    assume {:print "$at(158,10780,10786)"} true;
    $t28 := $ResourceExists($4_collection_UnlimitedSupply_$memory, $t7);

    // if ($t28) goto L7 else goto L6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:274:16+556
    if ($t28) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:275:61+15
    assume {:print "$at(158,10884,10899)"} true;
L7:

    // $t29 := borrow_global<collection::UnlimitedSupply>($t7) on_abort goto L10 with $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:275:26+17
    assume {:print "$at(158,10849,10866)"} true;
    if (!$ResourceExists($4_collection_UnlimitedSupply_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t29 := $Mutation($Global($t7), EmptyVec(), $ResourceValue($4_collection_UnlimitedSupply_$memory, $t7));
    }
    if ($abort_flag) {
        assume {:print "$at(158,10849,10866)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // trace_local[supply#1]($t29) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:275:17+6
    $temp_0'$4_collection_UnlimitedSupply' := $Dereference($t29);
    assume {:print "$track_local(68,10,6):", $temp_0'$4_collection_UnlimitedSupply'} $temp_0'$4_collection_UnlimitedSupply' == $temp_0'$4_collection_UnlimitedSupply';

    // $t30 := get_field<collection::UnlimitedSupply>.current_supply($t29) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:276:37+21
    assume {:print "$at(158,10938,10959)"} true;
    $t30 := $Dereference($t29)->$current_supply;

    // $t31 := 1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:276:61+1
    $t31 := 1;
    assume $IsValid'u64'($t31);

    // $t32 := +($t30, $t31) on_abort goto L10 with $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:276:59+1
    call $t32 := $AddU64($t30, $t31);
    if ($abort_flag) {
        assume {:print "$at(158,10960,10961)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // $t33 := borrow_field<collection::UnlimitedSupply>.current_supply($t29) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:276:13+21
    $t33 := $ChildMutation($t29, 0, $Dereference($t29)->$current_supply);

    // write_ref($t33, $t32) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:276:13+49
    $t33 := $UpdateMutation($t33, $t32);

    // write_back[Reference($t29).current_supply (u64)]($t33) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:276:13+49
    $t29 := $UpdateMutation($t29, $Update'$4_collection_UnlimitedSupply'_current_supply($Dereference($t29), $Dereference($t33)));

    // $t34 := get_field<collection::UnlimitedSupply>.total_minted($t29) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:277:35+19
    assume {:print "$at(158,10999,11018)"} true;
    $t34 := $Dereference($t29)->$total_minted;

    // $t35 := 1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:277:57+1
    $t35 := 1;
    assume $IsValid'u64'($t35);

    // $t36 := +($t34, $t35) on_abort goto L10 with $t8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:277:55+1
    call $t36 := $AddU64($t34, $t35);
    if ($abort_flag) {
        assume {:print "$at(158,11019,11020)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(68,10):", $t8} $t8 == $t8;
        goto L10;
    }

    // $t37 := borrow_field<collection::UnlimitedSupply>.total_minted($t29) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:277:13+19
    $t37 := $ChildMutation($t29, 1, $Dereference($t29)->$total_minted);

    // write_ref($t37, $t36) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:277:13+45
    $t37 := $UpdateMutation($t37, $t36);

    // write_back[Reference($t29).total_minted (u64)]($t37) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:277:13+45
    $t29 := $UpdateMutation($t29, $Update'$4_collection_UnlimitedSupply'_total_minted($Dereference($t29), $Dereference($t37)));

    // $t38 := borrow_field<collection::UnlimitedSupply>.mint_events($t29) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:279:17+23
    assume {:print "$at(158,11071,11094)"} true;
    $t38 := $ChildMutation($t29, 3, $Dereference($t29)->$mint_events);

    // $t39 := get_field<collection::UnlimitedSupply>.total_minted($t29) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:281:28+19
    assume {:print "$at(158,11151,11170)"} true;
    $t39 := $Dereference($t29)->$total_minted;

    // $t40 := pack collection::MintEvent($t39, $t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:280:17+104
    assume {:print "$at(158,11112,11216)"} true;
    $t40 := $4_collection_MintEvent($t39, $t1);

    // opaque begin: event::emit_event<collection::MintEvent>($t38, $t40) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:278:13+195
    assume {:print "$at(158,11036,11231)"} true;

    // opaque end: event::emit_event<collection::MintEvent>($t38, $t40) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:278:13+195

    // write_back[Reference($t29).mint_events (event::EventHandle<collection::MintEvent>)]($t38) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:278:13+195
    $t29 := $UpdateMutation($t29, $Update'$4_collection_UnlimitedSupply'_mint_events($Dereference($t29), $Dereference($t38)));

    // $t41 := get_field<collection::UnlimitedSupply>.total_minted($t29) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:285:26+19
    assume {:print "$at(158,11258,11277)"} true;
    $t41 := $Dereference($t29)->$total_minted;

    // write_back[collection::UnlimitedSupply@]($t29) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:285:26+19
    $4_collection_UnlimitedSupply_$memory := $ResourceUpdate($4_collection_UnlimitedSupply_$memory, $GlobalLocationAddress($t29),
        $Dereference($t29));

    // $t2 := opaque begin: option::some<u64>($t41) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:285:13+33

    // assume And(WellFormed($t2), Le(Len<u64>(select option::Option.vec($t2)), 1)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:285:13+33
    assume ($IsValid'$1_option_Option'u64''($t2) && (LenVec($t2->$vec) <= 1));

    // assume Eq<option::Option<u64>>($t2, option::spec_some<u64>($t41)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:285:13+33
    assume $IsEqual'$1_option_Option'u64''($t2, $1_option_spec_some'u64'($t41));

    // $t2 := opaque end: option::some<u64>($t41) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:285:13+33

    // goto L8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:274:16+556
    assume {:print "$at(158,10776,11332)"} true;
    goto L8;

    // label L6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:287:13+14
    assume {:print "$at(158,11308,11322)"} true;
L6:

    // $t2 := opaque begin: option::none<u64>() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:287:13+14
    assume {:print "$at(158,11308,11322)"} true;

    // assume And(WellFormed($t2), Le(Len<u64>(select option::Option.vec($t2)), 1)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:287:13+14
    assume ($IsValid'$1_option_Option'u64''($t2) && (LenVec($t2->$vec) <= 1));

    // assume Eq<option::Option<u64>>($t2, option::spec_none<u64>()) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:287:13+14
    assume $IsEqual'$1_option_Option'u64''($t2, $1_option_spec_none'u64'());

    // $t2 := opaque end: option::none<u64>() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:287:13+14

    // label L8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:274:16+556
    assume {:print "$at(158,10776,11332)"} true;
L8:

    // $t3 := $t2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:259:9+1211
    assume {:print "$at(158,10121,11332)"} true;
    $t3 := $t2;

    // label L5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:259:9+1211
L5:

    // trace_return[0]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:259:9+1211
    assume {:print "$at(158,10121,11332)"} true;
    assume {:print "$track_return(68,10,0):", $t3} $t3 == $t3;

    // label L9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:289:5+1
    assume {:print "$at(158,11337,11338)"} true;
L9:

    // return $t3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:289:5+1
    assume {:print "$at(158,11337,11338)"} true;
    $ret0 := $t3;
    return;

    // label L10 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:289:5+1
L10:

    // abort($t8) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\collection.move:289:5+1
    assume {:print "$at(158,11337,11338)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// struct token::MutationEvent at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:69:5+133
datatype $4_token_MutationEvent {
    $4_token_MutationEvent($mutated_field_name: $1_string_String, $old_value: $1_string_String, $new_value: $1_string_String)
}
function {:inline} $Update'$4_token_MutationEvent'_mutated_field_name(s: $4_token_MutationEvent, x: $1_string_String): $4_token_MutationEvent {
    $4_token_MutationEvent(x, s->$old_value, s->$new_value)
}
function {:inline} $Update'$4_token_MutationEvent'_old_value(s: $4_token_MutationEvent, x: $1_string_String): $4_token_MutationEvent {
    $4_token_MutationEvent(s->$mutated_field_name, x, s->$new_value)
}
function {:inline} $Update'$4_token_MutationEvent'_new_value(s: $4_token_MutationEvent, x: $1_string_String): $4_token_MutationEvent {
    $4_token_MutationEvent(s->$mutated_field_name, s->$old_value, x)
}
function $IsValid'$4_token_MutationEvent'(s: $4_token_MutationEvent): bool {
    $IsValid'$1_string_String'(s->$mutated_field_name)
      && $IsValid'$1_string_String'(s->$old_value)
      && $IsValid'$1_string_String'(s->$new_value)
}
function {:inline} $IsEqual'$4_token_MutationEvent'(s1: $4_token_MutationEvent, s2: $4_token_MutationEvent): bool {
    $IsEqual'$1_string_String'(s1->$mutated_field_name, s2->$mutated_field_name)
    && $IsEqual'$1_string_String'(s1->$old_value, s2->$old_value)
    && $IsEqual'$1_string_String'(s1->$new_value, s2->$new_value)}

// struct token::Token at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:37:5+811
datatype $4_token_Token {
    $4_token_Token($collection: $1_object_Object'$4_collection_Collection', $index: int, $description: $1_string_String, $name: $1_string_String, $uri: $1_string_String, $mutation_events: $1_event_EventHandle'$4_token_MutationEvent')
}
function {:inline} $Update'$4_token_Token'_collection(s: $4_token_Token, x: $1_object_Object'$4_collection_Collection'): $4_token_Token {
    $4_token_Token(x, s->$index, s->$description, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_index(s: $4_token_Token, x: int): $4_token_Token {
    $4_token_Token(s->$collection, x, s->$description, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_description(s: $4_token_Token, x: $1_string_String): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, x, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_name(s: $4_token_Token, x: $1_string_String): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, s->$description, x, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_uri(s: $4_token_Token, x: $1_string_String): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, s->$description, s->$name, x, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_mutation_events(s: $4_token_Token, x: $1_event_EventHandle'$4_token_MutationEvent'): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, s->$description, s->$name, s->$uri, x)
}
function $IsValid'$4_token_Token'(s: $4_token_Token): bool {
    $IsValid'$1_object_Object'$4_collection_Collection''(s->$collection)
      && $IsValid'u64'(s->$index)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$uri)
      && $IsValid'$1_event_EventHandle'$4_token_MutationEvent''(s->$mutation_events)
}
function {:inline} $IsEqual'$4_token_Token'(s1: $4_token_Token, s2: $4_token_Token): bool {
    $IsEqual'$1_object_Object'$4_collection_Collection''(s1->$collection, s2->$collection)
    && $IsEqual'u64'(s1->$index, s2->$index)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$uri, s2->$uri)
    && $IsEqual'$1_event_EventHandle'$4_token_MutationEvent''(s1->$mutation_events, s2->$mutation_events)}
var $4_token_Token_$memory: $Memory $4_token_Token;

// fun token::create_named_token [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:127:5+554
procedure {:inline 1} $4_token_create_named_token(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_string_String, _$t4: $1_option_Option'$4_royalty_Royalty', _$t5: $1_string_String) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t6: $Mutation ($1_option_Option'u64');
    var $t7: $1_object_Object'$4_collection_Collection';
    var $t8: $1_object_Object'$4_collection_Collection';
    var $t9: $1_string_String;
    var $t10: $1_object_ConstructorRef;
    var $t11: $1_object_ConstructorRef;
    var $t12: int;
    var $t13: int;
    var $t14: $1_string_String;
    var $t15: $1_option_Option'u64';
    var $t16: $1_string_String;
    var $t17: $signer;
    var $t18: $1_option_Option'$4_royalty_Royalty';
    var $t19: Vec (int);
    var $t20: $4_token_Token;
    var $t21: $1_string_String;
    var $t22: int;
    var $t23: int;
    var $t24: Vec (int);
    var $t25: $1_object_ConstructorRef;
    var $t26: int;
    var $t27: int;
    var $t28: bool;
    var $t29: int;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: bool;
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: bool;
    var $t39: int;
    var $t40: int;
    var $t41: $signer;
    var $t42: int;
    var $t43: $1_object_Object'$4_collection_Collection';
    var $t44: int;
    var $t45: $Mutation ($1_option_Option'u64');
    var $t46: $1_option_Option'u64';
    var $t47: int;
    var $t48: int;
    var $t49: $1_event_EventHandle'$4_token_MutationEvent';
    var $t50: $4_token_Token;
    var $t51: $1_option_Option'$4_royalty_Royalty';
    var $t52: bool;
    var $t53: $Mutation ($1_option_Option'$4_royalty_Royalty');
    var $t54: $4_royalty_Royalty;
    var $t55: $1_option_Option'$4_royalty_Royalty';
    var $t56: bool;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: $1_option_Option'$4_royalty_Royalty';
    var $t5: $1_string_String;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_option_Option'$4_royalty_Royalty'': $1_option_Option'$4_royalty_Royalty';
    var $temp_0'$1_option_Option'u64'': $1_option_Option'u64';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$4_token_Token': $4_token_Token;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;

    // bytecode translation starts here
    // trace_local[creator]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:127:5+1
    assume {:print "$at(161,5154,5155)"} true;
    assume {:print "$track_local(69,6,0):", $t0} $t0 == $t0;

    // trace_local[collection_name]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:127:5+1
    assume {:print "$track_local(69,6,1):", $t1} $t1 == $t1;

    // trace_local[description]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:127:5+1
    assume {:print "$track_local(69,6,2):", $t2} $t2 == $t2;

    // trace_local[name]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:127:5+1
    assume {:print "$track_local(69,6,3):", $t3} $t3 == $t3;

    // trace_local[royalty]($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:127:5+1
    assume {:print "$track_local(69,6,4):", $t4} $t4 == $t4;

    // trace_local[uri]($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:127:5+1
    assume {:print "$track_local(69,6,5):", $t5} $t5 == $t5;

    // $t22 := signer::address_of($t0) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:135:31+27
    assume {:print "$at(161,5404,5431)"} true;
    call $t22 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(161,5404,5431)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // trace_local[creator_address]($t22) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:135:13+15
    assume {:print "$track_local(69,6,12):", $t22} $t22 == $t22;

    // $t24 := token::create_token_seed($t1, $t3) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:136:20+42
    assume {:print "$at(161,5452,5494)"} true;
    call $t24 := $4_token_create_token_seed($t1, $t3);
    if ($abort_flag) {
        assume {:print "$at(161,5452,5494)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // trace_local[seed]($t24) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:136:13+4
    assume {:print "$track_local(69,6,19):", $t24} $t24 == $t24;

    // $t25 := object::create_named_object($t0, $t24) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:138:31+42
    assume {:print "$at(161,5527,5569)"} true;
    call $t25 := $1_object_create_named_object($t0, $t24);
    if ($abort_flag) {
        assume {:print "$at(161,5527,5569)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // trace_local[constructor_ref]($t25) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:138:13+15
    assume {:print "$track_local(69,6,10):", $t25} $t25 == $t25;

    // trace_local[uri#393]($t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:82:9+3
    assume {:print "$at(161,3301,3304)"} true;
    assume {:print "$track_local(69,6,21):", $t5} $t5 == $t5;

    // $t18 := $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:81:9+7
    assume {:print "$at(161,3267,3274)"} true;
    $t18 := $t4;

    // trace_local[royalty#392]($t18) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:81:9+7
    assume {:print "$track_local(69,6,18):", $t18} $t18 == $t18;

    // trace_local[name#391]($t3) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:80:9+4
    assume {:print "$at(161,3245,3249)"} true;
    assume {:print "$track_local(69,6,16):", $t3} $t3 == $t3;

    // trace_local[description#390]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:79:9+11
    assume {:print "$at(161,3216,3227)"} true;
    assume {:print "$track_local(69,6,14):", $t2} $t2 == $t2;

    // trace_local[collection_name#389]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:78:9+15
    assume {:print "$at(161,3183,3198)"} true;
    assume {:print "$track_local(69,6,9):", $t1} $t1 == $t1;

    // trace_local[creator_address#388]($t22) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:77:9+15
    assume {:print "$at(161,3149,3164)"} true;
    assume {:print "$track_local(69,6,13):", $t22} $t22 == $t22;

    // trace_local[constructor_ref#387]($t25) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:76:9+15
    assume {:print "$at(161,3107,3122)"} true;
    assume {:print "$track_local(69,6,11):", $t25} $t25 == $t25;

    // $t26 := string::length($t3) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:84:17+21
    assume {:print "$at(161,3338,3359)"} true;
    call $t26 := $1_string_length($t3);
    if ($abort_flag) {
        assume {:print "$at(161,3338,3359)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // $t27 := 128 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:84:42+21
    $t27 := 128;
    assume $IsValid'u64'($t27);

    // $t28 := <=($t26, $t27) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:84:39+2
    call $t28 := $Le($t26, $t27);

    // if ($t28) goto L1 else goto L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:84:9+98
    if ($t28) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:84:9+98
L1:

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:84:9+98
    assume {:print "$at(161,3330,3428)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:84:9+98
L0:

    // $t29 := 4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:84:85+20
    assume {:print "$at(161,3406,3426)"} true;
    $t29 := 4;
    assume $IsValid'u64'($t29);

    // $t30 := error::out_of_range($t29) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:84:65+41
    call $t30 := $1_error_out_of_range($t29);
    if ($abort_flag) {
        assume {:print "$at(161,3386,3427)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // trace_abort($t30) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:84:9+98
    assume {:print "$at(161,3330,3428)"} true;
    assume {:print "$track_abort(69,6):", $t30} $t30 == $t30;

    // $t23 := move($t30) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:84:9+98
    $t23 := $t30;

    // goto L13 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:84:9+98
    goto L13;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:85:32+12
    assume {:print "$at(161,3461,3473)"} true;
L2:

    // $t31 := string::length($t2) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:85:17+28
    assume {:print "$at(161,3446,3474)"} true;
    call $t31 := $1_string_length($t2);
    if ($abort_flag) {
        assume {:print "$at(161,3446,3474)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // $t32 := 2048 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:85:49+22
    $t32 := 2048;
    assume $IsValid'u64'($t32);

    // $t33 := <=($t31, $t32) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:85:46+2
    call $t33 := $Le($t31, $t32);

    // if ($t33) goto L4 else goto L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:85:9+107
    if ($t33) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:85:9+107
L4:

    // goto L5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:85:9+107
    assume {:print "$at(161,3438,3545)"} true;
    goto L5;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:85:9+107
L3:

    // $t34 := 6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:85:93+21
    assume {:print "$at(161,3522,3543)"} true;
    $t34 := 6;
    assume $IsValid'u64'($t34);

    // $t35 := error::out_of_range($t34) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:85:73+42
    call $t35 := $1_error_out_of_range($t34);
    if ($abort_flag) {
        assume {:print "$at(161,3502,3544)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // trace_abort($t35) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:85:9+107
    assume {:print "$at(161,3438,3545)"} true;
    assume {:print "$track_abort(69,6):", $t35} $t35 == $t35;

    // $t23 := move($t35) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:85:9+107
    $t23 := $t35;

    // goto L13 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:85:9+107
    goto L13;

    // label L5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:86:32+4
    assume {:print "$at(161,3578,3582)"} true;
L5:

    // $t36 := string::length($t5) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:86:17+20
    assume {:print "$at(161,3563,3583)"} true;
    call $t36 := $1_string_length($t5);
    if ($abort_flag) {
        assume {:print "$at(161,3563,3583)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // $t37 := 512 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:86:41+14
    $t37 := 512;
    assume $IsValid'u64'($t37);

    // $t38 := <=($t36, $t37) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:86:38+2
    call $t38 := $Le($t36, $t37);

    // if ($t38) goto L7 else goto L6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:86:9+83
    if ($t38) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:86:9+83
L7:

    // goto L8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:86:9+83
    assume {:print "$at(161,3555,3638)"} true;
    goto L8;

    // label L6 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:86:9+83
L6:

    // $t39 := 5 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:86:77+13
    assume {:print "$at(161,3623,3636)"} true;
    $t39 := 5;
    assume $IsValid'u64'($t39);

    // $t40 := error::out_of_range($t39) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:86:57+34
    call $t40 := $1_error_out_of_range($t39);
    if ($abort_flag) {
        assume {:print "$at(161,3603,3637)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // trace_abort($t40) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:86:9+83
    assume {:print "$at(161,3555,3638)"} true;
    assume {:print "$track_abort(69,6):", $t40} $t40 == $t40;

    // $t23 := move($t40) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:86:9+83
    $t23 := $t40;

    // goto L13 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:86:9+83
    goto L13;

    // label L8 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:88:53+15
    assume {:print "$at(161,3693,3708)"} true;
L8:

    // $t41 := object::generate_signer($t25) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:88:29+40
    assume {:print "$at(161,3669,3709)"} true;
    call $t41 := $1_object_generate_signer($t25);
    if ($abort_flag) {
        assume {:print "$at(161,3669,3709)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // trace_local[object_signer#394]($t41) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:88:13+13
    assume {:print "$track_local(69,6,17):", $t41} $t41 == $t41;

    // $t42 := collection::create_collection_address($t22, $t1) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:90:31+73
    assume {:print "$at(161,3742,3815)"} true;
    call $t42 := $4_collection_create_collection_address($t22, $t1);
    if ($abort_flag) {
        assume {:print "$at(161,3742,3815)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // $t43 := object::address_to_object<collection::Collection>($t42) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:91:26+54
    assume {:print "$at(161,3842,3896)"} true;
    call $t43 := $1_object_address_to_object'$4_collection_Collection'($t42);
    if ($abort_flag) {
        assume {:print "$at(161,3842,3896)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // trace_local[collection#396]($t43) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:91:13+10
    assume {:print "$track_local(69,6,8):", $t43} $t43 == $t43;

    // $t44 := signer::address_of($t41) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:92:60+34
    assume {:print "$at(161,3957,3991)"} true;
    call $t44 := $1_signer_address_of($t41);
    if ($abort_flag) {
        assume {:print "$at(161,3957,3991)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // $t15 := collection::increment_supply($t43, $t44) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:92:18+77
    call $t15 := $4_collection_increment_supply($t43, $t44);
    if ($abort_flag) {
        assume {:print "$at(161,3915,3992)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // trace_local[id#397]($t15) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:92:13+2
    assume {:print "$track_local(69,6,15):", $t15} $t15 == $t15;

    // $t45 := borrow_local($t15) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:96:45+7
    assume {:print "$at(161,4091,4098)"} true;
    $t45 := $Mutation($Local(15), EmptyVec(), $t15);

    // $t46 := read_ref($t45) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:96:44+12
    $t46 := $Dereference($t45);

    // pack_ref_deep($t45) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:96:44+12

    // trace_local[id#397]($t15) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:96:44+12
    assume {:print "$track_local(69,6,15):", $t15} $t15 == $t15;

    // $t47 := 0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:96:54+1
    $t47 := 0;
    assume $IsValid'u64'($t47);

    // $t48 := opaque begin: option::get_with_default<u64>($t46, $t47) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:96:20+36

    // assume WellFormed($t48) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:96:20+36
    assume $IsValid'u64'($t48);

    // assume Eq<u64>($t48, if option::spec_is_some<u64>($t46) {
    //   option::spec_borrow<u64>($t46)
    // } else {
    //   $t47
    // }) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:96:20+36
    assume $IsEqual'u64'($t48, (if ($1_option_spec_is_some'u64'($t46)) then ($1_option_spec_borrow'u64'($t46)) else ($t47)));

    // $t48 := opaque end: option::get_with_default<u64>($t46, $t47) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:96:20+36

    // $t49 := object::new_event_handle<token::MutationEvent>($t41) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:100:30+40
    assume {:print "$at(161,4193,4233)"} true;
    call $t49 := $1_object_new_event_handle'$4_token_MutationEvent'($t41);
    if ($abort_flag) {
        assume {:print "$at(161,4193,4233)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // $t50 := pack token::Token($t43, $t48, $t2, $t3, $t5, $t49) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:94:21+229
    assume {:print "$at(161,4015,4244)"} true;
    $t50 := $4_token_Token($t43, $t48, $t2, $t3, $t5, $t49);

    // trace_local[token#398]($t50) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:94:13+5
    assume {:print "$track_local(69,6,20):", $t50} $t50 == $t50;

    // move_to<token::Token>($t50, $t41) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:102:9+7
    assume {:print "$at(161,4254,4261)"} true;
    if ($ResourceExists($4_token_Token_$memory, $t41->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_token_Token_$memory := $ResourceUpdate($4_token_Token_$memory, $t41->$addr, $t50);
    }
    if ($abort_flag) {
        assume {:print "$at(161,4254,4261)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // $t51 := copy($t18) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:104:29+8
    assume {:print "$at(161,4315,4323)"} true;
    $t51 := $t18;

    // $t52 := opaque begin: option::is_some<royalty::Royalty>($t51) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:104:13+25

    // assume WellFormed($t52) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:104:13+25
    assume $IsValid'bool'($t52);

    // assume Eq<bool>($t52, option::spec_is_some<royalty::Royalty>($t51)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:104:13+25
    assume $IsEqual'bool'($t52, $1_option_spec_is_some'$4_royalty_Royalty'($t51));

    // $t52 := opaque end: option::is_some<royalty::Royalty>($t51) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:104:13+25

    // if ($t52) goto L10 else goto L9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:104:9+116
    if ($t52) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:27+15
    assume {:print "$at(161,4354,4369)"} true;
L10:

    // $t53 := borrow_local($t18) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:60+12
    assume {:print "$at(161,4387,4399)"} true;
    $t53 := $Mutation($Local(18), EmptyVec(), $t18);

    // $t54 := opaque begin: option::extract<royalty::Royalty>($t53) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29

    // $t55 := read_ref($t53) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
    $t55 := $Dereference($t53);

    // assume Identical($t56, option::spec_is_none<royalty::Royalty>($t53)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
    assume ($t56 == $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t53)));

    // if ($t56) goto L15 else goto L16 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
    if ($t56) { goto L15; } else { goto L16; }

    // label L15 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
L15:

    // assume And(option::spec_is_none<royalty::Royalty>($t53), Eq(262145, $t23)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
    assume {:print "$at(161,4371,4400)"} true;
    assume ($1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t53)) && $IsEqual'num'(262145, $t23));

    // trace_abort($t23) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
    assume {:print "$at(161,4371,4400)"} true;
    assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;

    // goto L13 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
    goto L13;

    // label L14 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
L14:

    // $t53 := havoc[mut]() at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
    assume {:print "$at(161,4371,4400)"} true;
    havoc $temp_0'$1_option_Option'$4_royalty_Royalty'';
    $t53 := $UpdateMutation($t53, $temp_0'$1_option_Option'$4_royalty_Royalty'');

    // assume And(WellFormed($t53), Le(Len<royalty::Royalty>(select option::Option.vec($t53)), 1)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($Dereference($t53)) && (LenVec($Dereference($t53)->$vec) <= 1));

    // assume WellFormed($t54) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
    assume $IsValid'$4_royalty_Royalty'($t54);

    // assume Eq<royalty::Royalty>($t54, option::spec_borrow<royalty::Royalty>($t55)) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
    assume $IsEqual'$4_royalty_Royalty'($t54, $1_option_spec_borrow'$4_royalty_Royalty'($t55));

    // assume option::spec_is_none<royalty::Royalty>($t53) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
    assume $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t53));

    // $t54 := opaque end: option::extract<royalty::Royalty>($t53) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29

    // pack_ref_deep($t53) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29

    // write_back[LocalRoot($t18)@]($t53) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
    $t18 := $Dereference($t53);

    // trace_local[royalty#392]($t18) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:44+29
    assume {:print "$track_local(69,6,18):", $t18} $t18 == $t18;

    // royalty::init($t25, $t54) on_abort goto L13 with $t23 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:13+61
    call $4_royalty_init($t25, $t54);
    if ($abort_flag) {
        assume {:print "$at(161,4340,4401)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(69,6):", $t23} $t23 == $t23;
        goto L13;
    }

    // goto L11 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:105:13+61
    goto L11;

    // label L9 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:104:9+116
    assume {:print "$at(161,4295,4411)"} true;
L9:

    // label L11 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:140:9+15
    assume {:print "$at(161,5687,5702)"} true;
L11:

    // trace_return[0]($t25) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:140:9+15
    assume {:print "$at(161,5687,5702)"} true;
    assume {:print "$track_return(69,6,0):", $t25} $t25 == $t25;

    // label L12 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:141:5+1
    assume {:print "$at(161,5707,5708)"} true;
L12:

    // return $t25 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:141:5+1
    assume {:print "$at(161,5707,5708)"} true;
    $ret0 := $t25;
    return;

    // label L13 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:141:5+1
L13:

    // abort($t23) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:141:5+1
    assume {:print "$at(161,5707,5708)"} true;
    $abort_code := $t23;
    $abort_flag := true;
    return;

    // label L16 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L16:

    // destroy($t53) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L14 at <internal>:1:1+10
    goto L14;

}

// fun token::create_token_seed [baseline] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:166:5+350
procedure {:inline 1} $4_token_create_token_seed(_$t0: $1_string_String, _$t1: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t2: Vec (int);
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation (Vec (int));
    var $t10: Vec (int);
    var $t11: $Mutation (Vec (int));
    var $t12: Vec (int);
    var $t13: Vec (int);
    var $t0: $1_string_String;
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[collection]($t0) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:166:5+1
    assume {:print "$at(161,6731,6732)"} true;
    assume {:print "$track_local(69,8,0):", $t0} $t0 == $t0;

    // trace_local[name]($t1) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:166:5+1
    assume {:print "$track_local(69,8,1):", $t1} $t1 == $t1;

    // $t3 := string::length($t1) on_abort goto L4 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:167:17+20
    assume {:print "$at(161,6826,6846)"} true;
    call $t3 := $1_string_length($t1);
    if ($abort_flag) {
        assume {:print "$at(161,6826,6846)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(69,8):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t5 := 128 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:167:41+21
    $t5 := 128;
    assume $IsValid'u64'($t5);

    // $t6 := <=($t3, $t5) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:167:38+2
    call $t6 := $Le($t3, $t5);

    // if ($t6) goto L1 else goto L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:167:9+97
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:167:9+97
L1:

    // goto L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:167:9+97
    assume {:print "$at(161,6818,6915)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:167:9+97
L0:

    // $t7 := 4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:167:84+20
    assume {:print "$at(161,6893,6913)"} true;
    $t7 := 4;
    assume $IsValid'u64'($t7);

    // $t8 := error::out_of_range($t7) on_abort goto L4 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:167:64+41
    call $t8 := $1_error_out_of_range($t7);
    if ($abort_flag) {
        assume {:print "$at(161,6873,6914)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(69,8):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_abort($t8) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:167:9+97
    assume {:print "$at(161,6818,6915)"} true;
    assume {:print "$track_abort(69,8):", $t8} $t8 == $t8;

    // $t4 := move($t8) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:167:9+97
    $t4 := $t8;

    // goto L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:167:9+97
    goto L4;

    // label L2 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:168:35+10
    assume {:print "$at(161,6951,6961)"} true;
L2:

    // $t2 := string::bytes($t0) on_abort goto L4 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:168:21+25
    assume {:print "$at(161,6937,6962)"} true;
    call $t2 := $1_string_bytes($t0);
    if ($abort_flag) {
        assume {:print "$at(161,6937,6962)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(69,8):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_local[seed]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:168:13+4
    assume {:print "$track_local(69,8,2):", $t2} $t2 == $t2;

    // $t9 := borrow_local($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:169:24+9
    assume {:print "$at(161,6987,6996)"} true;
    $t9 := $Mutation($Local(2), EmptyVec(), $t2);

    // $t10 := [58, 58] at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:169:35+5
    $t10 := MakeVec2(58, 58);
    assume $IsValid'vec'u8''($t10);

    // vector::append<u8>($t9, $t10) on_abort goto L4 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:169:9+32
    call $t9 := $1_vector_append'u8'($t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(161,6972,7004)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(69,8):", $t4} $t4 == $t4;
        goto L4;
    }

    // write_back[LocalRoot($t2)@]($t9) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:169:9+32
    $t2 := $Dereference($t9);

    // trace_local[seed]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:169:9+32
    assume {:print "$track_local(69,8,2):", $t2} $t2 == $t2;

    // $t11 := borrow_local($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:170:24+9
    assume {:print "$at(161,7029,7038)"} true;
    $t11 := $Mutation($Local(2), EmptyVec(), $t2);

    // $t12 := string::bytes($t1) on_abort goto L4 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:170:36+19
    call $t12 := $1_string_bytes($t1);
    if ($abort_flag) {
        assume {:print "$at(161,7041,7060)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(69,8):", $t4} $t4 == $t4;
        goto L4;
    }

    // vector::append<u8>($t11, $t12) on_abort goto L4 with $t4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:170:9+47
    call $t11 := $1_vector_append'u8'($t11, $t12);
    if ($abort_flag) {
        assume {:print "$at(161,7014,7061)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(69,8):", $t4} $t4 == $t4;
        goto L4;
    }

    // write_back[LocalRoot($t2)@]($t11) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:170:9+47
    $t2 := $Dereference($t11);

    // trace_local[seed]($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:170:9+47
    assume {:print "$track_local(69,8,2):", $t2} $t2 == $t2;

    // $t13 := move($t2) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:171:9+4
    assume {:print "$at(161,7071,7075)"} true;
    $t13 := $t2;

    // trace_return[0]($t13) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:171:9+4
    assume {:print "$track_return(69,8,0):", $t13} $t13 == $t13;

    // label L3 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:172:5+1
    assume {:print "$at(161,7080,7081)"} true;
L3:

    // return $t13 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:172:5+1
    assume {:print "$at(161,7080,7081)"} true;
    $ret0 := $t13;
    return;

    // label L4 at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:172:5+1
L4:

    // abort($t4) at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-token-objects\sources\token.move:172:5+1
    assume {:print "$at(161,7080,7081)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// struct base::AppState at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:32:5+309
datatype $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState($users: Vec (int), $rewards: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem), $protocols: Vec (int), $quests_map: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), $campaigns_map: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), $quests: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), $campaigns: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'_users(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState, x: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState(x, s->$rewards, s->$protocols, s->$quests_map, s->$campaigns_map, s->$quests, s->$campaigns)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'_rewards(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState, x: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState(s->$users, x, s->$protocols, s->$quests_map, s->$campaigns_map, s->$quests, s->$campaigns)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'_protocols(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState, x: Vec (int)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState(s->$users, s->$rewards, x, s->$quests_map, s->$campaigns_map, s->$quests, s->$campaigns)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'_quests_map(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState, x: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState(s->$users, s->$rewards, s->$protocols, x, s->$campaigns_map, s->$quests, s->$campaigns)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'_campaigns_map(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState, x: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState(s->$users, s->$rewards, s->$protocols, s->$quests_map, x, s->$quests, s->$campaigns)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'_quests(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState, x: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState(s->$users, s->$rewards, s->$protocols, s->$quests_map, s->$campaigns_map, x, s->$campaigns)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'_campaigns(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState, x: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState(s->$users, s->$rewards, s->$protocols, s->$quests_map, s->$campaigns_map, s->$quests, x)
}
function $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState): bool {
    $IsValid'vec'address''(s->$users)
      && $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(s->$rewards)
      && $IsValid'vec'address''(s->$protocols)
      && $IsValid'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(s->$quests_map)
      && $IsValid'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(s->$campaigns_map)
      && $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(s->$quests)
      && $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(s->$campaigns)
}
function {:inline} $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'(s1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState, s2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState): bool {
    $IsEqual'vec'address''(s1->$users, s2->$users)
    && $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(s1->$rewards, s2->$rewards)
    && $IsEqual'vec'address''(s1->$protocols, s2->$protocols)
    && $IsEqual'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(s1->$quests_map, s2->$quests_map)
    && $IsEqual'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(s1->$campaigns_map, s2->$campaigns_map)
    && $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(s1->$quests, s2->$quests)
    && $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(s1->$campaigns, s2->$campaigns)}
var $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory: $Memory $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;

// struct base::Campaign at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:84:5+313
datatype $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign($id: $1_string_String, $protocol: int, $campaign_title: $1_string_String, $description: $1_string_String, $quest_list: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), $status: $1_string_String, $created: int, $metric: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics, $deadline: int)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'_id(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign(x, s->$protocol, s->$campaign_title, s->$description, s->$quest_list, s->$status, s->$created, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'_protocol(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign(s->$id, x, s->$campaign_title, s->$description, s->$quest_list, s->$status, s->$created, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'_campaign_title(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign(s->$id, s->$protocol, x, s->$description, s->$quest_list, s->$status, s->$created, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'_description(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign(s->$id, s->$protocol, s->$campaign_title, x, s->$quest_list, s->$status, s->$created, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'_quest_list(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, x: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign(s->$id, s->$protocol, s->$campaign_title, s->$description, x, s->$status, s->$created, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'_status(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign(s->$id, s->$protocol, s->$campaign_title, s->$description, s->$quest_list, x, s->$created, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'_created(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign(s->$id, s->$protocol, s->$campaign_title, s->$description, s->$quest_list, s->$status, x, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'_metric(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, x: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign(s->$id, s->$protocol, s->$campaign_title, s->$description, s->$quest_list, s->$status, s->$created, x, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'_deadline(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign(s->$id, s->$protocol, s->$campaign_title, s->$description, s->$quest_list, s->$status, s->$created, s->$metric, x)
}
function $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign): bool {
    $IsValid'$1_string_String'(s->$id)
      && $IsValid'address'(s->$protocol)
      && $IsValid'$1_string_String'(s->$campaign_title)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(s->$quest_list)
      && $IsValid'$1_string_String'(s->$status)
      && $IsValid'u64'(s->$created)
      && $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(s->$metric)
      && $IsValid'u64'(s->$deadline)
}
function {:inline} $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'(s1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign, s2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign): bool {
    $IsEqual'$1_string_String'(s1->$id, s2->$id)
    && $IsEqual'address'(s1->$protocol, s2->$protocol)
    && $IsEqual'$1_string_String'(s1->$campaign_title, s2->$campaign_title)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(s1->$quest_list, s2->$quest_list)
    && $IsEqual'$1_string_String'(s1->$status, s2->$status)
    && $IsEqual'u64'(s1->$created, s2->$created)
    && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(s1->$metric, s2->$metric)
    && $IsEqual'u64'(s1->$deadline, s2->$deadline)}
var $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign_$memory: $Memory $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign;

// struct base::CampaignMetrics at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:55:5+207
datatype $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics($participants: int, $total_reward: int, $amount_claimed: int, $amount_unclaimed: int, $participants_claimed: int)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'_participants(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics(x, s->$total_reward, s->$amount_claimed, s->$amount_unclaimed, s->$participants_claimed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'_total_reward(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics(s->$participants, x, s->$amount_claimed, s->$amount_unclaimed, s->$participants_claimed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'_amount_claimed(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics(s->$participants, s->$total_reward, x, s->$amount_unclaimed, s->$participants_claimed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'_amount_unclaimed(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics(s->$participants, s->$total_reward, s->$amount_claimed, x, s->$participants_claimed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'_participants_claimed(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics(s->$participants, s->$total_reward, s->$amount_claimed, s->$amount_unclaimed, x)
}
function $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics): bool {
    $IsValid'u64'(s->$participants)
      && $IsValid'u64'(s->$total_reward)
      && $IsValid'u64'(s->$amount_claimed)
      && $IsValid'u64'(s->$amount_unclaimed)
      && $IsValid'u64'(s->$participants_claimed)
}
function {:inline} $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'(s1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics, s2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics): bool {
    s1 == s2
}

// struct base::ClaimRecord at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:113:5+146
datatype $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord($timestamp: int, $reward_claimed: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward, $value_deducted: int)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'_timestamp(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord(x, s->$reward_claimed, s->$value_deducted)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'_reward_claimed(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord, x: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord(s->$timestamp, x, s->$value_deducted)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'_value_deducted(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord(s->$timestamp, s->$reward_claimed, x)
}
function $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord): bool {
    $IsValid'u64'(s->$timestamp)
      && $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(s->$reward_claimed)
      && $IsValid'u64'(s->$value_deducted)
}
function {:inline} $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord'(s1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord, s2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord): bool {
    $IsEqual'u64'(s1->$timestamp, s2->$timestamp)
    && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(s1->$reward_claimed, s2->$reward_claimed)
    && $IsEqual'u64'(s1->$value_deducted, s2->$value_deducted)}

// struct base::ProtocolState at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:49:5+174
datatype $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState($quests_created: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), $campaigns_created: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), $rewards_minted: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'_quests_created(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState, x: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState(x, s->$campaigns_created, s->$rewards_minted)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'_campaigns_created(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState, x: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState(s->$quests_created, x, s->$rewards_minted)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'_rewards_minted(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState, x: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState(s->$quests_created, s->$campaigns_created, x)
}
function $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState): bool {
    $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(s->$quests_created)
      && $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(s->$campaigns_created)
      && $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(s->$rewards_minted)
}
function {:inline} $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'(s1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState, s2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState): bool {
    $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(s1->$quests_created, s2->$quests_created)
    && $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(s1->$campaigns_created, s2->$campaigns_created)
    && $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''(s1->$rewards_minted, s2->$rewards_minted)}
var $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory: $Memory $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;

// struct base::Quest at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:71:5+331
datatype $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest($id: $1_string_String, $protocol: int, $quest_title: $1_string_String, $description: $1_string_String, $quest_list: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem), $budget: int, $created: int, $default_reward: int, $metric: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics, $deadline: int)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'_id(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest(x, s->$protocol, s->$quest_title, s->$description, s->$quest_list, s->$budget, s->$created, s->$default_reward, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'_protocol(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest(s->$id, x, s->$quest_title, s->$description, s->$quest_list, s->$budget, s->$created, s->$default_reward, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'_quest_title(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest(s->$id, s->$protocol, x, s->$description, s->$quest_list, s->$budget, s->$created, s->$default_reward, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'_description(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest(s->$id, s->$protocol, s->$quest_title, x, s->$quest_list, s->$budget, s->$created, s->$default_reward, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'_quest_list(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, x: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest(s->$id, s->$protocol, s->$quest_title, s->$description, x, s->$budget, s->$created, s->$default_reward, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'_budget(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest(s->$id, s->$protocol, s->$quest_title, s->$description, s->$quest_list, x, s->$created, s->$default_reward, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'_created(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest(s->$id, s->$protocol, s->$quest_title, s->$description, s->$quest_list, s->$budget, x, s->$default_reward, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'_default_reward(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest(s->$id, s->$protocol, s->$quest_title, s->$description, s->$quest_list, s->$budget, s->$created, x, s->$metric, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'_metric(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, x: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest(s->$id, s->$protocol, s->$quest_title, s->$description, s->$quest_list, s->$budget, s->$created, s->$default_reward, x, s->$deadline)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'_deadline(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest(s->$id, s->$protocol, s->$quest_title, s->$description, s->$quest_list, s->$budget, s->$created, s->$default_reward, s->$metric, x)
}
function $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest): bool {
    $IsValid'$1_string_String'(s->$id)
      && $IsValid'address'(s->$protocol)
      && $IsValid'$1_string_String'(s->$quest_title)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(s->$quest_list)
      && $IsValid'u64'(s->$budget)
      && $IsValid'u64'(s->$created)
      && $IsValid'u64'(s->$default_reward)
      && $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(s->$metric)
      && $IsValid'u64'(s->$deadline)
}
function {:inline} $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'(s1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest, s2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest): bool {
    $IsEqual'$1_string_String'(s1->$id, s2->$id)
    && $IsEqual'address'(s1->$protocol, s2->$protocol)
    && $IsEqual'$1_string_String'(s1->$quest_title, s2->$quest_title)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''(s1->$quest_list, s2->$quest_list)
    && $IsEqual'u64'(s1->$budget, s2->$budget)
    && $IsEqual'u64'(s1->$created, s2->$created)
    && $IsEqual'u64'(s1->$default_reward, s2->$default_reward)
    && $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(s1->$metric, s2->$metric)
    && $IsEqual'u64'(s1->$deadline, s2->$deadline)}
var $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest_$memory: $Memory $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;

// struct base::QuestListItem at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:96:5+153
datatype $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem($title: $1_string_String, $description: $1_string_String, $link: $1_string_String, $completed: bool)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'_title(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem(x, s->$description, s->$link, s->$completed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'_description(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem(s->$title, x, s->$link, s->$completed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'_link(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem(s->$title, s->$description, x, s->$completed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'_completed(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem, x: bool): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem(s->$title, s->$description, s->$link, x)
}
function $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem): bool {
    $IsValid'$1_string_String'(s->$title)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'$1_string_String'(s->$link)
      && $IsValid'bool'(s->$completed)
}
function {:inline} $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'(s1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem, s2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem): bool {
    $IsEqual'$1_string_String'(s1->$title, s2->$title)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'$1_string_String'(s1->$link, s2->$link)
    && $IsEqual'bool'(s1->$completed, s2->$completed)}

// struct base::QuestMetrics at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:63:5+204
datatype $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics($participants: int, $total_reward: int, $amount_claimed: int, $amount_unclaimed: int, $participants_claimed: int)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'_participants(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics(x, s->$total_reward, s->$amount_claimed, s->$amount_unclaimed, s->$participants_claimed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'_total_reward(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics(s->$participants, x, s->$amount_claimed, s->$amount_unclaimed, s->$participants_claimed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'_amount_claimed(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics(s->$participants, s->$total_reward, x, s->$amount_unclaimed, s->$participants_claimed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'_amount_unclaimed(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics(s->$participants, s->$total_reward, s->$amount_claimed, x, s->$participants_claimed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'_participants_claimed(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics(s->$participants, s->$total_reward, s->$amount_claimed, s->$amount_unclaimed, x)
}
function $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics): bool {
    $IsValid'u64'(s->$participants)
      && $IsValid'u64'(s->$total_reward)
      && $IsValid'u64'(s->$amount_claimed)
      && $IsValid'u64'(s->$amount_unclaimed)
      && $IsValid'u64'(s->$participants_claimed)
}
function {:inline} $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'(s1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics, s2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics): bool {
    s1 == s2
}

// struct base::RealWorldReward at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:119:5+202
datatype $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward($id: $1_string_String, $name: $1_string_String, $description: $1_string_String, $price: int, $category: $1_string_String, $provider: $1_string_String)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'_id(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward(x, s->$name, s->$description, s->$price, s->$category, s->$provider)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'_name(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward(s->$id, x, s->$description, s->$price, s->$category, s->$provider)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'_description(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward(s->$id, s->$name, x, s->$price, s->$category, s->$provider)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'_price(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward(s->$id, s->$name, s->$description, x, s->$category, s->$provider)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'_category(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward(s->$id, s->$name, s->$description, s->$price, x, s->$provider)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'_provider(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward(s->$id, s->$name, s->$description, s->$price, s->$category, x)
}
function $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward): bool {
    $IsValid'$1_string_String'(s->$id)
      && $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'u64'(s->$price)
      && $IsValid'$1_string_String'(s->$category)
      && $IsValid'$1_string_String'(s->$provider)
}
function {:inline} $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward'(s1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward, s2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RealWorldReward): bool {
    $IsEqual'$1_string_String'(s1->$id, s2->$id)
    && $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'u64'(s1->$price, s2->$price)
    && $IsEqual'$1_string_String'(s1->$category, s2->$category)
    && $IsEqual'$1_string_String'(s1->$provider, s2->$provider)}

// struct base::RewardItem at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:103:5+261
datatype $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem($id: $1_string_String, $scratched: bool, $protocol_name: $1_string_String, $user_address: int, $total_value: int, $remaining_value: int, $claim_history: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord))
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'_id(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem(x, s->$scratched, s->$protocol_name, s->$user_address, s->$total_value, s->$remaining_value, s->$claim_history)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'_scratched(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem, x: bool): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem(s->$id, x, s->$protocol_name, s->$user_address, s->$total_value, s->$remaining_value, s->$claim_history)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'_protocol_name(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem, x: $1_string_String): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem(s->$id, s->$scratched, x, s->$user_address, s->$total_value, s->$remaining_value, s->$claim_history)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'_user_address(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem(s->$id, s->$scratched, s->$protocol_name, x, s->$total_value, s->$remaining_value, s->$claim_history)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'_total_value(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem(s->$id, s->$scratched, s->$protocol_name, s->$user_address, x, s->$remaining_value, s->$claim_history)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'_remaining_value(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem(s->$id, s->$scratched, s->$protocol_name, s->$user_address, s->$total_value, x, s->$claim_history)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'_claim_history(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem, x: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem(s->$id, s->$scratched, s->$protocol_name, s->$user_address, s->$total_value, s->$remaining_value, x)
}
function $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem): bool {
    $IsValid'$1_string_String'(s->$id)
      && $IsValid'bool'(s->$scratched)
      && $IsValid'$1_string_String'(s->$protocol_name)
      && $IsValid'address'(s->$user_address)
      && $IsValid'u64'(s->$total_value)
      && $IsValid'u64'(s->$remaining_value)
      && $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(s->$claim_history)
}
function {:inline} $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'(s1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem, s2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem): bool {
    $IsEqual'$1_string_String'(s1->$id, s2->$id)
    && $IsEqual'bool'(s1->$scratched, s2->$scratched)
    && $IsEqual'$1_string_String'(s1->$protocol_name, s2->$protocol_name)
    && $IsEqual'address'(s1->$user_address, s2->$user_address)
    && $IsEqual'u64'(s1->$total_value, s2->$total_value)
    && $IsEqual'u64'(s1->$remaining_value, s2->$remaining_value)
    && $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ClaimRecord''(s1->$claim_history, s2->$claim_history)}
var $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem_$memory: $Memory $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem;

// struct base::RewardItemPower at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:138:5+146
datatype $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower($transfer_ref: $1_object_TransferRef, $scratched: bool, $available: int, $price: int)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'_transfer_ref(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower, x: $1_object_TransferRef): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower(x, s->$scratched, s->$available, s->$price)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'_scratched(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower, x: bool): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower(s->$transfer_ref, x, s->$available, s->$price)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'_available(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower(s->$transfer_ref, s->$scratched, x, s->$price)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'_price(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower(s->$transfer_ref, s->$scratched, s->$available, x)
}
function $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower): bool {
    $IsValid'$1_object_TransferRef'(s->$transfer_ref)
      && $IsValid'bool'(s->$scratched)
      && $IsValid'u64'(s->$available)
      && $IsValid'u64'(s->$price)
}
function {:inline} $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'(s1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower, s2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower): bool {
    s1 == s2
}
var $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory: $Memory $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower;

// struct base::RewardPower at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:130:5+116
datatype $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower($transfer_ref: $1_object_TransferRef, $available: int, $price: int)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'_transfer_ref(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower, x: $1_object_TransferRef): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower(x, s->$available, s->$price)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'_available(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower(s->$transfer_ref, x, s->$price)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'_price(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower, x: int): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower(s->$transfer_ref, s->$available, x)
}
function $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower): bool {
    $IsValid'$1_object_TransferRef'(s->$transfer_ref)
      && $IsValid'u64'(s->$available)
      && $IsValid'u64'(s->$price)
}
function {:inline} $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'(s1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower, s2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower): bool {
    s1 == s2
}
var $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory: $Memory $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower;

// struct base::UserState at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:42:5+219
datatype $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState($quests_completed: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), $current_quests: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest), $current_campaigns: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign), $campaign_completed: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign))
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'_quests_completed(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState, x: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState(x, s->$current_quests, s->$current_campaigns, s->$campaign_completed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'_current_quests(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState, x: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState(s->$quests_completed, x, s->$current_campaigns, s->$campaign_completed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'_current_campaigns(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState, x: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState(s->$quests_completed, s->$current_quests, x, s->$campaign_completed)
}
function {:inline} $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'_campaign_completed(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState, x: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign)): $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState {
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState(s->$quests_completed, s->$current_quests, s->$current_campaigns, x)
}
function $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'(s: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState): bool {
    $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(s->$quests_completed)
      && $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(s->$current_quests)
      && $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(s->$current_campaigns)
      && $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(s->$campaign_completed)
}
function {:inline} $IsEqual'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'(s1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState, s2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState): bool {
    $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(s1->$quests_completed, s2->$quests_completed)
    && $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''(s1->$current_quests, s2->$current_quests)
    && $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(s1->$current_campaigns, s2->$current_campaigns)
    && $IsEqual'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''(s1->$campaign_completed, s2->$campaign_completed)}
var $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory: $Memory $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState;

// fun base::mint_to [baseline] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+955
procedure {:inline 1} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_mint_to(_$t0: $signer, _$t1: $1_string_String, _$t2: int, _$t3: $1_string_String, _$t4: $1_string_String, _$t5: $1_string_String, _$t6: int) returns ()
{
    // declare local variables
    var $t7: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower;
    var $t8: $1_object_ConstructorRef;
    var $t9: $1_object_Object'$4_token_Token';
    var $t10: $signer;
    var $t11: $1_object_TransferRef;
    var $t12: $1_option_Option'$4_royalty_Royalty';
    var $t13: $1_object_ConstructorRef;
    var $t14: int;
    var $t15: $signer;
    var $t16: $1_object_TransferRef;
    var $t17: $1_object_Object'$4_token_Token';
    var $t18: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: int;
    var $t3: $1_string_String;
    var $t4: $1_string_String;
    var $t5: $1_string_String;
    var $t6: int;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;

    // bytecode translation starts here
    // trace_local[creator]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$at(2,4532,4533)"} true;
    assume {:print "$track_local(70,16,0):", $t0} $t0 == $t0;

    // trace_local[token_name]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$track_local(70,16,1):", $t1} $t1 == $t1;

    // trace_local[to]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$track_local(70,16,2):", $t2} $t2 == $t2;

    // trace_local[colection_name]($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$track_local(70,16,3):", $t3} $t3 == $t3;

    // trace_local[description]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$track_local(70,16,4):", $t4} $t4 == $t4;

    // trace_local[token_uri]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$track_local(70,16,5):", $t5} $t5 == $t5;

    // trace_local[price]($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$track_local(70,16,6):", $t6} $t6 == $t6;

    // $t12 := opaque begin: option::none<royalty::Royalty>() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:170:13+14
    assume {:print "$at(2,4930,4944)"} true;

    // assume And(WellFormed($t12), Le(Len<royalty::Royalty>(select option::Option.vec($t12)), 1)) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:170:13+14
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t12) && (LenVec($t12->$vec) <= 1));

    // assume Eq<option::Option<royalty::Royalty>>($t12, option::spec_none<royalty::Royalty>()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:170:13+14
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t12, $1_option_spec_none'$4_royalty_Royalty'());

    // $t12 := opaque end: option::none<royalty::Royalty>() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:170:13+14

    // $t13 := token::create_named_token($t0, $t3, $t4, $t1, $t12, $t5) on_abort goto L2 with $t14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:165:37+192
    assume {:print "$at(2,4788,4980)"} true;
    call $t13 := $4_token_create_named_token($t0, $t3, $t4, $t1, $t12, $t5);
    if ($abort_flag) {
        assume {:print "$at(2,4788,4980)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(70,16):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[token_constructor_ref]($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:165:13+21
    assume {:print "$track_local(70,16,8):", $t13} $t13 == $t13;

    // $t15 := object::generate_signer($t13) on_abort goto L2 with $t14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:174:28+47
    assume {:print "$at(2,5012,5059)"} true;
    call $t15 := $1_object_generate_signer($t13);
    if ($abort_flag) {
        assume {:print "$at(2,5012,5059)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(70,16):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[token_signer]($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:174:13+12
    assume {:print "$track_local(70,16,10):", $t15} $t15 == $t15;

    // $t16 := object::generate_transfer_ref($t13) on_abort goto L2 with $t14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:175:28+53
    assume {:print "$at(2,5089,5142)"} true;
    call $t16 := $1_object_generate_transfer_ref($t13);
    if ($abort_flag) {
        assume {:print "$at(2,5089,5142)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(70,16):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[transfer_ref]($t16) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:175:13+12
    assume {:print "$track_local(70,16,11):", $t16} $t16 == $t16;

    // $t17 := object::object_from_constructor_ref<token::Token>($t13) on_abort goto L2 with $t14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:176:28+73
    assume {:print "$at(2,5172,5245)"} true;
    call $t17 := $1_object_object_from_constructor_ref'$4_token_Token'($t13);
    if ($abort_flag) {
        assume {:print "$at(2,5172,5245)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(70,16):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[token_object]($t17) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:176:13+12
    assume {:print "$track_local(70,16,9):", $t17} $t17 == $t17;

    // $t18 := pack base::RewardPower($t16, $t6, $t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:178:26+101
    assume {:print "$at(2,5275,5376)"} true;
    $t18 := $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower($t16, $t6, $t6);

    // trace_local[reward_pow]($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:178:13+10
    assume {:print "$track_local(70,16,7):", $t18} $t18 == $t18;

    // move_to<base::RewardPower>($t18, $t15) on_abort goto L2 with $t14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:184:9+7
    assume {:print "$at(2,5389,5396)"} true;
    if ($ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $t15->$addr)) {
        call $ExecFailureAbort();
    } else {
        $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $t15->$addr, $t18);
    }
    if ($abort_flag) {
        assume {:print "$at(2,5389,5396)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(70,16):", $t14} $t14 == $t14;
        goto L2;
    }

    // object::transfer<token::Token>($t0, $t17, $t2) on_abort goto L2 with $t14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:186:9+43
    assume {:print "$at(2,5436,5479)"} true;
    call $1_object_transfer'$4_token_Token'($t0, $t17, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,5436,5479)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(70,16):", $t14} $t14 == $t14;
        goto L2;
    }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:187:5+1
    assume {:print "$at(2,5486,5487)"} true;
L1:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:187:5+1
    assume {:print "$at(2,5486,5487)"} true;
    return;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:187:5+1
L2:

    // abort($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:187:5+1
    assume {:print "$at(2,5486,5487)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun base::mint_to [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+955
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_mint_to$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: int, _$t3: $1_string_String, _$t4: $1_string_String, _$t5: $1_string_String, _$t6: int) returns ()
{
    // declare local variables
    var $t7: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower;
    var $t8: $1_object_ConstructorRef;
    var $t9: $1_object_Object'$4_token_Token';
    var $t10: $signer;
    var $t11: $1_object_TransferRef;
    var $t12: $1_option_Option'$4_royalty_Royalty';
    var $t13: $1_object_ConstructorRef;
    var $t14: int;
    var $t15: $signer;
    var $t16: $1_object_TransferRef;
    var $t17: $1_object_Object'$4_token_Token';
    var $t18: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: int;
    var $t3: $1_string_String;
    var $t4: $1_string_String;
    var $t5: $1_string_String;
    var $t6: int;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$at(2,4532,4533)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume $IsValid'address'($t2);

    // assume WellFormed($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume $IsValid'$1_string_String'($t3);

    // assume WellFormed($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume $IsValid'$1_string_String'($t4);

    // assume WellFormed($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume $IsValid'$1_string_String'($t5);

    // assume WellFormed($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume $IsValid'u64'($t6);

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: royalty::Royalty: ResourceDomain<royalty::Royalty>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: collection::FixedSupply: ResourceDomain<collection::FixedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_FixedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_FixedSupply_$memory, $a_0);
    ($IsValid'$4_collection_FixedSupply'($rsc))));

    // assume forall $rsc: collection::UnlimitedSupply: ResourceDomain<collection::UnlimitedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: token::Token: ResourceDomain<token::Token>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_Token_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_Token_$memory, $a_0);
    ($IsValid'$4_token_Token'($rsc))));

    // assume forall $rsc: base::RewardPower: ResourceDomain<base::RewardPower>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'($rsc))));

    // trace_local[creator]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$track_local(70,16,0):", $t0} $t0 == $t0;

    // trace_local[token_name]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$track_local(70,16,1):", $t1} $t1 == $t1;

    // trace_local[to]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$track_local(70,16,2):", $t2} $t2 == $t2;

    // trace_local[colection_name]($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$track_local(70,16,3):", $t3} $t3 == $t3;

    // trace_local[description]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$track_local(70,16,4):", $t4} $t4 == $t4;

    // trace_local[token_uri]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$track_local(70,16,5):", $t5} $t5 == $t5;

    // trace_local[price]($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:156:5+1
    assume {:print "$track_local(70,16,6):", $t6} $t6 == $t6;

    // $t12 := opaque begin: option::none<royalty::Royalty>() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:170:13+14
    assume {:print "$at(2,4930,4944)"} true;

    // assume And(WellFormed($t12), Le(Len<royalty::Royalty>(select option::Option.vec($t12)), 1)) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:170:13+14
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t12) && (LenVec($t12->$vec) <= 1));

    // assume Eq<option::Option<royalty::Royalty>>($t12, option::spec_none<royalty::Royalty>()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:170:13+14
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t12, $1_option_spec_none'$4_royalty_Royalty'());

    // $t12 := opaque end: option::none<royalty::Royalty>() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:170:13+14

    // $t13 := token::create_named_token($t0, $t3, $t4, $t1, $t12, $t5) on_abort goto L2 with $t14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:165:37+192
    assume {:print "$at(2,4788,4980)"} true;
    call $t13 := $4_token_create_named_token($t0, $t3, $t4, $t1, $t12, $t5);
    if ($abort_flag) {
        assume {:print "$at(2,4788,4980)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(70,16):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[token_constructor_ref]($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:165:13+21
    assume {:print "$track_local(70,16,8):", $t13} $t13 == $t13;

    // $t15 := object::generate_signer($t13) on_abort goto L2 with $t14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:174:28+47
    assume {:print "$at(2,5012,5059)"} true;
    call $t15 := $1_object_generate_signer($t13);
    if ($abort_flag) {
        assume {:print "$at(2,5012,5059)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(70,16):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[token_signer]($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:174:13+12
    assume {:print "$track_local(70,16,10):", $t15} $t15 == $t15;

    // $t16 := object::generate_transfer_ref($t13) on_abort goto L2 with $t14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:175:28+53
    assume {:print "$at(2,5089,5142)"} true;
    call $t16 := $1_object_generate_transfer_ref($t13);
    if ($abort_flag) {
        assume {:print "$at(2,5089,5142)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(70,16):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[transfer_ref]($t16) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:175:13+12
    assume {:print "$track_local(70,16,11):", $t16} $t16 == $t16;

    // $t17 := object::object_from_constructor_ref<token::Token>($t13) on_abort goto L2 with $t14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:176:28+73
    assume {:print "$at(2,5172,5245)"} true;
    call $t17 := $1_object_object_from_constructor_ref'$4_token_Token'($t13);
    if ($abort_flag) {
        assume {:print "$at(2,5172,5245)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(70,16):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[token_object]($t17) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:176:13+12
    assume {:print "$track_local(70,16,9):", $t17} $t17 == $t17;

    // $t18 := pack base::RewardPower($t16, $t6, $t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:178:26+101
    assume {:print "$at(2,5275,5376)"} true;
    $t18 := $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower($t16, $t6, $t6);

    // trace_local[reward_pow]($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:178:13+10
    assume {:print "$track_local(70,16,7):", $t18} $t18 == $t18;

    // move_to<base::RewardPower>($t18, $t15) on_abort goto L2 with $t14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:184:9+7
    assume {:print "$at(2,5389,5396)"} true;
    if ($ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $t15->$addr)) {
        call $ExecFailureAbort();
    } else {
        $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $t15->$addr, $t18);
    }
    if ($abort_flag) {
        assume {:print "$at(2,5389,5396)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(70,16):", $t14} $t14 == $t14;
        goto L2;
    }

    // object::transfer<token::Token>($t0, $t17, $t2) on_abort goto L2 with $t14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:186:9+43
    assume {:print "$at(2,5436,5479)"} true;
    call $1_object_transfer'$4_token_Token'($t0, $t17, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,5436,5479)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(70,16):", $t14} $t14 == $t14;
        goto L2;
    }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:187:5+1
    assume {:print "$at(2,5486,5487)"} true;
L1:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:187:5+1
    assume {:print "$at(2,5486,5487)"} true;
    return;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:187:5+1
L2:

    // abort($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:187:5+1
    assume {:print "$at(2,5486,5487)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun base::MintRewardNfts [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+811
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_MintRewardNfts$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: Vec ($1_string_String), _$t4: Vec ($1_string_String), _$t5: Vec (int)) returns ()
{
    // declare local variables
    var $t6: int;
    var $t7: int;
    var $t8: $1_string_String;
    var $t9: $1_string_String;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: $1_string_String;
    var $t14: $1_string_String;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: Vec ($1_string_String);
    var $t4: Vec ($1_string_String);
    var $t5: Vec (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'$1_string_String'': Vec ($1_string_String);
    var $temp_0'vec'u64'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume {:print "$at(2,7627,7628)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume $IsValid'$1_string_String'($t2);

    // assume WellFormed($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume $IsValid'vec'$1_string_String''($t3);

    // assume WellFormed($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume $IsValid'vec'$1_string_String''($t4);

    // assume WellFormed($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume $IsValid'vec'u64''($t5);

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: royalty::Royalty: ResourceDomain<royalty::Royalty>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: collection::FixedSupply: ResourceDomain<collection::FixedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_FixedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_FixedSupply_$memory, $a_0);
    ($IsValid'$4_collection_FixedSupply'($rsc))));

    // assume forall $rsc: collection::UnlimitedSupply: ResourceDomain<collection::UnlimitedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: token::Token: ResourceDomain<token::Token>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_Token_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_Token_$memory, $a_0);
    ($IsValid'$4_token_Token'($rsc))));

    // assume forall $rsc: base::RewardItemPower: ResourceDomain<base::RewardItemPower>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'($rsc))));

    // trace_local[creator]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume {:print "$track_local(70,0,0):", $t0} $t0 == $t0;

    // trace_local[collection_name]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume {:print "$track_local(70,0,1):", $t1} $t1 == $t1;

    // trace_local[token_uri]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume {:print "$track_local(70,0,2):", $t2} $t2 == $t2;

    // trace_local[token_names]($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume {:print "$track_local(70,0,3):", $t3} $t3 == $t3;

    // trace_local[token_descs]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume {:print "$track_local(70,0,4):", $t4} $t4 == $t4;

    // trace_local[prices]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:256:5+1
    assume {:print "$track_local(70,0,5):", $t5} $t5 == $t5;

    // $t10 := 0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:264:17+1
    assume {:print "$at(2,7874,7875)"} true;
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // trace_local[i]($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:264:13+1
    assume {:print "$track_local(70,0,6):", $t10} $t10 == $t10;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume {:print "$at(2,7893,7894)"} true;
L3:

    // $t6 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume {:print "$at(2,7893,7894)"} true;
    havoc $t6;

    // assume WellFormed($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume $IsValid'u64'($t6);

    // $t11 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    havoc $t11;

    // assume WellFormed($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume $IsValid'u64'($t11);

    // $t12 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    havoc $t12;

    // assume WellFormed($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume $IsValid'bool'($t12);

    // $t13 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    havoc $t13;

    // assume WellFormed($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume $IsValid'$1_string_String'($t13);

    // $t14 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    havoc $t14;

    // assume WellFormed($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume $IsValid'$1_string_String'($t14);

    // $t15 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    havoc $t15;

    // assume WellFormed($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume $IsValid'u64'($t15);

    // $t16 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    havoc $t16;

    // assume WellFormed($t16) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume $IsValid'address'($t16);

    // $t17 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    havoc $t17;

    // assume WellFormed($t17) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume $IsValid'bool'($t17);

    // $t18 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    havoc $t18;

    // assume WellFormed($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume $IsValid'u64'($t18);

    // $t19 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    havoc $t19;

    // assume WellFormed($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume $IsValid'u64'($t19);

    // trace_local[i]($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume {:print "$info(): enter loop, variable(s) i havocked and reassigned"} true;
    assume {:print "$track_local(70,0,6):", $t6} $t6 == $t6;

    // assume Not(AbortFlag()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:16+1
    assume !$abort_flag;

    // $t11 := vector::length<string::String>($t3) on_abort goto L6 with $t20 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:20+28
    call $t11 := $1_vector_length'$1_string_String'($t3);
    if ($abort_flag) {
        assume {:print "$at(2,7897,7925)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(70,0):", $t20} $t20 == $t20;
        goto L6;
    }

    // $t12 := <($t6, $t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:18+1
    call $t12 := $Lt($t6, $t11);

    // if ($t12) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:9+545
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:9+545
L1:

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:266:45+12
    assume {:print "$at(2,7974,7986)"} true;
L2:

    // $t13 := vector::borrow<string::String>($t3, $t6) on_abort goto L6 with $t20 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:266:30+31
    assume {:print "$at(2,7959,7990)"} true;
    call $t13 := $1_vector_borrow'$1_string_String'($t3, $t6);
    if ($abort_flag) {
        assume {:print "$at(2,7959,7990)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(70,0):", $t20} $t20 == $t20;
        goto L6;
    }

    // trace_local[token_name]($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:266:17+10
    assume {:print "$track_local(70,0,9):", $t13} $t13 == $t13;

    // $t14 := vector::borrow<string::String>($t4, $t6) on_abort goto L6 with $t20 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:267:30+31
    assume {:print "$at(2,8022,8053)"} true;
    call $t14 := $1_vector_borrow'$1_string_String'($t4, $t6);
    if ($abort_flag) {
        assume {:print "$at(2,8022,8053)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(70,0):", $t20} $t20 == $t20;
        goto L6;
    }

    // trace_local[token_desc]($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:267:17+10
    assume {:print "$track_local(70,0,8):", $t14} $t14 == $t14;

    // $t15 := vector::borrow<u64>($t5, $t6) on_abort goto L6 with $t20 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:268:25+26
    assume {:print "$at(2,8080,8106)"} true;
    call $t15 := $1_vector_borrow'u64'($t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(2,8080,8106)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(70,0):", $t20} $t20 == $t20;
        goto L6;
    }

    // trace_local[price]($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:268:17+5
    assume {:print "$track_local(70,0,7):", $t15} $t15 == $t15;

    // $t16 := signer::address_of($t0) on_abort goto L6 with $t20 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:273:17+27
    assume {:print "$at(2,8212,8239)"} true;
    call $t16 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,8212,8239)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(70,0):", $t20} $t20 == $t20;
        goto L6;
    }

    // $t17 := false at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:278:17+5
    assume {:print "$at(2,8375,8380)"} true;
    $t17 := false;
    assume $IsValid'bool'($t17);

    // base::mint_reward_to($t0, $t13, $t16, $t1, $t14, $t2, $t15, $t17) on_abort goto L6 with $t20 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:270:13+272
    assume {:print "$at(2,8123,8395)"} true;
    call $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_mint_reward_to($t0, $t13, $t16, $t1, $t14, $t2, $t15, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,8123,8395)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(70,0):", $t20} $t20 == $t20;
        goto L6;
    }

    // $t18 := 1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:280:21+1
    assume {:print "$at(2,8418,8419)"} true;
    $t18 := 1;
    assume $IsValid'u64'($t18);

    // $t19 := +($t6, $t18) on_abort goto L6 with $t20 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:280:19+1
    call $t19 := $AddU64($t6, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,8416,8417)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(70,0):", $t20} $t20 == $t20;
        goto L6;
    }

    // trace_local[i]($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:280:13+1
    assume {:print "$track_local(70,0,6):", $t19} $t19 == $t19;

    // goto L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:280:22+1
    goto L4;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:9+545
    assume {:print "$at(2,7886,8431)"} true;
L0:

    // goto L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:9+545
    assume {:print "$at(2,7886,8431)"} true;
    goto L5;

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:9+545
    // Loop invariant checking block for the loop started with header: L3
L4:

    // stop() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:265:9+545
    assume {:print "$at(2,7886,8431)"} true;
    assume false;
    return;

    // label L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:282:5+1
    assume {:print "$at(2,8437,8438)"} true;
L5:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:282:5+1
    assume {:print "$at(2,8437,8438)"} true;
    return;

    // label L6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:282:5+1
L6:

    // abort($t20) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:282:5+1
    assume {:print "$at(2,8437,8438)"} true;
    $abort_code := $t20;
    $abort_flag := true;
    return;

}

// fun base::claimRewardItem [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:501:5+1052
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_claimRewardItem$verify(_$t0: $1_object_Object'$4_token_Token', _$t1: int, _$t2: $signer, _$t3: $1_object_Object'$4_token_Token') returns ()
{
    // declare local variables
    var $t4: $Mutation (int);
    var $t5: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower;
    var $t6: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower);
    var $t7: int;
    var $t8: $1_object_TransferRef;
    var $t9: int;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower);
    var $t20: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower;
    var $t21: $1_object_TransferRef;
    var $t22: $Mutation (int);
    var $t23: $1_object_LinearTransferRef;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t0: $1_object_Object'$4_token_Token';
    var $t1: int;
    var $t2: $signer;
    var $t3: $1_object_Object'$4_token_Token';
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:501:5+1
    assume {:print "$at(2,16976,16977)"} true;
    assume $IsValid'$1_object_Object'$4_token_Token''($t0);

    // assume WellFormed($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:501:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:501:5+1
    assume $IsValid'signer'($t2) && $1_signer_is_txn_signer($t2) && $1_signer_is_txn_signer_addr($t2->$addr);

    // assume WellFormed($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:501:5+1
    assume $IsValid'$1_object_Object'$4_token_Token''($t3);

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:501:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: base::RewardItemPower: ResourceDomain<base::RewardItemPower>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:501:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'($rsc))));

    // assume forall $rsc: base::RewardPower: ResourceDomain<base::RewardPower>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:501:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'($rsc))));

    // trace_local[token_obj]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:501:5+1
    assume {:print "$track_local(70,1,0):", $t0} $t0 == $t0;

    // trace_local[to_claim_address]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:501:5+1
    assume {:print "$track_local(70,1,1):", $t1} $t1 == $t1;

    // trace_local[account]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:501:5+1
    assume {:print "$track_local(70,1,2):", $t2} $t2 == $t2;

    // trace_local[token]($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:501:5+1
    assume {:print "$track_local(70,1,3):", $t3} $t3 == $t3;

    // $t9 := signer::address_of($t2) on_abort goto L7 with $t10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:503:45+27
    assume {:print "$at(2,17249,17276)"} true;
    call $t9 := $1_signer_address_of($t2);
    if ($abort_flag) {
        assume {:print "$at(2,17249,17276)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(70,1):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t11 := object::is_owner<token::Token>($t0, $t9) on_abort goto L7 with $t10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:503:17+56
    call $t11 := $1_object_is_owner'$4_token_Token'($t0, $t9);
    if ($abort_flag) {
        assume {:print "$at(2,17221,17277)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(70,1):", $t10} $t10 == $t10;
        goto L7;
    }

    // if ($t11) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:503:9+109
    if ($t11) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:503:9+109
L1:

    // goto L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:503:9+109
    assume {:print "$at(2,17213,17322)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:503:100+16
L0:

    // $t12 := 1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:503:100+16
    assume {:print "$at(2,17304,17320)"} true;
    $t12 := 1;
    assume $IsValid'u64'($t12);

    // $t13 := error::permission_denied($t12) on_abort goto L7 with $t10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:503:75+42
    call $t13 := $1_error_permission_denied($t12);
    if ($abort_flag) {
        assume {:print "$at(2,17279,17321)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(70,1):", $t10} $t10 == $t10;
        goto L7;
    }

    // trace_abort($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:503:9+109
    assume {:print "$at(2,17213,17322)"} true;
    assume {:print "$track_abort(70,1):", $t13} $t13 == $t13;

    // $t10 := move($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:503:9+109
    $t10 := $t13;

    // goto L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:503:9+109
    goto L7;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:504:34+5
    assume {:print "$at(2,17358,17363)"} true;
L2:

    // $t14 := 0x9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:504:41+5
    assume {:print "$at(2,17365,17370)"} true;
    $t14 := 72038777300602173924386081059034887547389433311546243642183252999150723751218;
    assume $IsValid'address'($t14);

    // $t15 := object::is_owner<token::Token>($t3, $t14) on_abort goto L7 with $t10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:504:17+30
    call $t15 := $1_object_is_owner'$4_token_Token'($t3, $t14);
    if ($abort_flag) {
        assume {:print "$at(2,17341,17371)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(70,1):", $t10} $t10 == $t10;
        goto L7;
    }

    // if ($t15) goto L4 else goto L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:504:9+83
    if ($t15) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:504:9+83
L4:

    // goto L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:504:9+83
    assume {:print "$at(2,17333,17416)"} true;
    goto L5;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:504:74+16
L3:

    // $t16 := 1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:504:74+16
    assume {:print "$at(2,17398,17414)"} true;
    $t16 := 1;
    assume $IsValid'u64'($t16);

    // $t17 := error::permission_denied($t16) on_abort goto L7 with $t10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:504:49+42
    call $t17 := $1_error_permission_denied($t16);
    if ($abort_flag) {
        assume {:print "$at(2,17373,17415)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(70,1):", $t10} $t10 == $t10;
        goto L7;
    }

    // trace_abort($t17) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:504:9+83
    assume {:print "$at(2,17333,17416)"} true;
    assume {:print "$track_abort(70,1):", $t17} $t17 == $t17;

    // $t10 := move($t17) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:504:9+83
    $t10 := $t17;

    // goto L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:504:9+83
    goto L7;

    // label L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:506:52+10
    assume {:print "$at(2,17472,17482)"} true;
L5:

    // $t18 := object::object_address<token::Token>($t0) on_abort goto L7 with $t10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:506:29+34
    assume {:print "$at(2,17449,17483)"} true;
    call $t18 := $1_object_object_address'$4_token_Token'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,17449,17483)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(70,1):", $t10} $t10 == $t10;
        goto L7;
    }

    // trace_local[token_address]($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:506:13+13
    assume {:print "$track_local(70,1,7):", $t18} $t18 == $t18;

    // $t19 := borrow_global<base::RewardPower>($t18) on_abort goto L7 with $t10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:508:34+17
    assume {:print "$at(2,17521,17538)"} true;
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $t18)) {
        call $ExecFailureAbort();
    } else {
        $t19 := $Mutation($Global($t18), EmptyVec(), $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $t18));
    }
    if ($abort_flag) {
        assume {:print "$at(2,17521,17538)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(70,1):", $t10} $t10 == $t10;
        goto L7;
    }

    // trace_local[reward_power_claim]($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:508:13+18
    $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower' := $Dereference($t19);
    assume {:print "$track_local(70,1,6):", $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'} $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower' == $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower';

    // $t20 := get_global<base::RewardItemPower>($t1) on_abort goto L7 with $t10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:510:35+13
    assume {:print "$at(2,17605,17618)"} true;
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(2,17605,17618)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(70,1):", $t10} $t10 == $t10;
        goto L7;
    }

    // trace_local[reward_pow_to_claim]($t20) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:510:13+19
    assume {:print "$track_local(70,1,5):", $t20} $t20 == $t20;

    // $t21 := get_field<base::RewardPower>.transfer_ref($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:511:28+32
    assume {:print "$at(2,17683,17715)"} true;
    $t21 := $Dereference($t19)->$transfer_ref;

    // trace_local[transfer_ref]($t21) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:511:13+12
    assume {:print "$track_local(70,1,8):", $t21} $t21 == $t21;

    // $t22 := borrow_field<base::RewardPower>.available($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:513:31+33
    assume {:print "$at(2,17750,17783)"} true;
    $t22 := $ChildMutation($t19, 1, $Dereference($t19)->$available);

    // trace_local[available_price]($t22) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:513:13+15
    $temp_0'u64' := $Dereference($t22);
    assume {:print "$track_local(70,1,4):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t23 := object::generate_linear_transfer_ref($t21) on_abort goto L7 with $t10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:515:35+50
    assume {:print "$at(2,17822,17872)"} true;
    call $t23 := $1_object_generate_linear_transfer_ref($t21);
    if ($abort_flag) {
        assume {:print "$at(2,17822,17872)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(70,1):", $t10} $t10 == $t10;
        goto L7;
    }

    // object::transfer_with_ref($t23, $t18) on_abort goto L7 with $t10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:516:9+61
    assume {:print "$at(2,17883,17944)"} true;
    call $1_object_transfer_with_ref($t23, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,17883,17944)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(70,1):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t24 := read_ref($t22) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:518:28+16
    assume {:print "$at(2,17976,17992)"} true;
    $t24 := $Dereference($t22);

    // $t25 := get_field<base::RewardItemPower>.price($t20) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:518:47+25
    $t25 := $t20->$price;

    // $t26 := -($t24, $t25) on_abort goto L7 with $t10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:518:45+1
    call $t26 := $Sub($t24, $t25);
    if ($abort_flag) {
        assume {:print "$at(2,17993,17994)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(70,1):", $t10} $t10 == $t10;
        goto L7;
    }

    // write_ref($t22, $t26) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:518:9+63
    $t22 := $UpdateMutation($t22, $t26);

    // write_back[Reference($t19).available (u64)]($t22) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:518:9+63
    $t19 := $UpdateMutation($t19, $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'_available($Dereference($t19), $Dereference($t22)));

    // write_back[base::RewardPower@]($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:518:9+63
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $GlobalLocationAddress($t19),
        $Dereference($t19));

    // label L6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:519:5+1
    assume {:print "$at(2,18027,18028)"} true;
L6:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:519:5+1
    assume {:print "$at(2,18027,18028)"} true;
    return;

    // label L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:519:5+1
L7:

    // abort($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:519:5+1
    assume {:print "$at(2,18027,18028)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun base::claimRewardNft [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+658
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_claimRewardNft$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_string_String, _$t4: int) returns ()
{
    // declare local variables
    var $t5: int;
    var $t6: Vec (int);
    var $t7: Vec (int);
    var $t8: int;
    var $t9: $1_string_String;
    var $t10: $1_string_String;
    var $t11: int;
    var $t12: int;
    var $t13: Vec (int);
    var $t14: $1_string_String;
    var $t15: $1_string_String;
    var $t16: Vec (int);
    var $t17: $1_string_String;
    var $t18: $1_string_String;
    var $t19: $1_string_String;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume {:print "$at(2,16308,16309)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume $IsValid'$1_string_String'($t2);

    // assume WellFormed($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume $IsValid'$1_string_String'($t3);

    // assume WellFormed($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume $IsValid'u64'($t4);

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: royalty::Royalty: ResourceDomain<royalty::Royalty>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: collection::FixedSupply: ResourceDomain<collection::FixedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_FixedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_FixedSupply_$memory, $a_0);
    ($IsValid'$4_collection_FixedSupply'($rsc))));

    // assume forall $rsc: collection::UnlimitedSupply: ResourceDomain<collection::UnlimitedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: token::Token: ResourceDomain<token::Token>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_Token_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_Token_$memory, $a_0);
    ($IsValid'$4_token_Token'($rsc))));

    // assume forall $rsc: base::RewardPower: ResourceDomain<base::RewardPower>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'($rsc))));

    // trace_local[creator]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume {:print "$track_local(70,2,0):", $t0} $t0 == $t0;

    // trace_local[quest_title]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume {:print "$track_local(70,2,1):", $t1} $t1 == $t1;

    // trace_local[token_uri]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume {:print "$track_local(70,2,2):", $t2} $t2 == $t2;

    // trace_local[collection_name]($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume {:print "$track_local(70,2,3):", $t3} $t3 == $t3;

    // trace_local[price]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:488:5+1
    assume {:print "$track_local(70,2,4):", $t4} $t4 == $t4;

    // $t11 := signer::address_of($t0) on_abort goto L2 with $t12 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:489:19+27
    assume {:print "$at(2,16456,16483)"} true;
    call $t11 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,16456,16483)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(70,2):", $t12} $t12 == $t12;
        goto L2;
    }

    // trace_local[to]($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:489:13+2
    assume {:print "$track_local(70,2,8):", $t11} $t11 == $t11;

    // $t13 := [82, 101, 119, 97, 114, 100, 32, 78, 102, 116, 32, 102, 111, 114, 32, 123, 125, 32, 45, 32, 123, 125] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:490:49+25
    assume {:print "$at(2,16534,16559)"} true;
    $t13 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 101, 119, 97), MakeVec4(114, 100, 32, 78)), MakeVec4(102, 116, 32, 102)), MakeVec4(111, 114, 32, 123)), MakeVec4(125, 32, 45, 32)), MakeVec2(123, 125));
    assume $IsValid'vec'u8''($t13);

    // $t14 := string_utils::to_string<address>($t11) on_abort goto L2 with $t12 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:490:89+27
    call $t14 := $1_string_utils_to_string'address'($t11);
    if ($abort_flag) {
        assume {:print "$at(2,16574,16601)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(70,2):", $t12} $t12 == $t12;
        goto L2;
    }

    // $t15 := string_utils::format2<string::String, string::String>($t13, $t1, $t14) on_abort goto L2 with $t12 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:490:26+91
    call $t15 := $1_string_utils_format2'$1_string_String_$1_string_String'($t13, $t1, $t14);
    if ($abort_flag) {
        assume {:print "$at(2,16511,16602)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(70,2):", $t12} $t12 == $t12;
        goto L2;
    }

    // trace_local[token_name]($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:490:13+10
    assume {:print "$track_local(70,2,10):", $t15} $t15 == $t15;

    // $t16 := [84, 104, 105, 115, 32, 105, 115, 32, 97, 32, 114, 101, 119, 97, 114, 100, 32, 116, 111, 107, 101, 110, 32, 102, 114, 111, 109, 32, 123, 125, 32, 116, 111, 32, 123, 125, 32, 102, 111, 114, 32, 105, 110, 118, 111, 108, 118, 101, 109, 101, 110, 116, 32, 105, 110, 32, 123, 125, 32, 113, 117, 101, 115, 116] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:492:14+67
    assume {:print "$at(2,16673,16740)"} true;
    $t16 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(84, 104, 105, 115), MakeVec4(32, 105, 115, 32)), MakeVec4(97, 32, 114, 101)), MakeVec4(119, 97, 114, 100)), MakeVec4(32, 116, 111, 107)), MakeVec4(101, 110, 32, 102)), MakeVec4(114, 111, 109, 32)), MakeVec4(123, 125, 32, 116)), MakeVec4(111, 32, 123, 125)), MakeVec4(32, 102, 111, 114)), MakeVec4(32, 105, 110, 118)), MakeVec4(111, 108, 118, 101)), MakeVec4(109, 101, 110, 116)), MakeVec4(32, 105, 110, 32)), MakeVec4(123, 125, 32, 113)), MakeVec4(117, 101, 115, 116));
    assume $IsValid'vec'u8''($t16);

    // $t17 := string_utils::to_string<address>($t11) on_abort goto L2 with $t12 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:493:13+27
    assume {:print "$at(2,16755,16782)"} true;
    call $t17 := $1_string_utils_to_string'address'($t11);
    if ($abort_flag) {
        assume {:print "$at(2,16755,16782)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(70,2):", $t12} $t12 == $t12;
        goto L2;
    }

    // $t18 := string_utils::to_string<address>($t11) on_abort goto L2 with $t12 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:494:13+27
    assume {:print "$at(2,16797,16824)"} true;
    call $t18 := $1_string_utils_to_string'address'($t11);
    if ($abort_flag) {
        assume {:print "$at(2,16797,16824)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(70,2):", $t12} $t12 == $t12;
        goto L2;
    }

    // $t19 := string_utils::format3<string::String, string::String, string::String>($t16, $t17, $t18, $t1) on_abort goto L2 with $t12 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:491:32+225
    assume {:print "$at(2,16636,16861)"} true;
    call $t19 := $1_string_utils_format3'$1_string_String_$1_string_String_$1_string_String'($t16, $t17, $t18, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,16636,16861)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(70,2):", $t12} $t12 == $t12;
        goto L2;
    }

    // trace_local[token_decription]($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:491:13+16
    assume {:print "$track_local(70,2,9):", $t19} $t19 == $t19;

    // base::mint_to($t0, $t15, $t11, $t3, $t19, $t2, $t4) on_abort goto L2 with $t12 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:497:9+86
    assume {:print "$at(2,16872,16958)"} true;
    call $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_mint_to($t0, $t15, $t11, $t3, $t19, $t2, $t4);
    if ($abort_flag) {
        assume {:print "$at(2,16872,16958)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(70,2):", $t12} $t12 == $t12;
        goto L2;
    }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:498:5+1
    assume {:print "$at(2,16965,16966)"} true;
L1:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:498:5+1
    assume {:print "$at(2,16965,16966)"} true;
    return;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:498:5+1
L2:

    // abort($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:498:5+1
    assume {:print "$at(2,16965,16966)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun base::complete_quest [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:471:5+830
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_complete_quest$verify(_$t0: $signer, _$t1: $1_string_String) returns ()
{
    // declare local variables
    var $t2: $1_string_String;
    var $t3: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState);
    var $t4: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t5: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t6: int;
    var $t7: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
    var $t8: int;
    var $t9: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState);
    var $t16: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState;
    var $t17: int;
    var $t18: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState);
    var $t19: $Mutation (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest));
    var $t20: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t21: bool;
    var $t22: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t23: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
    var $t24: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t25: bool;
    var $t26: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t27: bool;
    var $t28: int;
    var $t29: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest));
    var $t30: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
    var $t31: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest));
    var $t0: $signer;
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'': Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:471:5+1
    assume {:print "$at(2,15470,15471)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:471:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume forall $rsc: base::AppState: ResourceDomain<base::AppState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:471:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($rsc))));

    // assume forall $rsc: base::UserState: ResourceDomain<base::UserState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:471:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'($rsc))));

    // trace_local[account]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:471:5+1
    assume {:print "$track_local(70,3,0):", $t0} $t0 == $t0;

    // trace_local[quest_id]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:471:5+1
    assume {:print "$track_local(70,3,1):", $t1} $t1 == $t1;

    // $t10 := signer::address_of($t0) on_abort goto L10 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:472:25+27
    assume {:print "$at(2,15594,15621)"} true;
    call $t10 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,15594,15621)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,3):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_local[user#412]($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:632:33+4
    assume {:print "$at(2,22644,22648)"} true;
    assume {:print "$track_local(70,3,8):", $t10} $t10 == $t10;

    // $t12 := exists<base::UserState>($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:633:17+6
    assume {:print "$at(2,22708,22714)"} true;
    $t12 := $ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $t10);

    // if ($t12) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:633:9+76
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:633:9+76
L1:

    // goto L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:633:9+76
    assume {:print "$at(2,22700,22776)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:633:59+24
L0:

    // $t13 := 2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:633:59+24
    assume {:print "$at(2,22750,22774)"} true;
    $t13 := 2;
    assume $IsValid'u64'($t13);

    // $t14 := error::not_found($t13) on_abort goto L10 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:633:42+42
    call $t14 := $1_error_not_found($t13);
    if ($abort_flag) {
        assume {:print "$at(2,22733,22775)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,3):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_abort($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:633:9+76
    assume {:print "$at(2,22700,22776)"} true;
    assume {:print "$track_abort(70,3):", $t14} $t14 == $t14;

    // $t11 := move($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:633:9+76
    $t11 := $t14;

    // goto L10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:633:9+76
    goto L10;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:634:55+4
    assume {:print "$at(2,22833,22837)"} true;
L2:

    // $t15 := borrow_global<base::UserState>($t10) on_abort goto L10 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:634:26+17
    assume {:print "$at(2,22804,22821)"} true;
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(2,22804,22821)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,3):", $t11} $t11 == $t11;
        goto L10;
    }

    // $t16 := read_ref($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:635:9+11
    assume {:print "$at(2,22849,22860)"} true;
    $t16 := $Dereference($t15);

    // trace_local[user_state]($t16) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:473:13+10
    assume {:print "$at(2,15636,15646)"} true;
    assume {:print "$track_local(70,3,9):", $t16} $t16 == $t16;

    // $t5 := get_field<base::UserState>.current_quests($t16) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:474:29+25
    assume {:print "$at(2,15707,15732)"} true;
    $t5 := $t16->$current_quests;

    // trace_local[current_quest]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:474:13+13
    assume {:print "$track_local(70,3,5):", $t5} $t5 == $t5;

    // $t4 := get_field<base::UserState>.quests_completed($t16) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:475:31+27
    assume {:print "$at(2,15765,15792)"} true;
    $t4 := $t16->$quests_completed;

    // trace_local[completed_quest]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:475:13+15
    assume {:print "$track_local(70,3,4):", $t4} $t4 == $t4;

    // $t17 := 0x9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:477:53+5
    assume {:print "$at(2,15849,15854)"} true;
    $t17 := 72038777300602173924386081059034887547389433311546243642183252999150723751218;
    assume $IsValid'address'($t17);

    // $t18 := borrow_global<base::AppState>($t17) on_abort goto L10 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:477:25+17
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t17)) {
        call $ExecFailureAbort();
    } else {
        $t18 := $Mutation($Global($t17), EmptyVec(), $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t17));
    }
    if ($abort_flag) {
        assume {:print "$at(2,15821,15838)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,3):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_local[app_state]($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:477:13+9
    $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState' := $Dereference($t18);
    assume {:print "$track_local(70,3,3):", $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'} $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState' == $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState';

    // $t19 := borrow_field<base::AppState>.quests_map($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:478:38+25
    assume {:print "$at(2,15895,15920)"} true;
    $t19 := $ChildMutation($t18, 3, $Dereference($t18)->$quests_map);

    // $t20 := read_ref($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:478:37+38
    $t20 := $Dereference($t19);

    // $t21 := simple_map::contains_key<string::String, base::Quest>($t20, $t1) on_abort goto L10 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:478:13+62
    call $t21 := $1_simple_map_contains_key'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t20, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,15870,15932)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,3):", $t11} $t11 == $t11;
        goto L10;
    }

    // if ($t21) goto L4 else goto L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:478:9+427
    if ($t21) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:479:45+9
    assume {:print "$at(2,15981,15990)"} true;
L4:

    // $t22 := get_field<base::AppState>.quests_map($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:479:44+21
    assume {:print "$at(2,15980,16001)"} true;
    $t22 := $Dereference($t18)->$quests_map;

    // $t23 := simple_map::borrow<string::String, base::Quest>($t22, $t1) on_abort goto L10 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:479:25+52
    call $t23 := $1_simple_map_borrow'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t22, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,15961,16013)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,3):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_local[quest]($t23) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:479:17+5
    assume {:print "$track_local(70,3,7):", $t23} $t23 == $t23;

    // $t24 := copy($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:480:34+14
    assume {:print "$at(2,16049,16063)"} true;
    $t24 := $t5;

    // $t25 := vector::contains<base::Quest>($t24, $t23) on_abort goto L10 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:480:17+39
    call $t25 := $1_vector_contains'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t24, $t23);
    if ($abort_flag) {
        assume {:print "$at(2,16032,16071)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,3):", $t11} $t11 == $t11;
        goto L10;
    }

    // if ($t25) goto L6 else goto L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:480:13+254
    if ($t25) { goto L6; } else { goto L5; }

    // label L6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:481:47+14
    assume {:print "$at(2,16122,16136)"} true;
L6:

    // $t26 := copy($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:481:47+14
    assume {:print "$at(2,16122,16136)"} true;
    $t26 := $t5;

    // ($t27, $t28) := vector::index_of<base::Quest>($t26, $t23) on_abort goto L10 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:481:30+39
    call $t27,$t28 := $1_vector_index_of'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t26, $t23);
    if ($abort_flag) {
        assume {:print "$at(2,16105,16144)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,3):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_local[i]($t28) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:481:25+1
    assume {:print "$track_local(70,3,6):", $t28} $t28 == $t28;

    // destroy($t27) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:481:22+1

    // $t29 := borrow_local($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:482:32+18
    assume {:print "$at(2,16178,16196)"} true;
    $t29 := $Mutation($Local(5), EmptyVec(), $t5);

    // $t30 := vector::remove<base::Quest>($t29, $t28) on_abort goto L10 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:482:17+37
    call $t30,$t29 := $1_vector_remove'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t29, $t28);
    if ($abort_flag) {
        assume {:print "$at(2,16163,16200)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,3):", $t11} $t11 == $t11;
        goto L10;
    }

    // write_back[LocalRoot($t5)@]($t29) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:482:17+37
    $t5 := $Dereference($t29);

    // trace_local[current_quest]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:482:17+37
    assume {:print "$track_local(70,3,5):", $t5} $t5 == $t5;

    // destroy($t30) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:482:17+37

    // $t31 := borrow_local($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:483:35+20
    assume {:print "$at(2,16237,16257)"} true;
    $t31 := $Mutation($Local(4), EmptyVec(), $t4);

    // vector::push_back<base::Quest>($t31, $t23) on_abort goto L10 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:483:17+47
    call $t31 := $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t31, $t23);
    if ($abort_flag) {
        assume {:print "$at(2,16219,16266)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,3):", $t11} $t11 == $t11;
        goto L10;
    }

    // write_back[LocalRoot($t4)@]($t31) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:483:17+47
    $t4 := $Dereference($t31);

    // trace_local[completed_quest]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:483:17+47
    assume {:print "$track_local(70,3,4):", $t4} $t4 == $t4;

    // goto L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:480:13+254
    assume {:print "$at(2,16028,16282)"} true;
    goto L7;

    // label L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:480:13+254
L5:

    // label L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:478:9+427
    assume {:print "$at(2,15866,16293)"} true;
L7:

    // goto L8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:478:9+427
    assume {:print "$at(2,15866,16293)"} true;
    goto L8;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:478:9+427
L3:

    // destroy($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:478:9+427
    assume {:print "$at(2,15866,16293)"} true;

    // label L8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:478:9+427
L8:

    // label L9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:486:5+1
    assume {:print "$at(2,16299,16300)"} true;
L9:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:486:5+1
    assume {:print "$at(2,16299,16300)"} true;
    return;

    // label L10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:486:5+1
L10:

    // abort($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:486:5+1
    assume {:print "$at(2,16299,16300)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun base::create_campaign [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+2673
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_create_campaign$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_string_String, _$t4: $1_string_String, _$t5: Vec ($1_string_String), _$t6: Vec ($1_string_String), _$t7: Vec ($1_string_String), _$t8: int, _$t9: $1_string_String, _$t10: $1_string_String, _$t11: $1_string_String, _$t12: $1_string_String, _$t13: Vec (int), _$t14: int, _$t15: Vec (int)) returns ()
{
    // declare local variables
    var $t16: $1_string_String;
    var $t17: $1_string_String;
    var $t18: int;
    var $t19: $1_string_String;
    var $t20: $1_string_String;
    var $t21: $1_string_String;
    var $t22: int;
    var $t23: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var $t24: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics;
    var $t25: int;
    var $t26: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState);
    var $t27: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign;
    var $t28: int;
    var $t29: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics;
    var $t30: int;
    var $t31: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState);
    var $t32: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem;
    var $t33: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var $t34: int;
    var $t35: int;
    var $t36: bool;
    var $t37: int;
    var $t38: int;
    var $t39: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState);
    var $t40: int;
    var $t41: int;
    var $t42: int;
    var $t43: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics;
    var $t44: int;
    var $t45: int;
    var $t46: bool;
    var $t47: $1_string_String;
    var $t48: $1_string_String;
    var $t49: $1_string_String;
    var $t50: bool;
    var $t51: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem;
    var $t52: int;
    var $t53: int;
    var $t54: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem));
    var $t55: int;
    var $t56: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var $t57: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign;
    var $t58: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t59: bool;
    var $t60: int;
    var $t61: int;
    var $t62: int;
    var $t63: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState);
    var $t64: $Mutation (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign));
    var $t65: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t66: bool;
    var $t67: bool;
    var $t68: $Mutation (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign));
    var $t69: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign));
    var $t70: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign));
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: $1_string_String;
    var $t5: Vec ($1_string_String);
    var $t6: Vec ($1_string_String);
    var $t7: Vec ($1_string_String);
    var $t8: int;
    var $t9: $1_string_String;
    var $t10: $1_string_String;
    var $t11: $1_string_String;
    var $t12: $1_string_String;
    var $t13: Vec (int);
    var $t14: int;
    var $t15: Vec (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'$1_string_String'': Vec ($1_string_String);
    var $temp_0'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'': Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var $temp_0'vec'address'': Vec (int);
    var $temp_0'vec'u64'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;
    $t7 := _$t7;
    $t8 := _$t8;
    $t9 := _$t9;
    $t10 := _$t10;
    $t11 := _$t11;
    $t12 := _$t12;
    $t13 := _$t13;
    $t14 := _$t14;
    $t15 := _$t15;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$at(2,12787,12788)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'$1_string_String'($t2);

    // assume WellFormed($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'$1_string_String'($t3);

    // assume WellFormed($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'$1_string_String'($t4);

    // assume WellFormed($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'vec'$1_string_String''($t5);

    // assume WellFormed($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'vec'$1_string_String''($t6);

    // assume WellFormed($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'vec'$1_string_String''($t7);

    // assume WellFormed($t8) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'u64'($t8);

    // assume WellFormed($t9) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'$1_string_String'($t9);

    // assume WellFormed($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'$1_string_String'($t10);

    // assume WellFormed($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'$1_string_String'($t11);

    // assume WellFormed($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'$1_string_String'($t12);

    // assume WellFormed($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'vec'address''($t13);

    // assume WellFormed($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'u64'($t14);

    // assume WellFormed($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume $IsValid'vec'u64''($t15);

    // assume forall $rsc: chain_status::GenesisEndMarker: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: timestamp::CurrentTimeMicroseconds: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: reconfiguration::Configuration: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: royalty::Royalty: ResourceDomain<royalty::Royalty>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: collection::Collection: ResourceDomain<collection::Collection>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_Collection_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_Collection_$memory, $a_0);
    ($IsValid'$4_collection_Collection'($rsc))));

    // assume forall $rsc: collection::FixedSupply: ResourceDomain<collection::FixedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_FixedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_FixedSupply_$memory, $a_0);
    ($IsValid'$4_collection_FixedSupply'($rsc))));

    // assume forall $rsc: collection::UnlimitedSupply: ResourceDomain<collection::UnlimitedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: token::Token: ResourceDomain<token::Token>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_Token_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_Token_$memory, $a_0);
    ($IsValid'$4_token_Token'($rsc))));

    // assume forall $rsc: base::AppState: ResourceDomain<base::AppState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($rsc))));

    // assume forall $rsc: base::Campaign: ResourceDomain<base::Campaign>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($rsc))));

    // assume forall $rsc: base::ProtocolState: ResourceDomain<base::ProtocolState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'($rsc))));

    // assume forall $rsc: base::RewardPower: ResourceDomain<base::RewardPower>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+2673
    // global invariant at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+2673
    // global invariant at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[protocol]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,0):", $t0} $t0 == $t0;

    // trace_local[campaign_id]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,1):", $t1} $t1 == $t1;

    // trace_local[campaign_title]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,2):", $t2} $t2 == $t2;

    // trace_local[description]($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,3):", $t3} $t3 == $t3;

    // trace_local[status]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,4):", $t4} $t4 == $t4;

    // trace_local[quest_links]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,5):", $t5} $t5 == $t5;

    // trace_local[quest_description]($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,6):", $t6} $t6 == $t6;

    // trace_local[quest_titles]($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,7):", $t7} $t7 == $t7;

    // trace_local[total_budget]($t8) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,8):", $t8} $t8 == $t8;

    // trace_local[collection_name]($t9) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,9):", $t9} $t9 == $t9;

    // trace_local[collection_description]($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,10):", $t10} $t10 == $t10;

    // trace_local[collection_uri]($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,11):", $t11} $t11 == $t11;

    // trace_local[token_uri]($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,12):", $t12} $t12 == $t12;

    // trace_local[participants]($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,13):", $t13} $t13 == $t13;

    // trace_local[deadline]($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,14):", $t14} $t14 == $t14;

    // trace_local[prices]($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:400:5+1
    assume {:print "$track_local(70,4,15):", $t15} $t15 == $t15;

    // $t34 := signer::address_of($t0) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:418:29+28
    assume {:print "$at(2,13416,13444)"} true;
    call $t34 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,13416,13444)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // trace_local[protocol_addr]($t34) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:418:13+13
    assume {:print "$track_local(70,4,30):", $t34} $t34 == $t34;

    // $t36 := exists<base::ProtocolState>($t34) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:419:17+6
    assume {:print "$at(2,13463,13469)"} true;
    $t36 := $ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t34);

    // if ($t36) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:419:9+89
    if ($t36) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:419:9+89
L1:

    // goto L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:419:9+89
    assume {:print "$at(2,13455,13544)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:419:9+89
L0:

    // $t37 := 2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:419:72+24
    assume {:print "$at(2,13518,13542)"} true;
    $t37 := 2;
    assume $IsValid'u64'($t37);

    // $t38 := error::not_found($t37) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:419:55+42
    call $t38 := $1_error_not_found($t37);
    if ($abort_flag) {
        assume {:print "$at(2,13501,13543)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // trace_abort($t38) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:419:9+89
    assume {:print "$at(2,13455,13544)"} true;
    assume {:print "$track_abort(70,4):", $t38} $t38 == $t38;

    // $t35 := move($t38) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:419:9+89
    $t35 := $t38;

    // goto L14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:419:9+89
    goto L14;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:421:63+13
    assume {:print "$at(2,13611,13624)"} true;
L2:

    // $t39 := borrow_global<base::ProtocolState>($t34) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:421:30+17
    assume {:print "$at(2,13578,13595)"} true;
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t34)) {
        call $ExecFailureAbort();
    } else {
        $t39 := $Mutation($Global($t34), EmptyVec(), $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t34));
    }
    if ($abort_flag) {
        assume {:print "$at(2,13578,13595)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // trace_local[protocol_state]($t39) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:421:13+14
    $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState' := $Dereference($t39);
    assume {:print "$track_local(70,4,31):", $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'} $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState' == $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState';

    // $t33 := vector::empty<base::QuestListItem>() on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:422:27+30
    assume {:print "$at(2,13654,13684)"} true;
    call $t33 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'();
    if ($abort_flag) {
        assume {:print "$at(2,13654,13684)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // trace_local[quest_items]($t33) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:422:13+11
    assume {:print "$track_local(70,4,33):", $t33} $t33 == $t33;

    // $t40 := vector::length<address>($t13) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:425:27+29
    assume {:print "$at(2,13755,13784)"} true;
    call $t40 := $1_vector_length'address'($t13);
    if ($abort_flag) {
        assume {:print "$at(2,13755,13784)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // $t41 := 0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:427:29+1
    assume {:print "$at(2,13856,13857)"} true;
    $t41 := 0;
    assume $IsValid'u64'($t41);

    // $t42 := 0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:429:35+1
    assume {:print "$at(2,13939,13940)"} true;
    $t42 := 0;
    assume $IsValid'u64'($t42);

    // $t43 := pack base::CampaignMetrics($t40, $t8, $t41, $t8, $t42) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:424:22+242
    assume {:print "$at(2,13710,13952)"} true;
    $t43 := $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics($t40, $t8, $t41, $t8, $t42);

    // trace_local[metric]($t43) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:424:13+6
    assume {:print "$track_local(70,4,29):", $t43} $t43 == $t43;

    // $t44 := 0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:432:17+1
    assume {:print "$at(2,13973,13974)"} true;
    $t44 := 0;
    assume $IsValid'u64'($t44);

    // trace_local[i]($t44) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:432:13+1
    assume {:print "$track_local(70,4,28):", $t44} $t44 == $t44;

    // label L6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume {:print "$at(2,13992,13993)"} true;
L6:

    // $t28 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume {:print "$at(2,13992,13993)"} true;
    havoc $t28;

    // assume WellFormed($t28) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume $IsValid'u64'($t28);

    // $t33 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    havoc $t33;

    // assume WellFormed($t33) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''($t33);

    // $t45 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    havoc $t45;

    // assume WellFormed($t45) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume $IsValid'u64'($t45);

    // $t46 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    havoc $t46;

    // assume WellFormed($t46) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume $IsValid'bool'($t46);

    // $t47 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    havoc $t47;

    // assume WellFormed($t47) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume $IsValid'$1_string_String'($t47);

    // $t48 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    havoc $t48;

    // assume WellFormed($t48) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume $IsValid'$1_string_String'($t48);

    // $t49 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    havoc $t49;

    // assume WellFormed($t49) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume $IsValid'$1_string_String'($t49);

    // $t50 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    havoc $t50;

    // assume WellFormed($t50) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume $IsValid'bool'($t50);

    // $t51 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    havoc $t51;

    // assume WellFormed($t51) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'($t51);

    // $t52 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    havoc $t52;

    // assume WellFormed($t52) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume $IsValid'u64'($t52);

    // $t53 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    havoc $t53;

    // assume WellFormed($t53) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume $IsValid'u64'($t53);

    // $t54 := havoc[mut_all]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    havoc $t54;

    // assume WellFormed($t54) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''($Dereference($t54));

    // trace_local[i]($t28) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume {:print "$info(): enter loop, variable(s) i, quest_items havocked and reassigned"} true;
    assume {:print "$track_local(70,4,28):", $t28} $t28 == $t28;

    // trace_local[quest_items]($t33) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume {:print "$track_local(70,4,33):", $t33} $t33 == $t33;

    // assume Not(AbortFlag()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:16+1
    assume !$abort_flag;

    // $t45 := vector::length<string::String>($t7) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:20+29
    call $t45 := $1_vector_length'$1_string_String'($t7);
    if ($abort_flag) {
        assume {:print "$at(2,13996,14025)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // $t46 := <($t28, $t45) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:18+1
    call $t46 := $Lt($t28, $t45);

    // if ($t46) goto L15 else goto L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:9+422
    if ($t46) { goto L15; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:433:9+422
L4:

    // label L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:435:40+13
    assume {:print "$at(2,14115,14128)"} true;
L5:

    // $t47 := vector::borrow<string::String>($t7, $t28) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:435:25+32
    assume {:print "$at(2,14100,14132)"} true;
    call $t47 := $1_vector_borrow'$1_string_String'($t7, $t28);
    if ($abort_flag) {
        assume {:print "$at(2,14100,14132)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // $t48 := vector::borrow<string::String>($t6, $t28) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:436:31+37
    assume {:print "$at(2,14165,14202)"} true;
    call $t48 := $1_vector_borrow'$1_string_String'($t6, $t28);
    if ($abort_flag) {
        assume {:print "$at(2,14165,14202)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // $t49 := vector::borrow<string::String>($t5, $t28) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:437:24+31
    assume {:print "$at(2,14228,14259)"} true;
    call $t49 := $1_vector_borrow'$1_string_String'($t5, $t28);
    if ($abort_flag) {
        assume {:print "$at(2,14228,14259)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // $t50 := false at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:438:28+5
    assume {:print "$at(2,14289,14294)"} true;
    $t50 := false;
    assume $IsValid'bool'($t50);

    // $t51 := pack base::QuestListItem($t47, $t48, $t49, $t50) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:434:30+250
    assume {:print "$at(2,14059,14309)"} true;
    $t51 := $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem($t47, $t48, $t49, $t50);

    // trace_local[quest_item]($t51) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:434:17+10
    assume {:print "$track_local(70,4,32):", $t51} $t51 == $t51;

    // $t54 := borrow_local($t33) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:440:31+16
    assume {:print "$at(2,14342,14358)"} true;
    $t54 := $Mutation($Local(33), EmptyVec(), $t33);

    // vector::push_back<base::QuestListItem>($t54, $t51) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:440:13+47
    call $t54 := $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'($t54, $t51);
    if ($abort_flag) {
        assume {:print "$at(2,14324,14371)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // write_back[LocalRoot($t33)@]($t54) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:440:13+47
    $t33 := $Dereference($t54);

    // trace_local[quest_items]($t33) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:440:13+47
    assume {:print "$track_local(70,4,33):", $t33} $t33 == $t33;

    // $t52 := 1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:441:21+1
    assume {:print "$at(2,14394,14395)"} true;
    $t52 := 1;
    assume $IsValid'u64'($t52);

    // $t53 := +($t28, $t52) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:441:19+1
    call $t53 := $AddU64($t28, $t52);
    if ($abort_flag) {
        assume {:print "$at(2,14392,14393)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // trace_local[i]($t53) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:441:13+1
    assume {:print "$track_local(70,4,28):", $t53} $t53 == $t53;

    // goto L12 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:441:22+1
    goto L12;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:445:17+11
    assume {:print "$at(2,14463,14474)"} true;
L3:

    // $t55 := timestamp::now_seconds() on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:450:22+24
    assume {:print "$at(2,14612,14636)"} true;
    call $t55 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,14612,14636)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // $t56 := move($t33) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:451:25+11
    assume {:print "$at(2,14663,14674)"} true;
    $t56 := $t33;

    // $t57 := pack base::Campaign($t1, $t34, $t2, $t3, $t56, $t4, $t55, $t43, $t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:444:24+295
    assume {:print "$at(2,14435,14730)"} true;
    $t57 := $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign($t1, $t34, $t2, $t3, $t56, $t4, $t55, $t43, $t14);

    // trace_local[campaign]($t57) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:444:13+8
    assume {:print "$track_local(70,4,27):", $t57} $t57 == $t57;

    // $t58 := get_field<base::ProtocolState>.campaigns_created($t39) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:456:34+33
    assume {:print "$at(2,14768,14801)"} true;
    $t58 := $Dereference($t39)->$campaigns_created;

    // $t59 := vector::contains<base::Campaign>($t58, $t57) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:456:17+62
    call $t59 := $1_vector_contains'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t58, $t57);
    if ($abort_flag) {
        assume {:print "$at(2,14751,14813)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // if ($t59) goto L8 else goto L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:456:9+109
    if ($t59) { goto L8; } else { goto L7; }

    // label L8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:456:9+109
L8:

    // goto L9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:456:9+109
    assume {:print "$at(2,14743,14852)"} true;
    goto L9;

    // label L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:456:9+109
L7:

    // destroy($t39) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:456:9+109
    assume {:print "$at(2,14743,14852)"} true;

    // $t60 := 6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:456:103+13
    $t60 := 6;
    assume $IsValid'u64'($t60);

    // $t61 := error::already_exists($t60) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:456:81+36
    call $t61 := $1_error_already_exists($t60);
    if ($abort_flag) {
        assume {:print "$at(2,14815,14851)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // trace_abort($t61) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:456:9+109
    assume {:print "$at(2,14743,14852)"} true;
    assume {:print "$track_abort(70,4):", $t61} $t61 == $t61;

    // $t35 := move($t61) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:456:9+109
    $t35 := $t61;

    // goto L14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:456:9+109
    goto L14;

    // label L9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:458:53+5
    assume {:print "$at(2,14909,14914)"} true;
L9:

    // $t62 := 0x9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:458:53+5
    assume {:print "$at(2,14909,14914)"} true;
    $t62 := 72038777300602173924386081059034887547389433311546243642183252999150723751218;
    assume $IsValid'address'($t62);

    // $t63 := borrow_global<base::AppState>($t62) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:458:25+17
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t62)) {
        call $ExecFailureAbort();
    } else {
        $t63 := $Mutation($Global($t62), EmptyVec(), $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t62));
    }
    if ($abort_flag) {
        assume {:print "$at(2,14881,14898)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // trace_local[app_state]($t63) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:458:13+9
    $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState' := $Dereference($t63);
    assume {:print "$track_local(70,4,26):", $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'} $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState' == $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState';

    // $t64 := borrow_field<base::AppState>.campaigns_map($t63) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:460:39+28
    assume {:print "$at(2,14958,14986)"} true;
    $t64 := $ChildMutation($t63, 4, $Dereference($t63)->$campaigns_map);

    // $t65 := read_ref($t64) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:460:38+44
    $t65 := $Dereference($t64);

    // $t66 := simple_map::contains_key<string::String, base::Campaign>($t65, $t1) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:460:14+68
    call $t66 := $1_simple_map_contains_key'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t65, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,14933,15001)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // $t67 := !($t66) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:460:13+1
    call $t67 := $Not($t66);

    // if ($t67) goto L11 else goto L10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:460:9+143
    if ($t67) { goto L11; } else { goto L10; }

    // label L11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:460:105+9
L11:

    // $t68 := borrow_field<base::AppState>.campaigns_map($t63) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:460:100+28
    assume {:print "$at(2,15019,15047)"} true;
    $t68 := $ChildMutation($t63, 4, $Dereference($t63)->$campaigns_map);

    // simple_map::add<string::String, base::Campaign>($t68, $t1, $t57) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:460:84+68
    call $t68 := $1_simple_map_add'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t68, $t1, $t57);
    if ($abort_flag) {
        assume {:print "$at(2,15003,15071)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // write_back[Reference($t63).campaigns_map (simple_map::SimpleMap<string::String, base::Campaign>)]($t68) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:460:84+68
    $t63 := $UpdateMutation($t63, $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'_campaigns_map($Dereference($t63), $Dereference($t68)));

    // label L10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:461:32+9
    assume {:print "$at(2,15105,15114)"} true;
L10:

    // $t69 := borrow_field<base::AppState>.campaigns($t63) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:461:27+24
    assume {:print "$at(2,15100,15124)"} true;
    $t69 := $ChildMutation($t63, 6, $Dereference($t63)->$campaigns);

    // vector::push_back<base::Campaign>($t69, $t57) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:461:9+53
    call $t69 := $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t69, $t57);
    if ($abort_flag) {
        assume {:print "$at(2,15082,15135)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // write_back[Reference($t63).campaigns (vector<base::Campaign>)]($t69) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:461:9+53
    $t63 := $UpdateMutation($t63, $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'_campaigns($Dereference($t63), $Dereference($t69)));

    // write_back[base::AppState@]($t63) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:461:9+53
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $GlobalLocationAddress($t63),
        $Dereference($t63));

    // $t70 := borrow_field<base::ProtocolState>.campaigns_created($t39) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:463:27+37
    assume {:print "$at(2,15166,15203)"} true;
    $t70 := $ChildMutation($t39, 1, $Dereference($t39)->$campaigns_created);

    // vector::push_back<base::Campaign>($t70, $t57) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:463:9+66
    call $t70 := $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t70, $t57);
    if ($abort_flag) {
        assume {:print "$at(2,15148,15214)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // write_back[Reference($t39).campaigns_created (vector<base::Campaign>)]($t70) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:463:9+66
    $t39 := $UpdateMutation($t39, $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'_campaigns_created($Dereference($t39), $Dereference($t70)));

    // write_back[base::ProtocolState@]($t39) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:463:9+66
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $GlobalLocationAddress($t39),
        $Dereference($t39));

    // base::initialize_collection($t0, $t9, $t10, $t11) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:465:9+88
    assume {:print "$at(2,15227,15315)"} true;
    call $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_initialize_collection($t0, $t9, $t10, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,15227,15315)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // base::mint_to_many($t0, $t13, $t9, $t12, $t2, $t15) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:466:9+88
    assume {:print "$at(2,15326,15414)"} true;
    call $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_mint_to_many($t0, $t13, $t9, $t12, $t2, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,15326,15414)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // move_to<base::Campaign>($t57, $t0) on_abort goto L14 with $t35 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:467:9+7
    assume {:print "$at(2,15425,15432)"} true;
    if ($ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign_$memory, $t0->$addr, $t57);
    }
    if ($abort_flag) {
        assume {:print "$at(2,15425,15432)"} true;
        $t35 := $abort_code;
        assume {:print "$track_abort(70,4):", $t35} $t35 == $t35;
        goto L14;
    }

    // goto L13 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:467:36+1
    goto L13;

    // label L12 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:461:32+9
    // Loop invariant checking block for the loop started with header: L6
    assume {:print "$at(2,15105,15114)"} true;
L12:

    // stop() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:461:32+9
    assume {:print "$at(2,15105,15114)"} true;
    assume false;
    return;

    // label L13 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:468:5+1
    assume {:print "$at(2,15459,15460)"} true;
L13:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:468:5+1
    assume {:print "$at(2,15459,15460)"} true;
    return;

    // label L14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:468:5+1
L14:

    // abort($t35) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:468:5+1
    assume {:print "$at(2,15459,15460)"} true;
    $abort_code := $t35;
    $abort_flag := true;
    return;

    // label L15 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L15:

    // destroy($t39) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L4 at <internal>:1:1+10
    goto L4;

}

// fun base::create_quest [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+2426
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_create_quest$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_string_String, _$t4: Vec ($1_string_String), _$t5: Vec ($1_string_String), _$t6: Vec ($1_string_String), _$t7: int, _$t8: int, _$t9: int, _$t10: $1_string_String, _$t11: $1_string_String, _$t12: $1_string_String, _$t13: int) returns ()
{
    // declare local variables
    var $t14: $1_string_String;
    var $t15: int;
    var $t16: $1_string_String;
    var $t17: int;
    var $t18: $1_string_String;
    var $t19: $1_string_String;
    var $t20: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var $t21: int;
    var $t22: int;
    var $t23: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics;
    var $t24: int;
    var $t25: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState);
    var $t26: int;
    var $t27: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics;
    var $t28: int;
    var $t29: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState);
    var $t30: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
    var $t31: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem;
    var $t32: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var $t33: int;
    var $t34: int;
    var $t35: bool;
    var $t36: int;
    var $t37: int;
    var $t38: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState);
    var $t39: int;
    var $t40: int;
    var $t41: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics;
    var $t42: int;
    var $t43: int;
    var $t44: bool;
    var $t45: $1_string_String;
    var $t46: $1_string_String;
    var $t47: $1_string_String;
    var $t48: bool;
    var $t49: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem;
    var $t50: int;
    var $t51: int;
    var $t52: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem));
    var $t53: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    var $t54: int;
    var $t55: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
    var $t56: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t57: bool;
    var $t58: int;
    var $t59: int;
    var $t60: int;
    var $t61: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState);
    var $t62: $Mutation (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest));
    var $t63: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t64: bool;
    var $t65: $Mutation (Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest));
    var $t66: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest));
    var $t67: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest));
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: Vec ($1_string_String);
    var $t5: Vec ($1_string_String);
    var $t6: Vec ($1_string_String);
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: $1_string_String;
    var $t11: $1_string_String;
    var $t12: $1_string_String;
    var $t13: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'$1_string_String'': Vec ($1_string_String);
    var $temp_0'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'': Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;
    $t7 := _$t7;
    $t8 := _$t8;
    $t9 := _$t9;
    $t10 := _$t10;
    $t11 := _$t11;
    $t12 := _$t12;
    $t13 := _$t13;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$at(2,10353,10354)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume $IsValid'$1_string_String'($t2);

    // assume WellFormed($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume $IsValid'$1_string_String'($t3);

    // assume WellFormed($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume $IsValid'vec'$1_string_String''($t4);

    // assume WellFormed($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume $IsValid'vec'$1_string_String''($t5);

    // assume WellFormed($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume $IsValid'vec'$1_string_String''($t6);

    // assume WellFormed($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume $IsValid'u64'($t7);

    // assume WellFormed($t8) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume $IsValid'u64'($t8);

    // assume WellFormed($t9) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume $IsValid'u64'($t9);

    // assume WellFormed($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume $IsValid'$1_string_String'($t10);

    // assume WellFormed($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume $IsValid'$1_string_String'($t11);

    // assume WellFormed($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume $IsValid'$1_string_String'($t12);

    // assume WellFormed($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume $IsValid'u64'($t13);

    // assume forall $rsc: chain_status::GenesisEndMarker: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: timestamp::CurrentTimeMicroseconds: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: reconfiguration::Configuration: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: royalty::Royalty: ResourceDomain<royalty::Royalty>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: collection::Collection: ResourceDomain<collection::Collection>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_Collection_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_Collection_$memory, $a_0);
    ($IsValid'$4_collection_Collection'($rsc))));

    // assume forall $rsc: collection::UnlimitedSupply: ResourceDomain<collection::UnlimitedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: base::AppState: ResourceDomain<base::AppState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($rsc))));

    // assume forall $rsc: base::ProtocolState: ResourceDomain<base::ProtocolState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'($rsc))));

    // assume forall $rsc: base::Quest: ResourceDomain<base::Quest>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+2426
    // global invariant at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+2426
    // global invariant at C:\Users\HP 1030 G2/.move\https___github_com_aptos-labs_aptos-core_git_aptos-cli-v2.0.2\aptos-move/framework/aptos-framework\sources\reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[protocol]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,0):", $t0} $t0 == $t0;

    // trace_local[quest_title]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,1):", $t1} $t1 == $t1;

    // trace_local[quest_id]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,2):", $t2} $t2 == $t2;

    // trace_local[description]($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,3):", $t3} $t3 == $t3;

    // trace_local[quest_links]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,4):", $t4} $t4 == $t4;

    // trace_local[quest_description]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,5):", $t5} $t5 == $t5;

    // trace_local[quest_titles]($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,6):", $t6} $t6 == $t6;

    // trace_local[default_reward]($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,7):", $t7} $t7 == $t7;

    // trace_local[budget]($t8) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,8):", $t8} $t8 == $t8;

    // trace_local[participants]($t9) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,9):", $t9} $t9 == $t9;

    // trace_local[collection_name]($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,10):", $t10} $t10 == $t10;

    // trace_local[collection_description]($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,11):", $t11} $t11 == $t11;

    // trace_local[collection_uri]($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,12):", $t12} $t12 == $t12;

    // trace_local[deadline]($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:333:5+1
    assume {:print "$track_local(70,5,13):", $t13} $t13 == $t13;

    // $t33 := signer::address_of($t0) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:349:29+28
    assume {:print "$at(2,10902,10930)"} true;
    call $t33 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,10902,10930)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // trace_local[protocol_addr]($t33) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:349:13+13
    assume {:print "$track_local(70,5,28):", $t33} $t33 == $t33;

    // $t35 := exists<base::ProtocolState>($t33) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:350:17+6
    assume {:print "$at(2,10949,10955)"} true;
    $t35 := $ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t33);

    // if ($t35) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:350:9+89
    if ($t35) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:350:9+89
L1:

    // goto L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:350:9+89
    assume {:print "$at(2,10941,11030)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:350:9+89
L0:

    // $t36 := 2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:350:72+24
    assume {:print "$at(2,11004,11028)"} true;
    $t36 := 2;
    assume $IsValid'u64'($t36);

    // $t37 := error::not_found($t36) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:350:55+42
    call $t37 := $1_error_not_found($t36);
    if ($abort_flag) {
        assume {:print "$at(2,10987,11029)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // trace_abort($t37) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:350:9+89
    assume {:print "$at(2,10941,11030)"} true;
    assume {:print "$track_abort(70,5):", $t37} $t37 == $t37;

    // $t34 := move($t37) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:350:9+89
    $t34 := $t37;

    // goto L14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:350:9+89
    goto L14;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:352:63+13
    assume {:print "$at(2,11097,11110)"} true;
L2:

    // $t38 := borrow_global<base::ProtocolState>($t33) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:352:30+17
    assume {:print "$at(2,11064,11081)"} true;
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t33)) {
        call $ExecFailureAbort();
    } else {
        $t38 := $Mutation($Global($t33), EmptyVec(), $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t33));
    }
    if ($abort_flag) {
        assume {:print "$at(2,11064,11081)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // trace_local[protocol_state]($t38) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:352:13+14
    $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState' := $Dereference($t38);
    assume {:print "$track_local(70,5,29):", $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'} $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState' == $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState';

    // $t32 := vector::empty<base::QuestListItem>() on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:354:27+30
    assume {:print "$at(2,11142,11172)"} true;
    call $t32 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'();
    if ($abort_flag) {
        assume {:print "$at(2,11142,11172)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // trace_local[quest_items]($t32) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:354:13+11
    assume {:print "$track_local(70,5,32):", $t32} $t32 == $t32;

    // $t39 := 0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:358:29+1
    assume {:print "$at(2,11302,11303)"} true;
    $t39 := 0;
    assume $IsValid'u64'($t39);

    // $t40 := 0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:360:35+1
    assume {:print "$at(2,11379,11380)"} true;
    $t40 := 0;
    assume $IsValid'u64'($t40);

    // $t41 := pack base::QuestMetrics($t9, $t8, $t39, $t8, $t40) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:355:22+196
    assume {:print "$at(2,11196,11392)"} true;
    $t41 := $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics($t9, $t8, $t39, $t8, $t40);

    // trace_local[metric]($t41) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:355:13+6
    assume {:print "$track_local(70,5,27):", $t41} $t41 == $t41;

    // $t42 := 0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:363:17+1
    assume {:print "$at(2,11413,11414)"} true;
    $t42 := 0;
    assume $IsValid'u64'($t42);

    // trace_local[i]($t42) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:363:13+1
    assume {:print "$track_local(70,5,26):", $t42} $t42 == $t42;

    // label L6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume {:print "$at(2,11432,11433)"} true;
L6:

    // $t26 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume {:print "$at(2,11432,11433)"} true;
    havoc $t26;

    // assume WellFormed($t26) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume $IsValid'u64'($t26);

    // $t32 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    havoc $t32;

    // assume WellFormed($t32) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''($t32);

    // $t43 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    havoc $t43;

    // assume WellFormed($t43) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume $IsValid'u64'($t43);

    // $t44 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    havoc $t44;

    // assume WellFormed($t44) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume $IsValid'bool'($t44);

    // $t45 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    havoc $t45;

    // assume WellFormed($t45) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume $IsValid'$1_string_String'($t45);

    // $t46 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    havoc $t46;

    // assume WellFormed($t46) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume $IsValid'$1_string_String'($t46);

    // $t47 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    havoc $t47;

    // assume WellFormed($t47) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume $IsValid'$1_string_String'($t47);

    // $t48 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    havoc $t48;

    // assume WellFormed($t48) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume $IsValid'bool'($t48);

    // $t49 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    havoc $t49;

    // assume WellFormed($t49) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'($t49);

    // $t50 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    havoc $t50;

    // assume WellFormed($t50) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume $IsValid'u64'($t50);

    // $t51 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    havoc $t51;

    // assume WellFormed($t51) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume $IsValid'u64'($t51);

    // $t52 := havoc[mut_all]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    havoc $t52;

    // assume WellFormed($t52) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem''($Dereference($t52));

    // trace_local[i]($t26) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume {:print "$info(): enter loop, variable(s) i, quest_items havocked and reassigned"} true;
    assume {:print "$track_local(70,5,26):", $t26} $t26 == $t26;

    // trace_local[quest_items]($t32) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume {:print "$track_local(70,5,32):", $t32} $t32 == $t32;

    // assume Not(AbortFlag()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:16+1
    assume !$abort_flag;

    // $t43 := vector::length<string::String>($t6) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:20+29
    call $t43 := $1_vector_length'$1_string_String'($t6);
    if ($abort_flag) {
        assume {:print "$at(2,11436,11465)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // $t44 := <($t26, $t43) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:18+1
    call $t44 := $Lt($t26, $t43);

    // if ($t44) goto L15 else goto L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:9+422
    if ($t44) { goto L15; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:364:9+422
L4:

    // label L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:366:40+13
    assume {:print "$at(2,11555,11568)"} true;
L5:

    // $t45 := vector::borrow<string::String>($t6, $t26) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:366:25+32
    assume {:print "$at(2,11540,11572)"} true;
    call $t45 := $1_vector_borrow'$1_string_String'($t6, $t26);
    if ($abort_flag) {
        assume {:print "$at(2,11540,11572)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // $t46 := vector::borrow<string::String>($t5, $t26) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:367:31+37
    assume {:print "$at(2,11605,11642)"} true;
    call $t46 := $1_vector_borrow'$1_string_String'($t5, $t26);
    if ($abort_flag) {
        assume {:print "$at(2,11605,11642)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // $t47 := vector::borrow<string::String>($t4, $t26) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:368:24+31
    assume {:print "$at(2,11668,11699)"} true;
    call $t47 := $1_vector_borrow'$1_string_String'($t4, $t26);
    if ($abort_flag) {
        assume {:print "$at(2,11668,11699)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // $t48 := false at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:369:28+5
    assume {:print "$at(2,11729,11734)"} true;
    $t48 := false;
    assume $IsValid'bool'($t48);

    // $t49 := pack base::QuestListItem($t45, $t46, $t47, $t48) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:365:30+250
    assume {:print "$at(2,11499,11749)"} true;
    $t49 := $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem($t45, $t46, $t47, $t48);

    // trace_local[quest_item]($t49) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:365:17+10
    assume {:print "$track_local(70,5,31):", $t49} $t49 == $t49;

    // $t52 := borrow_local($t32) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:371:31+16
    assume {:print "$at(2,11782,11798)"} true;
    $t52 := $Mutation($Local(32), EmptyVec(), $t32);

    // vector::push_back<base::QuestListItem>($t52, $t49) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:371:13+47
    call $t52 := $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestListItem'($t52, $t49);
    if ($abort_flag) {
        assume {:print "$at(2,11764,11811)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // write_back[LocalRoot($t32)@]($t52) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:371:13+47
    $t32 := $Dereference($t52);

    // trace_local[quest_items]($t32) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:371:13+47
    assume {:print "$track_local(70,5,32):", $t32} $t32 == $t32;

    // $t50 := 1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:372:21+1
    assume {:print "$at(2,11834,11835)"} true;
    $t50 := 1;
    assume $IsValid'u64'($t50);

    // $t51 := +($t26, $t50) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:372:19+1
    call $t51 := $AddU64($t26, $t50);
    if ($abort_flag) {
        assume {:print "$at(2,11832,11833)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // trace_local[i]($t51) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:372:13+1
    assume {:print "$track_local(70,5,26):", $t51} $t51 == $t51;

    // goto L12 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:372:22+1
    goto L12;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:376:17+8
    assume {:print "$at(2,11897,11905)"} true;
L3:

    // $t53 := move($t32) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:380:25+11
    assume {:print "$at(2,12022,12033)"} true;
    $t53 := $t32;

    // $t54 := timestamp::now_seconds() on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:382:22+24
    assume {:print "$at(2,12078,12102)"} true;
    call $t54 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,12078,12102)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // $t55 := pack base::Quest($t2, $t33, $t1, $t3, $t53, $t8, $t54, $t7, $t41, $t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:375:21+315
    assume {:print "$at(2,11872,12187)"} true;
    $t55 := $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest($t2, $t33, $t1, $t3, $t53, $t8, $t54, $t7, $t41, $t13);

    // trace_local[quest]($t55) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:375:13+5
    assume {:print "$track_local(70,5,30):", $t55} $t55 == $t55;

    // base::initialize_collection($t0, $t10, $t11, $t12) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:388:9+88
    assume {:print "$at(2,12200,12288)"} true;
    call $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_initialize_collection($t0, $t10, $t11, $t12);
    if ($abort_flag) {
        assume {:print "$at(2,12200,12288)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // $t56 := get_field<base::ProtocolState>.quests_created($t38) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:389:34+30
    assume {:print "$at(2,12324,12354)"} true;
    $t56 := $Dereference($t38)->$quests_created;

    // $t57 := vector::contains<base::Quest>($t56, $t55) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:389:17+56
    call $t57 := $1_vector_contains'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t56, $t55);
    if ($abort_flag) {
        assume {:print "$at(2,12307,12363)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // if ($t57) goto L8 else goto L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:389:9+103
    if ($t57) { goto L8; } else { goto L7; }

    // label L8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:389:9+103
L8:

    // goto L9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:389:9+103
    assume {:print "$at(2,12299,12402)"} true;
    goto L9;

    // label L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:389:9+103
L7:

    // destroy($t38) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:389:9+103
    assume {:print "$at(2,12299,12402)"} true;

    // $t58 := 6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:389:97+13
    $t58 := 6;
    assume $IsValid'u64'($t58);

    // $t59 := error::already_exists($t58) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:389:75+36
    call $t59 := $1_error_already_exists($t58);
    if ($abort_flag) {
        assume {:print "$at(2,12365,12401)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // trace_abort($t59) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:389:9+103
    assume {:print "$at(2,12299,12402)"} true;
    assume {:print "$track_abort(70,5):", $t59} $t59 == $t59;

    // $t34 := move($t59) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:389:9+103
    $t34 := $t59;

    // goto L14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:389:9+103
    goto L14;

    // label L9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:391:53+5
    assume {:print "$at(2,12459,12464)"} true;
L9:

    // $t60 := 0x9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:391:53+5
    assume {:print "$at(2,12459,12464)"} true;
    $t60 := 72038777300602173924386081059034887547389433311546243642183252999150723751218;
    assume $IsValid'address'($t60);

    // $t61 := borrow_global<base::AppState>($t60) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:391:25+17
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t60)) {
        call $ExecFailureAbort();
    } else {
        $t61 := $Mutation($Global($t60), EmptyVec(), $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t60));
    }
    if ($abort_flag) {
        assume {:print "$at(2,12431,12448)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // trace_local[app_state]($t61) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:391:13+9
    $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState' := $Dereference($t61);
    assume {:print "$track_local(70,5,25):", $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'} $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState' == $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState';

    // $t62 := borrow_field<base::AppState>.quests_map($t61) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:393:38+25
    assume {:print "$at(2,12507,12532)"} true;
    $t62 := $ChildMutation($t61, 3, $Dereference($t61)->$quests_map);

    // $t63 := read_ref($t62) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:393:37+38
    $t63 := $Dereference($t62);

    // $t64 := simple_map::contains_key<string::String, base::Quest>($t63, $t2) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:393:13+62
    call $t64 := $1_simple_map_contains_key'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t63, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,12482,12544)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // if ($t64) goto L11 else goto L10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:393:9+127
    if ($t64) { goto L11; } else { goto L10; }

    // label L11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:393:98+9
L11:

    // $t65 := borrow_field<base::AppState>.quests_map($t61) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:393:93+25
    assume {:print "$at(2,12562,12587)"} true;
    $t65 := $ChildMutation($t61, 3, $Dereference($t61)->$quests_map);

    // simple_map::add<string::String, base::Quest>($t65, $t2, $t55) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:393:77+59
    call $t65 := $1_simple_map_add'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t65, $t2, $t55);
    if ($abort_flag) {
        assume {:print "$at(2,12546,12605)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // write_back[Reference($t61).quests_map (simple_map::SimpleMap<string::String, base::Quest>)]($t65) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:393:77+59
    $t61 := $UpdateMutation($t61, $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'_quests_map($Dereference($t61), $Dereference($t65)));

    // label L10 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:394:32+9
    assume {:print "$at(2,12639,12648)"} true;
L10:

    // $t66 := borrow_field<base::AppState>.quests($t61) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:394:27+21
    assume {:print "$at(2,12634,12655)"} true;
    $t66 := $ChildMutation($t61, 5, $Dereference($t61)->$quests);

    // vector::push_back<base::Quest>($t66, $t55) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:394:9+47
    call $t66 := $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t66, $t55);
    if ($abort_flag) {
        assume {:print "$at(2,12616,12663)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // write_back[Reference($t61).quests (vector<base::Quest>)]($t66) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:394:9+47
    $t61 := $UpdateMutation($t61, $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'_quests($Dereference($t61), $Dereference($t66)));

    // write_back[base::AppState@]($t61) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:394:9+47
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $GlobalLocationAddress($t61),
        $Dereference($t61));

    // $t67 := borrow_field<base::ProtocolState>.quests_created($t38) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:396:27+34
    assume {:print "$at(2,12694,12728)"} true;
    $t67 := $ChildMutation($t38, 0, $Dereference($t38)->$quests_created);

    // vector::push_back<base::Quest>($t67, $t55) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:396:9+60
    call $t67 := $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t67, $t55);
    if ($abort_flag) {
        assume {:print "$at(2,12676,12736)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // write_back[Reference($t38).quests_created (vector<base::Quest>)]($t67) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:396:9+60
    $t38 := $UpdateMutation($t38, $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'_quests_created($Dereference($t38), $Dereference($t67)));

    // write_back[base::ProtocolState@]($t38) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:396:9+60
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $GlobalLocationAddress($t38),
        $Dereference($t38));

    // move_to<base::Quest>($t55, $t0) on_abort goto L14 with $t34 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:397:9+7
    assume {:print "$at(2,12747,12754)"} true;
    if ($ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest_$memory, $t0->$addr, $t55);
    }
    if ($abort_flag) {
        assume {:print "$at(2,12747,12754)"} true;
        $t34 := $abort_code;
        assume {:print "$track_abort(70,5):", $t34} $t34 == $t34;
        goto L14;
    }

    // goto L13 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:397:33+1
    goto L13;

    // label L12 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:394:32+9
    // Loop invariant checking block for the loop started with header: L6
    assume {:print "$at(2,12639,12648)"} true;
L12:

    // stop() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:394:32+9
    assume {:print "$at(2,12639,12648)"} true;
    assume false;
    return;

    // label L13 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:398:5+1
    assume {:print "$at(2,12778,12779)"} true;
L13:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:398:5+1
    assume {:print "$at(2,12778,12779)"} true;
    return;

    // label L14 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:398:5+1
L14:

    // abort($t34) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:398:5+1
    assume {:print "$at(2,12778,12779)"} true;
    $abort_code := $t34;
    $abort_flag := true;
    return;

    // label L15 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L15:

    // destroy($t38) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L4 at <internal>:1:1+10
    goto L4;

}

// fun base::getCampaignMetrics [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:538:5+318
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_getCampaignMetrics$verify(_$t0: $1_string_String) returns ($ret0: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics)
{
    // declare local variables
    var $t1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $t2: $1_string_String;
    var $t3: int;
    var $t4: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $t5: int;
    var $t6: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t11: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign;
    var $t12: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:538:5+1
    assume {:print "$at(2,18845,18846)"} true;
    assume $IsValid'$1_string_String'($t0);

    // assume forall $rsc: base::AppState: ResourceDomain<base::AppState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:538:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($rsc))));

    // trace_local[campaign_id]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:538:5+1
    assume {:print "$track_local(70,6,0):", $t0} $t0 == $t0;

    // $t3 := 0x9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:539:49+5
    assume {:print "$at(2,18982,18987)"} true;
    $t3 := 72038777300602173924386081059034887547389433311546243642183252999150723751218;
    assume $IsValid'address'($t3);

    // $t4 := get_global<base::AppState>($t3) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:539:25+13
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(2,18958,18971)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_local[app_state]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:539:13+9
    assume {:print "$track_local(70,6,1):", $t4} $t4 == $t4;

    // trace_local[campaign_id#415]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:650:61+11
    assume {:print "$at(2,23448,23459)"} true;
    assume {:print "$track_local(70,6,2):", $t0} $t0 == $t0;

    // $t6 := get_field<base::AppState>.campaigns_map($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:651:42+24
    assume {:print "$at(2,23514,23538)"} true;
    $t6 := $t4->$campaigns_map;

    // $t7 := simple_map::contains_key<string::String, base::Campaign>($t6, $t0) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:651:17+63
    call $t7 := $1_simple_map_contains_key'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t6, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,23489,23552)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // if ($t7) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:651:9+111
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:651:9+111
L1:

    // goto L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:651:9+111
    assume {:print "$at(2,23481,23592)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:651:9+111
L0:

    // $t8 := 4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:651:99+19
    assume {:print "$at(2,23571,23590)"} true;
    $t8 := 4;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:651:82+37
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(2,23554,23591)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_abort($t9) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:651:9+111
    assume {:print "$at(2,23481,23592)"} true;
    assume {:print "$track_abort(70,6):", $t9} $t9 == $t9;

    // $t5 := move($t9) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:651:9+111
    $t5 := $t9;

    // goto L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:651:9+111
    goto L4;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:541:44+9
    assume {:print "$at(2,19092,19101)"} true;
L2:

    // $t10 := get_field<base::AppState>.campaigns_map($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:541:43+24
    assume {:print "$at(2,19091,19115)"} true;
    $t10 := $t4->$campaigns_map;

    // $t11 := simple_map::borrow<string::String, base::Campaign>($t10, $t0) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:541:24+58
    call $t11 := $1_simple_map_borrow'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t10, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,19072,19130)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t12 := get_field<base::Campaign>.metric($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:542:9+15
    assume {:print "$at(2,19141,19156)"} true;
    $t12 := $t11->$metric;

    // trace_return[0]($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:542:9+15
    assume {:print "$track_return(70,6,0):", $t12} $t12 == $t12;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:543:5+1
    assume {:print "$at(2,19162,19163)"} true;
L3:

    // return $t12 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:543:5+1
    assume {:print "$at(2,19162,19163)"} true;
    $ret0 := $t12;
    return;

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:543:5+1
L4:

    // abort($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:543:5+1
    assume {:print "$at(2,19162,19163)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun base::getProtocolMetrics [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:554:5+421
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_getProtocolMetrics$verify(_$t0: int) returns ($ret0: int, $ret1: int, $ret2: int)
{
    // declare local variables
    var $t1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;
    var $t7: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t8: int;
    var $t9: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t10: int;
    var $t11: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var $t12: int;
    var $t0: int;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:554:5+1
    assume {:print "$at(2,19496,19497)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: base::ProtocolState: ResourceDomain<base::ProtocolState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:554:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'($rsc))));

    // trace_local[protocol]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:554:5+1
    assume {:print "$track_local(70,7,0):", $t0} $t0 == $t0;

    // $t2 := exists<base::ProtocolState>($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:17+6
    assume {:print "$at(2,23099,23105)"} true;
    $t2 := $ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t0);

    // if ($t2) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
L1:

    // goto L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    assume {:print "$at(2,23091,23175)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:67+24
L0:

    // $t3 := 2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:67+24
    assume {:print "$at(2,23149,23173)"} true;
    $t3 := 2;
    assume $IsValid'u64'($t3);

    // $t4 := error::not_found($t3) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:50+42
    call $t4 := $1_error_not_found($t3);
    if ($abort_flag) {
        assume {:print "$at(2,23132,23174)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,7):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_abort($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    assume {:print "$at(2,23091,23175)"} true;
    assume {:print "$track_abort(70,7):", $t4} $t4 == $t4;

    // $t5 := move($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    $t5 := $t4;

    // goto L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    goto L4;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:556:59+8
    assume {:print "$at(2,19693,19701)"} true;
L2:

    // $t6 := get_global<base::ProtocolState>($t0) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:556:30+13
    assume {:print "$at(2,19664,19677)"} true;
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,19664,19677)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,7):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_local[protocol_state]($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:556:13+14
    assume {:print "$track_local(70,7,1):", $t6} $t6 == $t6;

    // $t7 := get_field<base::ProtocolState>.quests_created($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:558:28+30
    assume {:print "$at(2,19743,19773)"} true;
    $t7 := $t6->$quests_created;

    // $t8 := vector::length<base::Quest>($t7) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:558:13+46
    call $t8 := $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t7);
    if ($abort_flag) {
        assume {:print "$at(2,19728,19774)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,7):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t9 := get_field<base::ProtocolState>.campaigns_created($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:559:28+33
    assume {:print "$at(2,19804,19837)"} true;
    $t9 := $t6->$campaigns_created;

    // $t10 := vector::length<base::Campaign>($t9) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:559:13+49
    call $t10 := $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t9);
    if ($abort_flag) {
        assume {:print "$at(2,19789,19838)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,7):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t11 := get_field<base::ProtocolState>.rewards_minted($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:560:28+30
    assume {:print "$at(2,19868,19898)"} true;
    $t11 := $t6->$rewards_minted;

    // $t12 := vector::length<base::RewardItem>($t11) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:560:13+46
    call $t12 := $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'($t11);
    if ($abort_flag) {
        assume {:print "$at(2,19853,19899)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,7):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_return[0]($t8) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:557:9+197
    assume {:print "$at(2,19713,19910)"} true;
    assume {:print "$track_return(70,7,0):", $t8} $t8 == $t8;

    // trace_return[1]($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:557:9+197
    assume {:print "$track_return(70,7,1):", $t10} $t10 == $t10;

    // trace_return[2]($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:557:9+197
    assume {:print "$track_return(70,7,2):", $t12} $t12 == $t12;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:562:5+1
    assume {:print "$at(2,19916,19917)"} true;
L3:

    // return ($t8, $t10, $t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:562:5+1
    assume {:print "$at(2,19916,19917)"} true;
    $ret0 := $t8;
    $ret1 := $t10;
    $ret2 := $t12;
    return;

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:562:5+1
L4:

    // abort($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:562:5+1
    assume {:print "$at(2,19916,19917)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun base::getQuestMetrics [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:546:5+291
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_getQuestMetrics$verify(_$t0: $1_string_String) returns ($ret0: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics)
{
    // declare local variables
    var $t1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $t2: $1_string_String;
    var $t3: int;
    var $t4: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $t5: int;
    var $t6: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t11: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
    var $t12: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:546:5+1
    assume {:print "$at(2,19184,19185)"} true;
    assume $IsValid'$1_string_String'($t0);

    // assume forall $rsc: base::AppState: ResourceDomain<base::AppState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:546:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($rsc))));

    // trace_local[quest_id]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:546:5+1
    assume {:print "$track_local(70,8,0):", $t0} $t0 == $t0;

    // $t3 := 0x9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:547:49+5
    assume {:print "$at(2,19312,19317)"} true;
    $t3 := 72038777300602173924386081059034887547389433311546243642183252999150723751218;
    assume $IsValid'address'($t3);

    // $t4 := get_global<base::AppState>($t3) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:547:25+13
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(2,19288,19301)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,8):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_local[app_state]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:547:13+9
    assume {:print "$track_local(70,8,1):", $t4} $t4 == $t4;

    // trace_local[quest_id#418]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:646:58+8
    assume {:print "$at(2,23244,23252)"} true;
    assume {:print "$track_local(70,8,2):", $t0} $t0 == $t0;

    // $t6 := get_field<base::AppState>.quests_map($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:647:42+21
    assume {:print "$at(2,23307,23328)"} true;
    $t6 := $t4->$quests_map;

    // $t7 := simple_map::contains_key<string::String, base::Quest>($t6, $t0) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:647:17+57
    call $t7 := $1_simple_map_contains_key'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t6, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,23282,23339)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,8):", $t5} $t5 == $t5;
        goto L4;
    }

    // if ($t7) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:647:9+102
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:647:9+102
L1:

    // goto L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:647:9+102
    assume {:print "$at(2,23274,23376)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:647:9+102
L0:

    // $t8 := 3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:647:93+16
    assume {:print "$at(2,23358,23374)"} true;
    $t8 := 3;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:647:76+34
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(2,23341,23375)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,8):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_abort($t9) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:647:9+102
    assume {:print "$at(2,23274,23376)"} true;
    assume {:print "$track_abort(70,8):", $t9} $t9 == $t9;

    // $t5 := move($t9) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:647:9+102
    $t5 := $t9;

    // goto L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:647:9+102
    goto L4;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:549:41+9
    assume {:print "$at(2,19413,19422)"} true;
L2:

    // $t10 := get_field<base::AppState>.quests_map($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:549:40+21
    assume {:print "$at(2,19412,19433)"} true;
    $t10 := $t4->$quests_map;

    // $t11 := simple_map::borrow<string::String, base::Quest>($t10, $t0) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:549:21+52
    call $t11 := $1_simple_map_borrow'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t10, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,19393,19445)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,8):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t12 := get_field<base::Quest>.metric($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:550:9+12
    assume {:print "$at(2,19456,19468)"} true;
    $t12 := $t11->$metric;

    // trace_return[0]($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:550:9+12
    assume {:print "$track_return(70,8,0):", $t12} $t12 == $t12;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:551:5+1
    assume {:print "$at(2,19474,19475)"} true;
L3:

    // return $t12 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:551:5+1
    assume {:print "$at(2,19474,19475)"} true;
    $ret0 := $t12;
    return;

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:551:5+1
L4:

    // abort($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:551:5+1
    assume {:print "$at(2,19474,19475)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun base::getRewardItems [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:577:5+554
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_getRewardItems$verify(_$t0: int) returns ($ret0: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem))
{
    // declare local variables
    var $t1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $t2: int;
    var $t3: int;
    var $t4: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem;
    var $t5: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var $t6: int;
    var $t7: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $t8: int;
    var $t9: int;
    var $t10: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var $t11: int;
    var $t12: bool;
    var $t13: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var $t14: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem;
    var $t15: int;
    var $t16: bool;
    var $t17: int;
    var $t18: int;
    var $t19: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem));
    var $t20: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var $t0: int;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $temp_0'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'': Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:577:5+1
    assume {:print "$at(2,20403,20404)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: base::AppState: ResourceDomain<base::AppState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:577:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($rsc))));

    // trace_local[user]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:577:5+1
    assume {:print "$track_local(70,9,0):", $t0} $t0 == $t0;

    // $t6 := 0x9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:578:49+5
    assume {:print "$at(2,20533,20538)"} true;
    $t6 := 72038777300602173924386081059034887547389433311546243642183252999150723751218;
    assume $IsValid'address'($t6);

    // $t7 := get_global<base::AppState>($t6) on_abort goto L9 with $t8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:578:25+13
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t6);
    }
    if ($abort_flag) {
        assume {:print "$at(2,20509,20522)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(70,9):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_local[app_state]($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:578:13+9
    assume {:print "$track_local(70,9,1):", $t7} $t7 == $t7;

    // $t5 := vector::empty<base::RewardItem>() on_abort goto L9 with $t8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:579:28+27
    assume {:print "$at(2,20569,20596)"} true;
    call $t5 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'();
    if ($abort_flag) {
        assume {:print "$at(2,20569,20596)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(70,9):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_local[user_rewards]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:579:13+12
    assume {:print "$track_local(70,9,5):", $t5} $t5 == $t5;

    // $t9 := 0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:580:17+1
    assume {:print "$at(2,20615,20616)"} true;
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // trace_local[i]($t9) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:580:13+1
    assume {:print "$track_local(70,9,2):", $t9} $t9 == $t9;

    // $t10 := get_field<base::AppState>.rewards($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:581:34+18
    assume {:print "$at(2,20652,20670)"} true;
    $t10 := $t7->$rewards;

    // $t11 := vector::length<base::RewardItem>($t10) on_abort goto L9 with $t8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:581:19+34
    call $t11 := $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'($t10);
    if ($abort_flag) {
        assume {:print "$at(2,20637,20671)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(70,9):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_local[len]($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:581:13+3
    assume {:print "$track_local(70,9,3):", $t11} $t11 == $t11;

    // label L6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume {:print "$at(2,20689,20690)"} true;
L6:

    // $t2 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume {:print "$at(2,20689,20690)"} true;
    havoc $t2;

    // assume WellFormed($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume $IsValid'u64'($t2);

    // $t5 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    havoc $t5;

    // assume WellFormed($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''($t5);

    // $t12 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    havoc $t12;

    // assume WellFormed($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume $IsValid'bool'($t12);

    // $t13 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    havoc $t13;

    // assume WellFormed($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''($t13);

    // $t14 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    havoc $t14;

    // assume WellFormed($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'($t14);

    // $t15 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    havoc $t15;

    // assume WellFormed($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume $IsValid'address'($t15);

    // $t16 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    havoc $t16;

    // assume WellFormed($t16) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume $IsValid'bool'($t16);

    // $t17 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    havoc $t17;

    // assume WellFormed($t17) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume $IsValid'u64'($t17);

    // $t18 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    havoc $t18;

    // assume WellFormed($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume $IsValid'u64'($t18);

    // $t19 := havoc[mut_all]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    havoc $t19;

    // assume WellFormed($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem''($Dereference($t19));

    // trace_local[i]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume {:print "$info(): enter loop, variable(s) i, user_rewards havocked and reassigned"} true;
    assume {:print "$track_local(70,9,2):", $t2} $t2 == $t2;

    // trace_local[user_rewards]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume {:print "$track_local(70,9,5):", $t5} $t5 == $t5;

    // assume Not(AbortFlag()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:16+1
    assume !$abort_flag;

    // $t12 := <($t2, $t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:18+1
    call $t12 := $Lt($t2, $t11);

    // if ($t12) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:9+245
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:582:9+245
L1:

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:583:42+9
    assume {:print "$at(2,20742,20751)"} true;
L2:

    // $t13 := get_field<base::AppState>.rewards($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:583:41+18
    assume {:print "$at(2,20741,20759)"} true;
    $t13 := $t7->$rewards;

    // $t14 := vector::borrow<base::RewardItem>($t13, $t2) on_abort goto L9 with $t8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:583:26+37
    call $t14 := $1_vector_borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'($t13, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,20726,20763)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(70,9):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_local[reward]($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:583:17+6
    assume {:print "$track_local(70,9,4):", $t14} $t14 == $t14;

    // $t15 := get_field<base::RewardItem>.user_address($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:584:17+19
    assume {:print "$at(2,20782,20801)"} true;
    $t15 := $t14->$user_address;

    // $t16 := ==($t15, $t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:584:37+2
    $t16 := $IsEqual'address'($t15, $t0);

    // if ($t16) goto L4 else goto L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:584:13+113
    if ($t16) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:585:35+17
    assume {:print "$at(2,20848,20865)"} true;
L4:

    // $t19 := borrow_local($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:585:35+17
    assume {:print "$at(2,20848,20865)"} true;
    $t19 := $Mutation($Local(5), EmptyVec(), $t5);

    // vector::push_back<base::RewardItem>($t19, $t14) on_abort goto L9 with $t8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:585:17+45
    call $t19 := $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'($t19, $t14);
    if ($abort_flag) {
        assume {:print "$at(2,20830,20875)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(70,9):", $t8} $t8 == $t8;
        goto L9;
    }

    // write_back[LocalRoot($t5)@]($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:585:17+45
    $t5 := $Dereference($t19);

    // trace_local[user_rewards]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:585:17+45
    assume {:print "$track_local(70,9,5):", $t5} $t5 == $t5;

    // goto L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:585:62+1
    goto L5;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:584:13+113
    assume {:print "$at(2,20778,20891)"} true;
L3:

    // label L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:587:17+1
    assume {:print "$at(2,20910,20911)"} true;
L5:

    // $t17 := 1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:587:21+1
    assume {:print "$at(2,20914,20915)"} true;
    $t17 := 1;
    assume $IsValid'u64'($t17);

    // $t18 := +($t2, $t17) on_abort goto L9 with $t8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:587:19+1
    call $t18 := $AddU64($t2, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,20912,20913)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(70,9):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_local[i]($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:587:13+1
    assume {:print "$track_local(70,9,2):", $t18} $t18 == $t18;

    // goto L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:587:22+1
    goto L7;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:589:9+12
    assume {:print "$at(2,20938,20950)"} true;
L0:

    // $t20 := move($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:589:9+12
    assume {:print "$at(2,20938,20950)"} true;
    $t20 := $t5;

    // trace_return[0]($t20) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:589:9+12
    assume {:print "$track_return(70,9,0):", $t20} $t20 == $t20;

    // goto L8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:589:9+12
    goto L8;

    // label L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:589:9+12
    // Loop invariant checking block for the loop started with header: L6
L7:

    // stop() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:589:9+12
    assume {:print "$at(2,20938,20950)"} true;
    assume false;
    return;

    // label L8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:590:5+1
    assume {:print "$at(2,20956,20957)"} true;
L8:

    // return $t20 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:590:5+1
    assume {:print "$at(2,20956,20957)"} true;
    $ret0 := $t20;
    return;

    // label L9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:590:5+1
L9:

    // abort($t8) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:590:5+1
    assume {:print "$at(2,20956,20957)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun base::getUserMetric [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:565:5+444
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_getUserMetric$verify(_$t0: int) returns ($ret0: int, $ret1: int, $ret2: int, $ret3: int)
{
    // declare local variables
    var $t1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState;
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState;
    var $t7: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t8: int;
    var $t9: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t10: int;
    var $t11: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t12: int;
    var $t13: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t14: int;
    var $t0: int;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:565:5+1
    assume {:print "$at(2,19938,19939)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: base::UserState: ResourceDomain<base::UserState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:565:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'($rsc))));

    // trace_local[user]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:565:5+1
    assume {:print "$track_local(70,10,0):", $t0} $t0 == $t0;

    // $t2 := exists<base::UserState>($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:639:17+6
    assume {:print "$at(2,22943,22949)"} true;
    $t2 := $ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $t0);

    // if ($t2) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:639:9+72
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:639:9+72
L1:

    // goto L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:639:9+72
    assume {:print "$at(2,22935,23007)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:639:59+20
L0:

    // $t3 := 1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:639:59+20
    assume {:print "$at(2,22985,23005)"} true;
    $t3 := 1;
    assume $IsValid'u64'($t3);

    // $t4 := error::not_found($t3) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:639:42+38
    call $t4 := $1_error_not_found($t3);
    if ($abort_flag) {
        assume {:print "$at(2,22968,23006)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,10):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_abort($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:639:9+72
    assume {:print "$at(2,22935,23007)"} true;
    assume {:print "$track_abort(70,10):", $t4} $t4 == $t4;

    // $t5 := move($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:639:9+72
    $t5 := $t4;

    // goto L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:639:9+72
    goto L4;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:567:51+4
    assume {:print "$at(2,20111,20115)"} true;
L2:

    // $t6 := get_global<base::UserState>($t0) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:567:26+13
    assume {:print "$at(2,20086,20099)"} true;
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,20086,20099)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,10):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_local[user_state]($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:567:13+10
    assume {:print "$track_local(70,10,1):", $t6} $t6 == $t6;

    // $t7 := get_field<base::UserState>.quests_completed($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:569:28+28
    assume {:print "$at(2,20157,20185)"} true;
    $t7 := $t6->$quests_completed;

    // $t8 := vector::length<base::Quest>($t7) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:569:13+44
    call $t8 := $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t7);
    if ($abort_flag) {
        assume {:print "$at(2,20142,20186)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,10):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t9 := get_field<base::UserState>.current_quests($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:570:28+26
    assume {:print "$at(2,20216,20242)"} true;
    $t9 := $t6->$current_quests;

    // $t10 := vector::length<base::Quest>($t9) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:570:13+42
    call $t10 := $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t9);
    if ($abort_flag) {
        assume {:print "$at(2,20201,20243)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,10):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t11 := get_field<base::UserState>.current_campaigns($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:571:28+29
    assume {:print "$at(2,20273,20302)"} true;
    $t11 := $t6->$current_campaigns;

    // $t12 := vector::length<base::Campaign>($t11) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:571:13+45
    call $t12 := $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t11);
    if ($abort_flag) {
        assume {:print "$at(2,20258,20303)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,10):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t13 := get_field<base::UserState>.campaign_completed($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:572:28+30
    assume {:print "$at(2,20333,20363)"} true;
    $t13 := $t6->$campaign_completed;

    // $t14 := vector::length<base::Campaign>($t13) on_abort goto L4 with $t5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:572:13+46
    call $t14 := $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t13);
    if ($abort_flag) {
        assume {:print "$at(2,20318,20364)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(70,10):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_return[0]($t8) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:568:9+248
    assume {:print "$at(2,20127,20375)"} true;
    assume {:print "$track_return(70,10,0):", $t8} $t8 == $t8;

    // trace_return[1]($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:568:9+248
    assume {:print "$track_return(70,10,1):", $t10} $t10 == $t10;

    // trace_return[2]($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:568:9+248
    assume {:print "$track_return(70,10,2):", $t12} $t12 == $t12;

    // trace_return[3]($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:568:9+248
    assume {:print "$track_return(70,10,3):", $t14} $t14 == $t14;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:574:5+1
    assume {:print "$at(2,20381,20382)"} true;
L3:

    // return ($t8, $t10, $t12, $t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:574:5+1
    assume {:print "$at(2,20381,20382)"} true;
    $ret0 := $t8;
    $ret1 := $t10;
    $ret2 := $t12;
    $ret3 := $t14;
    return;

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:574:5+1
L4:

    // abort($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:574:5+1
    assume {:print "$at(2,20381,20382)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun base::get_metric_of_campaigns_by_protocol [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:593:5+807
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_get_metric_of_campaigns_by_protocol$verify(_$t0: int) returns ($ret0: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics))
{
    // declare local variables
    var $t1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $t2: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign;
    var $t3: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign;
    var $t4: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var $t5: int;
    var $t6: int;
    var $t7: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;
    var $t13: int;
    var $t14: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $t15: int;
    var $t16: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t17: int;
    var $t18: bool;
    var $t19: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t20: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign;
    var $t21: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t22: $1_string_String;
    var $t23: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign;
    var $t24: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics;
    var $t25: int;
    var $t26: int;
    var $t27: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics));
    var $t28: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    var $t0: int;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $temp_0'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'': Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:593:5+1
    assume {:print "$at(2,20978,20979)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: base::AppState: ResourceDomain<base::AppState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:593:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($rsc))));

    // assume forall $rsc: base::ProtocolState: ResourceDomain<base::ProtocolState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:593:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'($rsc))));

    // trace_local[protocol]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:593:5+1
    assume {:print "$track_local(70,11,0):", $t0} $t0 == $t0;

    // $t8 := exists<base::ProtocolState>($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:17+6
    assume {:print "$at(2,23099,23105)"} true;
    $t8 := $ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t0);

    // if ($t8) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
L1:

    // goto L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    assume {:print "$at(2,23091,23175)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:67+24
L0:

    // $t9 := 2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:67+24
    assume {:print "$at(2,23149,23173)"} true;
    $t9 := 2;
    assume $IsValid'u64'($t9);

    // $t10 := error::not_found($t9) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:50+42
    call $t10 := $1_error_not_found($t9);
    if ($abort_flag) {
        assume {:print "$at(2,23132,23174)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_abort($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    assume {:print "$at(2,23091,23175)"} true;
    assume {:print "$track_abort(70,11):", $t10} $t10 == $t10;

    // $t11 := move($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    $t11 := $t10;

    // goto L9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    goto L9;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:595:59+8
    assume {:print "$at(2,21210,21218)"} true;
L2:

    // $t12 := get_global<base::ProtocolState>($t0) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:595:30+13
    assume {:print "$at(2,21181,21194)"} true;
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,21181,21194)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[protocol_state]($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:595:13+14
    assume {:print "$track_local(70,11,7):", $t12} $t12 == $t12;

    // $t13 := 0x9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:596:49+5
    assume {:print "$at(2,21270,21275)"} true;
    $t13 := 72038777300602173924386081059034887547389433311546243642183252999150723751218;
    assume $IsValid'address'($t13);

    // $t14 := get_global<base::AppState>($t13) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:596:25+13
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(2,21246,21259)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[app_state]($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:596:13+9
    assume {:print "$track_local(70,11,1):", $t14} $t14 == $t14;

    // $t4 := vector::empty<base::CampaignMetrics>() on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:597:32+32
    assume {:print "$at(2,21310,21342)"} true;
    call $t4 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'();
    if ($abort_flag) {
        assume {:print "$at(2,21310,21342)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[campaign_metrics]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:597:13+16
    assume {:print "$track_local(70,11,4):", $t4} $t4 == $t4;

    // $t15 := 0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:599:17+1
    assume {:print "$at(2,21363,21364)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // trace_local[i]($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:599:13+1
    assume {:print "$track_local(70,11,5):", $t15} $t15 == $t15;

    // $t16 := get_field<base::ProtocolState>.campaigns_created($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:600:34+33
    assume {:print "$at(2,21400,21433)"} true;
    $t16 := $t12->$campaigns_created;

    // $t17 := vector::length<base::Campaign>($t16) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:600:19+49
    call $t17 := $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t16);
    if ($abort_flag) {
        assume {:print "$at(2,21385,21434)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[len]($t17) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:600:13+3
    assume {:print "$track_local(70,11,6):", $t17} $t17 == $t17;

    // label L6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume {:print "$at(2,21452,21453)"} true;
L6:

    // $t4 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume {:print "$at(2,21452,21453)"} true;
    havoc $t4;

    // assume WellFormed($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''($t4);

    // $t5 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    havoc $t5;

    // assume WellFormed($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume $IsValid'u64'($t5);

    // $t18 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    havoc $t18;

    // assume WellFormed($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume $IsValid'bool'($t18);

    // $t19 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    havoc $t19;

    // assume WellFormed($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''($t19);

    // $t20 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    havoc $t20;

    // assume WellFormed($t20) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t20);

    // $t21 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    havoc $t21;

    // assume WellFormed($t21) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume $IsValid'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign''($t21);

    // $t22 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    havoc $t22;

    // assume WellFormed($t22) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume $IsValid'$1_string_String'($t22);

    // $t23 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    havoc $t23;

    // assume WellFormed($t23) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t23);

    // $t24 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    havoc $t24;

    // assume WellFormed($t24) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'($t24);

    // $t25 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    havoc $t25;

    // assume WellFormed($t25) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume $IsValid'u64'($t25);

    // $t26 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    havoc $t26;

    // assume WellFormed($t26) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume $IsValid'u64'($t26);

    // $t27 := havoc[mut_all]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    havoc $t27;

    // assume WellFormed($t27) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics''($Dereference($t27));

    // trace_local[campaign_metrics]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume {:print "$info(): enter loop, variable(s) campaign_metrics, i havocked and reassigned"} true;
    assume {:print "$track_local(70,11,4):", $t4} $t4 == $t4;

    // trace_local[i]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume {:print "$track_local(70,11,5):", $t5} $t5 == $t5;

    // assume Not(AbortFlag()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:16+1
    assume !$abort_flag;

    // $t18 := <($t5, $t17) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:18+1
    call $t18 := $Lt($t5, $t17);

    // if ($t18) goto L4 else goto L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:9+304
    if ($t18) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:601:9+304
L4:

    // label L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:602:44+14
    assume {:print "$at(2,21507,21521)"} true;
L5:

    // $t19 := get_field<base::ProtocolState>.campaigns_created($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:602:43+33
    assume {:print "$at(2,21506,21539)"} true;
    $t19 := $t12->$campaigns_created;

    // $t20 := vector::borrow<base::Campaign>($t19, $t5) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:602:28+52
    call $t20 := $1_vector_borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t19, $t5);
    if ($abort_flag) {
        assume {:print "$at(2,21491,21543)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[campaign]($t20) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:602:17+8
    assume {:print "$track_local(70,11,2):", $t20} $t20 == $t20;

    // $t21 := get_field<base::AppState>.campaigns_map($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:603:52+24
    assume {:print "$at(2,21597,21621)"} true;
    $t21 := $t14->$campaigns_map;

    // $t22 := get_field<base::Campaign>.id($t20) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:603:78+12
    $t22 := $t20->$id;

    // $t23 := simple_map::borrow<string::String, base::Campaign>($t21, $t22) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:603:33+58
    call $t23 := $1_simple_map_borrow'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'($t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(2,21578,21636)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[campaign_data]($t23) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:603:17+13
    assume {:print "$track_local(70,11,3):", $t23} $t23 == $t23;

    // $t27 := borrow_local($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:604:31+21
    assume {:print "$at(2,21669,21690)"} true;
    $t27 := $Mutation($Local(4), EmptyVec(), $t4);

    // $t24 := get_field<base::Campaign>.metric($t23) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:604:54+20
    $t24 := $t23->$metric;

    // vector::push_back<base::CampaignMetrics>($t27, $t24) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:604:13+62
    call $t27 := $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_CampaignMetrics'($t27, $t24);
    if ($abort_flag) {
        assume {:print "$at(2,21651,21713)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // write_back[LocalRoot($t4)@]($t27) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:604:13+62
    $t4 := $Dereference($t27);

    // trace_local[campaign_metrics]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:604:13+62
    assume {:print "$track_local(70,11,4):", $t4} $t4 == $t4;

    // $t25 := 1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:605:21+1
    assume {:print "$at(2,21736,21737)"} true;
    $t25 := 1;
    assume $IsValid'u64'($t25);

    // $t26 := +($t5, $t25) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:605:19+1
    call $t26 := $AddU64($t5, $t25);
    if ($abort_flag) {
        assume {:print "$at(2,21734,21735)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[i]($t26) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:605:13+1
    assume {:print "$track_local(70,11,5):", $t26} $t26 == $t26;

    // goto L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:605:22+1
    goto L7;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:608:9+16
    assume {:print "$at(2,21762,21778)"} true;
L3:

    // $t28 := move($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:608:9+16
    assume {:print "$at(2,21762,21778)"} true;
    $t28 := $t4;

    // trace_return[0]($t28) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:608:9+16
    assume {:print "$track_return(70,11,0):", $t28} $t28 == $t28;

    // goto L8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:608:9+16
    goto L8;

    // label L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:608:9+16
    // Loop invariant checking block for the loop started with header: L6
L7:

    // stop() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:608:9+16
    assume {:print "$at(2,21762,21778)"} true;
    assume false;
    return;

    // label L8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:609:5+1
    assume {:print "$at(2,21784,21785)"} true;
L8:

    // return $t28 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:609:5+1
    assume {:print "$at(2,21784,21785)"} true;
    $ret0 := $t28;
    return;

    // label L9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:609:5+1
L9:

    // abort($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:609:5+1
    assume {:print "$at(2,21784,21785)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun base::get_metric_of_quests_by_protocol [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:612:5+768
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_get_metric_of_quests_by_protocol$verify(_$t0: int) returns ($ret0: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics))
{
    // declare local variables
    var $t1: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $t2: int;
    var $t3: int;
    var $t4: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;
    var $t5: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
    var $t6: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
    var $t7: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;
    var $t13: int;
    var $t14: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $t15: int;
    var $t16: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t17: int;
    var $t18: bool;
    var $t19: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t20: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
    var $t21: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t22: $1_string_String;
    var $t23: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
    var $t24: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics;
    var $t25: int;
    var $t26: int;
    var $t27: $Mutation (Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics));
    var $t28: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    var $t0: int;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $temp_0'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'': Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:612:5+1
    assume {:print "$at(2,21806,21807)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: base::AppState: ResourceDomain<base::AppState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:612:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($rsc))));

    // assume forall $rsc: base::ProtocolState: ResourceDomain<base::ProtocolState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:612:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'($rsc))));

    // trace_local[protocol]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:612:5+1
    assume {:print "$track_local(70,12,0):", $t0} $t0 == $t0;

    // $t8 := exists<base::ProtocolState>($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:17+6
    assume {:print "$at(2,23099,23105)"} true;
    $t8 := $ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t0);

    // if ($t8) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
L1:

    // goto L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    assume {:print "$at(2,23091,23175)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:67+24
L0:

    // $t9 := 2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:67+24
    assume {:print "$at(2,23149,23173)"} true;
    $t9 := 2;
    assume $IsValid'u64'($t9);

    // $t10 := error::not_found($t9) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:50+42
    call $t10 := $1_error_not_found($t9);
    if ($abort_flag) {
        assume {:print "$at(2,23132,23174)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,12):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_abort($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    assume {:print "$at(2,23091,23175)"} true;
    assume {:print "$track_abort(70,12):", $t10} $t10 == $t10;

    // $t11 := move($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    $t11 := $t10;

    // goto L9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:643:9+84
    goto L9;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:614:59+8
    assume {:print "$at(2,22032,22040)"} true;
L2:

    // $t12 := get_global<base::ProtocolState>($t0) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:614:30+13
    assume {:print "$at(2,22003,22016)"} true;
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,22003,22016)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,12):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[protocol_state]($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:614:13+14
    assume {:print "$track_local(70,12,4):", $t12} $t12 == $t12;

    // $t13 := 0x9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:615:49+5
    assume {:print "$at(2,22092,22097)"} true;
    $t13 := 72038777300602173924386081059034887547389433311546243642183252999150723751218;
    assume $IsValid'address'($t13);

    // $t14 := get_global<base::AppState>($t13) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:615:25+13
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(2,22068,22081)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,12):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[app_state]($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:615:13+9
    assume {:print "$track_local(70,12,1):", $t14} $t14 == $t14;

    // $t7 := vector::empty<base::QuestMetrics>() on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:616:29+29
    assume {:print "$at(2,22129,22158)"} true;
    call $t7 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'();
    if ($abort_flag) {
        assume {:print "$at(2,22129,22158)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,12):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[quest_metrics]($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:616:13+13
    assume {:print "$track_local(70,12,7):", $t7} $t7 == $t7;

    // $t15 := 0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:618:17+1
    assume {:print "$at(2,22179,22180)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // trace_local[i]($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:618:13+1
    assume {:print "$track_local(70,12,2):", $t15} $t15 == $t15;

    // $t16 := get_field<base::ProtocolState>.quests_created($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:619:34+30
    assume {:print "$at(2,22216,22246)"} true;
    $t16 := $t12->$quests_created;

    // $t17 := vector::length<base::Quest>($t16) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:619:19+46
    call $t17 := $1_vector_length'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t16);
    if ($abort_flag) {
        assume {:print "$at(2,22201,22247)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,12):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[len]($t17) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:619:13+3
    assume {:print "$track_local(70,12,3):", $t17} $t17 == $t17;

    // label L6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume {:print "$at(2,22265,22266)"} true;
L6:

    // $t2 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume {:print "$at(2,22265,22266)"} true;
    havoc $t2;

    // assume WellFormed($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume $IsValid'u64'($t2);

    // $t7 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    havoc $t7;

    // assume WellFormed($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''($t7);

    // $t18 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    havoc $t18;

    // assume WellFormed($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume $IsValid'bool'($t18);

    // $t19 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    havoc $t19;

    // assume WellFormed($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''($t19);

    // $t20 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    havoc $t20;

    // assume WellFormed($t20) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t20);

    // $t21 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    havoc $t21;

    // assume WellFormed($t21) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume $IsValid'$1_simple_map_SimpleMap'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest''($t21);

    // $t22 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    havoc $t22;

    // assume WellFormed($t22) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume $IsValid'$1_string_String'($t22);

    // $t23 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    havoc $t23;

    // assume WellFormed($t23) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t23);

    // $t24 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    havoc $t24;

    // assume WellFormed($t24) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume $IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'($t24);

    // $t25 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    havoc $t25;

    // assume WellFormed($t25) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume $IsValid'u64'($t25);

    // $t26 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    havoc $t26;

    // assume WellFormed($t26) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume $IsValid'u64'($t26);

    // $t27 := havoc[mut_all]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    havoc $t27;

    // assume WellFormed($t27) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume $IsValid'vec'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics''($Dereference($t27));

    // trace_local[i]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume {:print "$info(): enter loop, variable(s) i, quest_metrics havocked and reassigned"} true;
    assume {:print "$track_local(70,12,2):", $t2} $t2 == $t2;

    // trace_local[quest_metrics]($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume {:print "$track_local(70,12,7):", $t7} $t7 == $t7;

    // assume Not(AbortFlag()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:16+1
    assume !$abort_flag;

    // $t18 := <($t2, $t17) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:18+1
    call $t18 := $Lt($t2, $t17);

    // if ($t18) goto L4 else goto L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:9+283
    if ($t18) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:620:9+283
L4:

    // label L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:621:41+14
    assume {:print "$at(2,22317,22331)"} true;
L5:

    // $t19 := get_field<base::ProtocolState>.quests_created($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:621:40+30
    assume {:print "$at(2,22316,22346)"} true;
    $t19 := $t12->$quests_created;

    // $t20 := vector::borrow<base::Quest>($t19, $t2) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:621:25+49
    call $t20 := $1_vector_borrow'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t19, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,22301,22350)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,12):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[quest]($t20) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:621:17+5
    assume {:print "$track_local(70,12,5):", $t20} $t20 == $t20;

    // $t21 := get_field<base::AppState>.quests_map($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:622:49+21
    assume {:print "$at(2,22401,22422)"} true;
    $t21 := $t14->$quests_map;

    // $t22 := get_field<base::Quest>.id($t20) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:622:72+9
    $t22 := $t20->$id;

    // $t23 := simple_map::borrow<string::String, base::Quest>($t21, $t22) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:622:30+52
    call $t23 := $1_simple_map_borrow'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'($t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(2,22382,22434)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,12):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[quest_data]($t23) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:622:17+10
    assume {:print "$track_local(70,12,6):", $t23} $t23 == $t23;

    // $t27 := borrow_local($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:623:31+18
    assume {:print "$at(2,22467,22485)"} true;
    $t27 := $Mutation($Local(7), EmptyVec(), $t7);

    // $t24 := get_field<base::Quest>.metric($t23) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:623:51+17
    $t24 := $t23->$metric;

    // vector::push_back<base::QuestMetrics>($t27, $t24) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:623:13+56
    call $t27 := $1_vector_push_back'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_QuestMetrics'($t27, $t24);
    if ($abort_flag) {
        assume {:print "$at(2,22449,22505)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,12):", $t11} $t11 == $t11;
        goto L9;
    }

    // write_back[LocalRoot($t7)@]($t27) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:623:13+56
    $t7 := $Dereference($t27);

    // trace_local[quest_metrics]($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:623:13+56
    assume {:print "$track_local(70,12,7):", $t7} $t7 == $t7;

    // $t25 := 1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:624:21+1
    assume {:print "$at(2,22528,22529)"} true;
    $t25 := 1;
    assume $IsValid'u64'($t25);

    // $t26 := +($t2, $t25) on_abort goto L9 with $t11 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:624:19+1
    call $t26 := $AddU64($t2, $t25);
    if ($abort_flag) {
        assume {:print "$at(2,22526,22527)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(70,12):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[i]($t26) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:624:13+1
    assume {:print "$track_local(70,12,2):", $t26} $t26 == $t26;

    // goto L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:624:22+1
    goto L7;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:627:9+13
    assume {:print "$at(2,22554,22567)"} true;
L3:

    // $t28 := move($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:627:9+13
    assume {:print "$at(2,22554,22567)"} true;
    $t28 := $t7;

    // trace_return[0]($t28) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:627:9+13
    assume {:print "$track_return(70,12,0):", $t28} $t28 == $t28;

    // goto L8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:627:9+13
    goto L8;

    // label L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:627:9+13
    // Loop invariant checking block for the loop started with header: L6
L7:

    // stop() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:627:9+13
    assume {:print "$at(2,22554,22567)"} true;
    assume false;
    return;

    // label L8 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:628:5+1
    assume {:print "$at(2,22573,22574)"} true;
L8:

    // return $t28 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:628:5+1
    assume {:print "$at(2,22573,22574)"} true;
    $ret0 := $t28;
    return;

    // label L9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:628:5+1
L9:

    // abort($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:628:5+1
    assume {:print "$at(2,22573,22574)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun base::init_module [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:285:5+713
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_init_module$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: Vec (int);
    var $t3: $1_string_String;
    var $t4: Vec (int);
    var $t5: $1_string_String;
    var $t6: $signer;
    var $t7: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $t8: Vec (int);
    var $t9: int;
    var $t10: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var $t11: Vec (int);
    var $t12: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t13: Table int ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t14: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t15: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t16: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $t17: Vec (int);
    var $t18: $1_string_String;
    var $t19: Vec (int);
    var $t20: $1_string_String;
    var $t21: Vec (int);
    var $t22: $1_string_String;
    var $t0: $signer;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:285:5+1
    assume {:print "$at(2,8475,8476)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:285:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: royalty::Royalty: ResourceDomain<royalty::Royalty>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:285:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: collection::Collection: ResourceDomain<collection::Collection>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:285:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_Collection_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_Collection_$memory, $a_0);
    ($IsValid'$4_collection_Collection'($rsc))));

    // assume forall $rsc: collection::UnlimitedSupply: ResourceDomain<collection::UnlimitedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:285:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: base::AppState: ResourceDomain<base::AppState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:285:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($rsc))));

    // trace_local[account]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:285:5+1
    assume {:print "$track_local(70,13,0):", $t0} $t0 == $t0;

    // $t8 := vector::empty<address>() on_abort goto L2 with $t9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:287:20+24
    assume {:print "$at(2,8567,8591)"} true;
    call $t8 := $1_vector_empty'address'();
    if ($abort_flag) {
        assume {:print "$at(2,8567,8591)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(70,13):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t10 := vector::empty<base::RewardItem>() on_abort goto L2 with $t9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:288:22+27
    assume {:print "$at(2,8615,8642)"} true;
    call $t10 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'();
    if ($abort_flag) {
        assume {:print "$at(2,8615,8642)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(70,13):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t11 := vector::empty<address>() on_abort goto L2 with $t9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:289:24+24
    assume {:print "$at(2,8668,8692)"} true;
    call $t11 := $1_vector_empty'address'();
    if ($abort_flag) {
        assume {:print "$at(2,8668,8692)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(70,13):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t12 := simple_map::new<string::String, base::Quest>() on_abort goto L2 with $t9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:290:25+32
    assume {:print "$at(2,8719,8751)"} true;
    call $t12 := $1_simple_map_new'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'();
    if ($abort_flag) {
        assume {:print "$at(2,8719,8751)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(70,13):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t13 := simple_map::new<string::String, base::Campaign>() on_abort goto L2 with $t9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:291:28+35
    assume {:print "$at(2,8781,8816)"} true;
    call $t13 := $1_simple_map_new'$1_string_String_$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'();
    if ($abort_flag) {
        assume {:print "$at(2,8781,8816)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(70,13):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t14 := vector::empty<base::Quest>() on_abort goto L2 with $t9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:292:21+22
    assume {:print "$at(2,8839,8861)"} true;
    call $t14 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'();
    if ($abort_flag) {
        assume {:print "$at(2,8839,8861)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(70,13):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t15 := vector::empty<base::Campaign>() on_abort goto L2 with $t9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:293:24+25
    assume {:print "$at(2,8887,8912)"} true;
    call $t15 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'();
    if ($abort_flag) {
        assume {:print "$at(2,8887,8912)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(70,13):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t16 := pack base::AppState($t8, $t10, $t11, $t12, $t13, $t14, $t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:286:25+388
    assume {:print "$at(2,8536,8924)"} true;
    $t16 := $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState($t8, $t10, $t11, $t12, $t13, $t14, $t15);

    // trace_local[app_state]($t16) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:286:13+9
    assume {:print "$track_local(70,13,7):", $t16} $t16 == $t16;

    // $t17 := [65, 109, 102, 105, 32, 82, 101, 119, 97, 114, 100, 32, 78, 70, 84, 83] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:296:65+19
    assume {:print "$at(2,8993,9012)"} true;
    $t17 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(65, 109, 102, 105), MakeVec4(32, 82, 101, 119)), MakeVec4(97, 114, 100, 32)), MakeVec4(78, 70, 84, 83));
    assume $IsValid'vec'u8''($t17);

    // $t18 := string_utils::to_string<vector<u8>>($t17) on_abort goto L2 with $t9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:296:40+45
    call $t18 := $1_string_utils_to_string'vec'u8''($t17);
    if ($abort_flag) {
        assume {:print "$at(2,8968,9013)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(70,13):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t19 := [84, 104, 105, 115, 32, 105, 115, 32, 116, 104, 101, 32, 114, 101, 119, 97, 114, 100, 32, 99, 111, 108, 108, 101, 99, 116, 105, 111, 110, 32, 102, 111, 114, 32, 78, 70, 84, 83, 32, 117, 115, 101, 100, 32, 116, 111, 32, 114, 101, 119, 97, 114, 100, 32, 65, 109, 102, 105, 32, 117, 115, 101, 114, 115] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:296:112+67
    $t19 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(84, 104, 105, 115), MakeVec4(32, 105, 115, 32)), MakeVec4(116, 104, 101, 32)), MakeVec4(114, 101, 119, 97)), MakeVec4(114, 100, 32, 99)), MakeVec4(111, 108, 108, 101)), MakeVec4(99, 116, 105, 111)), MakeVec4(110, 32, 102, 111)), MakeVec4(114, 32, 78, 70)), MakeVec4(84, 83, 32, 117)), MakeVec4(115, 101, 100, 32)), MakeVec4(116, 111, 32, 114)), MakeVec4(101, 119, 97, 114)), MakeVec4(100, 32, 65, 109)), MakeVec4(102, 105, 32, 117)), MakeVec4(115, 101, 114, 115));
    assume $IsValid'vec'u8''($t19);

    // $t20 := string_utils::to_string<vector<u8>>($t19) on_abort goto L2 with $t9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:296:87+93
    call $t20 := $1_string_utils_to_string'vec'u8''($t19);
    if ($abort_flag) {
        assume {:print "$at(2,9015,9108)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(70,13):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t21 := [] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:296:207+3
    $t21 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t21);

    // $t22 := string_utils::to_string<vector<u8>>($t21) on_abort goto L2 with $t9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:296:182+29
    call $t22 := $1_string_utils_to_string'vec'u8''($t21);
    if ($abort_flag) {
        assume {:print "$at(2,9110,9139)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(70,13):", $t9} $t9 == $t9;
        goto L2;
    }

    // base::initialize_collection($t0, $t18, $t20, $t22) on_abort goto L2 with $t9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:296:9+203
    call $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_initialize_collection($t0, $t18, $t20, $t22);
    if ($abort_flag) {
        assume {:print "$at(2,8937,9140)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(70,13):", $t9} $t9 == $t9;
        goto L2;
    }

    // move_to<base::AppState>($t16, $t0) on_abort goto L2 with $t9 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:298:9+7
    assume {:print "$at(2,9153,9160)"} true;
    if ($ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t0->$addr, $t16);
    }
    if ($abort_flag) {
        assume {:print "$at(2,9153,9160)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(70,13):", $t9} $t9 == $t9;
        goto L2;
    }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:299:5+1
    assume {:print "$at(2,9187,9188)"} true;
L1:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:299:5+1
    assume {:print "$at(2,9187,9188)"} true;
    return;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:299:5+1
L2:

    // abort($t9) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:299:5+1
    assume {:print "$at(2,9187,9188)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun base::initialize_collection [baseline] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+298
procedure {:inline 1} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_initialize_collection(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_string_String) returns ()
{
    // declare local variables
    var $t4: $1_option_Option'$4_royalty_Royalty';
    var $t5: $1_object_ConstructorRef;
    var $t6: int;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // bytecode translation starts here
    // trace_local[creator]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume {:print "$at(2,4226,4227)"} true;
    assume {:print "$track_local(70,14,0):", $t0} $t0 == $t0;

    // trace_local[name]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume {:print "$track_local(70,14,1):", $t1} $t1 == $t1;

    // trace_local[description]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume {:print "$track_local(70,14,2):", $t2} $t2 == $t2;

    // trace_local[uri]($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume {:print "$track_local(70,14,3):", $t3} $t3 == $t3;

    // $t4 := opaque begin: option::none<royalty::Royalty>() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:151:13+23
    assume {:print "$at(2,4463,4486)"} true;

    // assume And(WellFormed($t4), Le(Len<royalty::Royalty>(select option::Option.vec($t4)), 1)) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:151:13+23
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t4) && (LenVec($t4->$vec) <= 1));

    // assume Eq<option::Option<royalty::Royalty>>($t4, option::spec_none<royalty::Royalty>()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:151:13+23
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t4, $1_option_spec_none'$4_royalty_Royalty'());

    // $t4 := opaque end: option::none<royalty::Royalty>() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:151:13+23

    // $t5 := collection::create_unlimited_collection($t0, $t2, $t1, $t4, $t3) on_abort goto L2 with $t6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:147:9+174
    assume {:print "$at(2,4342,4516)"} true;
    call $t5 := $4_collection_create_unlimited_collection($t0, $t2, $t1, $t4, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,4342,4516)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(70,14):", $t6} $t6 == $t6;
        goto L2;
    }

    // destroy($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:147:9+174

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:154:5+1
    assume {:print "$at(2,4523,4524)"} true;
L1:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:154:5+1
    assume {:print "$at(2,4523,4524)"} true;
    return;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:154:5+1
L2:

    // abort($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:154:5+1
    assume {:print "$at(2,4523,4524)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun base::initialize_collection [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+298
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_initialize_collection$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_string_String) returns ()
{
    // declare local variables
    var $t4: $1_option_Option'$4_royalty_Royalty';
    var $t5: $1_object_ConstructorRef;
    var $t6: int;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume {:print "$at(2,4226,4227)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume $IsValid'$1_string_String'($t2);

    // assume WellFormed($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume $IsValid'$1_string_String'($t3);

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: royalty::Royalty: ResourceDomain<royalty::Royalty>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: collection::Collection: ResourceDomain<collection::Collection>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_Collection_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_Collection_$memory, $a_0);
    ($IsValid'$4_collection_Collection'($rsc))));

    // assume forall $rsc: collection::UnlimitedSupply: ResourceDomain<collection::UnlimitedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // trace_local[creator]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume {:print "$track_local(70,14,0):", $t0} $t0 == $t0;

    // trace_local[name]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume {:print "$track_local(70,14,1):", $t1} $t1 == $t1;

    // trace_local[description]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume {:print "$track_local(70,14,2):", $t2} $t2 == $t2;

    // trace_local[uri]($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:146:5+1
    assume {:print "$track_local(70,14,3):", $t3} $t3 == $t3;

    // $t4 := opaque begin: option::none<royalty::Royalty>() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:151:13+23
    assume {:print "$at(2,4463,4486)"} true;

    // assume And(WellFormed($t4), Le(Len<royalty::Royalty>(select option::Option.vec($t4)), 1)) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:151:13+23
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t4) && (LenVec($t4->$vec) <= 1));

    // assume Eq<option::Option<royalty::Royalty>>($t4, option::spec_none<royalty::Royalty>()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:151:13+23
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t4, $1_option_spec_none'$4_royalty_Royalty'());

    // $t4 := opaque end: option::none<royalty::Royalty>() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:151:13+23

    // $t5 := collection::create_unlimited_collection($t0, $t2, $t1, $t4, $t3) on_abort goto L2 with $t6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:147:9+174
    assume {:print "$at(2,4342,4516)"} true;
    call $t5 := $4_collection_create_unlimited_collection($t0, $t2, $t1, $t4, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,4342,4516)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(70,14):", $t6} $t6 == $t6;
        goto L2;
    }

    // destroy($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:147:9+174

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:154:5+1
    assume {:print "$at(2,4523,4524)"} true;
L1:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:154:5+1
    assume {:print "$at(2,4523,4524)"} true;
    return;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:154:5+1
L2:

    // abort($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:154:5+1
    assume {:print "$at(2,4523,4524)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun base::mint_reward_to [baseline] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1015
procedure {:inline 1} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_mint_reward_to(_$t0: $signer, _$t1: $1_string_String, _$t2: int, _$t3: $1_string_String, _$t4: $1_string_String, _$t5: $1_string_String, _$t6: int, _$t7: bool) returns ()
{
    // declare local variables
    var $t8: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower;
    var $t9: $1_object_ConstructorRef;
    var $t10: $1_object_Object'$4_token_Token';
    var $t11: $signer;
    var $t12: $1_object_TransferRef;
    var $t13: $1_option_Option'$4_royalty_Royalty';
    var $t14: $1_object_ConstructorRef;
    var $t15: int;
    var $t16: $signer;
    var $t17: $1_object_TransferRef;
    var $t18: $1_object_Object'$4_token_Token';
    var $t19: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: int;
    var $t3: $1_string_String;
    var $t4: $1_string_String;
    var $t5: $1_string_String;
    var $t6: int;
    var $t7: bool;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;
    $t7 := _$t7;

    // bytecode translation starts here
    // trace_local[creator]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$at(2,5495,5496)"} true;
    assume {:print "$track_local(70,15,0):", $t0} $t0 == $t0;

    // trace_local[token_name]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,1):", $t1} $t1 == $t1;

    // trace_local[to]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,2):", $t2} $t2 == $t2;

    // trace_local[colection_name]($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,3):", $t3} $t3 == $t3;

    // trace_local[description]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,4):", $t4} $t4 == $t4;

    // trace_local[token_uri]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,5):", $t5} $t5 == $t5;

    // trace_local[price]($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,6):", $t6} $t6 == $t6;

    // trace_local[scratched]($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,7):", $t7} $t7 == $t7;

    // $t13 := opaque begin: option::none<royalty::Royalty>() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:204:13+14
    assume {:print "$at(2,5925,5939)"} true;

    // assume And(WellFormed($t13), Le(Len<royalty::Royalty>(select option::Option.vec($t13)), 1)) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:204:13+14
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t13) && (LenVec($t13->$vec) <= 1));

    // assume Eq<option::Option<royalty::Royalty>>($t13, option::spec_none<royalty::Royalty>()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:204:13+14
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t13, $1_option_spec_none'$4_royalty_Royalty'());

    // $t13 := opaque end: option::none<royalty::Royalty>() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:204:13+14

    // $t14 := token::create_named_token($t0, $t3, $t4, $t1, $t13, $t5) on_abort goto L2 with $t15 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:199:37+192
    assume {:print "$at(2,5783,5975)"} true;
    call $t14 := $4_token_create_named_token($t0, $t3, $t4, $t1, $t13, $t5);
    if ($abort_flag) {
        assume {:print "$at(2,5783,5975)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(70,15):", $t15} $t15 == $t15;
        goto L2;
    }

    // trace_local[token_constructor_ref]($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:199:13+21
    assume {:print "$track_local(70,15,9):", $t14} $t14 == $t14;

    // $t16 := object::generate_signer($t14) on_abort goto L2 with $t15 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:208:28+47
    assume {:print "$at(2,6007,6054)"} true;
    call $t16 := $1_object_generate_signer($t14);
    if ($abort_flag) {
        assume {:print "$at(2,6007,6054)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(70,15):", $t15} $t15 == $t15;
        goto L2;
    }

    // trace_local[token_signer]($t16) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:208:13+12
    assume {:print "$track_local(70,15,11):", $t16} $t16 == $t16;

    // $t17 := object::generate_transfer_ref($t14) on_abort goto L2 with $t15 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:209:28+53
    assume {:print "$at(2,6084,6137)"} true;
    call $t17 := $1_object_generate_transfer_ref($t14);
    if ($abort_flag) {
        assume {:print "$at(2,6084,6137)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(70,15):", $t15} $t15 == $t15;
        goto L2;
    }

    // trace_local[transfer_ref]($t17) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:209:13+12
    assume {:print "$track_local(70,15,12):", $t17} $t17 == $t17;

    // $t18 := object::object_from_constructor_ref<token::Token>($t14) on_abort goto L2 with $t15 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:210:28+73
    assume {:print "$at(2,6167,6240)"} true;
    call $t18 := $1_object_object_from_constructor_ref'$4_token_Token'($t14);
    if ($abort_flag) {
        assume {:print "$at(2,6167,6240)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(70,15):", $t15} $t15 == $t15;
        goto L2;
    }

    // trace_local[token_object]($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:210:13+12
    assume {:print "$track_local(70,15,10):", $t18} $t18 == $t18;

    // $t19 := pack base::RewardItemPower($t17, $t7, $t6, $t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:212:26+129
    assume {:print "$at(2,6270,6399)"} true;
    $t19 := $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower($t17, $t7, $t6, $t6);

    // trace_local[reward_pow]($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:212:13+10
    assume {:print "$track_local(70,15,8):", $t19} $t19 == $t19;

    // move_to<base::RewardItemPower>($t19, $t16) on_abort goto L2 with $t15 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:219:9+7
    assume {:print "$at(2,6412,6419)"} true;
    if ($ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $t16->$addr)) {
        call $ExecFailureAbort();
    } else {
        $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $t16->$addr, $t19);
    }
    if ($abort_flag) {
        assume {:print "$at(2,6412,6419)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(70,15):", $t15} $t15 == $t15;
        goto L2;
    }

    // object::transfer<token::Token>($t0, $t18, $t2) on_abort goto L2 with $t15 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:221:9+43
    assume {:print "$at(2,6459,6502)"} true;
    call $1_object_transfer'$4_token_Token'($t0, $t18, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,6459,6502)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(70,15):", $t15} $t15 == $t15;
        goto L2;
    }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:222:5+1
    assume {:print "$at(2,6509,6510)"} true;
L1:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:222:5+1
    assume {:print "$at(2,6509,6510)"} true;
    return;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:222:5+1
L2:

    // abort($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:222:5+1
    assume {:print "$at(2,6509,6510)"} true;
    $abort_code := $t15;
    $abort_flag := true;
    return;

}

// fun base::mint_reward_to [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1015
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_mint_reward_to$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: int, _$t3: $1_string_String, _$t4: $1_string_String, _$t5: $1_string_String, _$t6: int, _$t7: bool) returns ()
{
    // declare local variables
    var $t8: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower;
    var $t9: $1_object_ConstructorRef;
    var $t10: $1_object_Object'$4_token_Token';
    var $t11: $signer;
    var $t12: $1_object_TransferRef;
    var $t13: $1_option_Option'$4_royalty_Royalty';
    var $t14: $1_object_ConstructorRef;
    var $t15: int;
    var $t16: $signer;
    var $t17: $1_object_TransferRef;
    var $t18: $1_object_Object'$4_token_Token';
    var $t19: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: int;
    var $t3: $1_string_String;
    var $t4: $1_string_String;
    var $t5: $1_string_String;
    var $t6: int;
    var $t7: bool;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower': $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;
    $t7 := _$t7;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$at(2,5495,5496)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume $IsValid'address'($t2);

    // assume WellFormed($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume $IsValid'$1_string_String'($t3);

    // assume WellFormed($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume $IsValid'$1_string_String'($t4);

    // assume WellFormed($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume $IsValid'$1_string_String'($t5);

    // assume WellFormed($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume $IsValid'u64'($t6);

    // assume WellFormed($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume $IsValid'bool'($t7);

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: royalty::Royalty: ResourceDomain<royalty::Royalty>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: collection::FixedSupply: ResourceDomain<collection::FixedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_FixedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_FixedSupply_$memory, $a_0);
    ($IsValid'$4_collection_FixedSupply'($rsc))));

    // assume forall $rsc: collection::UnlimitedSupply: ResourceDomain<collection::UnlimitedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: token::Token: ResourceDomain<token::Token>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_Token_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_Token_$memory, $a_0);
    ($IsValid'$4_token_Token'($rsc))));

    // assume forall $rsc: base::RewardItemPower: ResourceDomain<base::RewardItemPower>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'($rsc))));

    // trace_local[creator]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,0):", $t0} $t0 == $t0;

    // trace_local[token_name]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,1):", $t1} $t1 == $t1;

    // trace_local[to]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,2):", $t2} $t2 == $t2;

    // trace_local[colection_name]($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,3):", $t3} $t3 == $t3;

    // trace_local[description]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,4):", $t4} $t4 == $t4;

    // trace_local[token_uri]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,5):", $t5} $t5 == $t5;

    // trace_local[price]($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,6):", $t6} $t6 == $t6;

    // trace_local[scratched]($t7) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:189:5+1
    assume {:print "$track_local(70,15,7):", $t7} $t7 == $t7;

    // $t13 := opaque begin: option::none<royalty::Royalty>() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:204:13+14
    assume {:print "$at(2,5925,5939)"} true;

    // assume And(WellFormed($t13), Le(Len<royalty::Royalty>(select option::Option.vec($t13)), 1)) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:204:13+14
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t13) && (LenVec($t13->$vec) <= 1));

    // assume Eq<option::Option<royalty::Royalty>>($t13, option::spec_none<royalty::Royalty>()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:204:13+14
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t13, $1_option_spec_none'$4_royalty_Royalty'());

    // $t13 := opaque end: option::none<royalty::Royalty>() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:204:13+14

    // $t14 := token::create_named_token($t0, $t3, $t4, $t1, $t13, $t5) on_abort goto L2 with $t15 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:199:37+192
    assume {:print "$at(2,5783,5975)"} true;
    call $t14 := $4_token_create_named_token($t0, $t3, $t4, $t1, $t13, $t5);
    if ($abort_flag) {
        assume {:print "$at(2,5783,5975)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(70,15):", $t15} $t15 == $t15;
        goto L2;
    }

    // trace_local[token_constructor_ref]($t14) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:199:13+21
    assume {:print "$track_local(70,15,9):", $t14} $t14 == $t14;

    // $t16 := object::generate_signer($t14) on_abort goto L2 with $t15 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:208:28+47
    assume {:print "$at(2,6007,6054)"} true;
    call $t16 := $1_object_generate_signer($t14);
    if ($abort_flag) {
        assume {:print "$at(2,6007,6054)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(70,15):", $t15} $t15 == $t15;
        goto L2;
    }

    // trace_local[token_signer]($t16) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:208:13+12
    assume {:print "$track_local(70,15,11):", $t16} $t16 == $t16;

    // $t17 := object::generate_transfer_ref($t14) on_abort goto L2 with $t15 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:209:28+53
    assume {:print "$at(2,6084,6137)"} true;
    call $t17 := $1_object_generate_transfer_ref($t14);
    if ($abort_flag) {
        assume {:print "$at(2,6084,6137)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(70,15):", $t15} $t15 == $t15;
        goto L2;
    }

    // trace_local[transfer_ref]($t17) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:209:13+12
    assume {:print "$track_local(70,15,12):", $t17} $t17 == $t17;

    // $t18 := object::object_from_constructor_ref<token::Token>($t14) on_abort goto L2 with $t15 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:210:28+73
    assume {:print "$at(2,6167,6240)"} true;
    call $t18 := $1_object_object_from_constructor_ref'$4_token_Token'($t14);
    if ($abort_flag) {
        assume {:print "$at(2,6167,6240)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(70,15):", $t15} $t15 == $t15;
        goto L2;
    }

    // trace_local[token_object]($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:210:13+12
    assume {:print "$track_local(70,15,10):", $t18} $t18 == $t18;

    // $t19 := pack base::RewardItemPower($t17, $t7, $t6, $t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:212:26+129
    assume {:print "$at(2,6270,6399)"} true;
    $t19 := $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower($t17, $t7, $t6, $t6);

    // trace_local[reward_pow]($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:212:13+10
    assume {:print "$track_local(70,15,8):", $t19} $t19 == $t19;

    // move_to<base::RewardItemPower>($t19, $t16) on_abort goto L2 with $t15 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:219:9+7
    assume {:print "$at(2,6412,6419)"} true;
    if ($ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $t16->$addr)) {
        call $ExecFailureAbort();
    } else {
        $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $t16->$addr, $t19);
    }
    if ($abort_flag) {
        assume {:print "$at(2,6412,6419)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(70,15):", $t15} $t15 == $t15;
        goto L2;
    }

    // object::transfer<token::Token>($t0, $t18, $t2) on_abort goto L2 with $t15 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:221:9+43
    assume {:print "$at(2,6459,6502)"} true;
    call $1_object_transfer'$4_token_Token'($t0, $t18, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,6459,6502)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(70,15):", $t15} $t15 == $t15;
        goto L2;
    }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:222:5+1
    assume {:print "$at(2,6509,6510)"} true;
L1:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:222:5+1
    assume {:print "$at(2,6509,6510)"} true;
    return;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:222:5+1
L2:

    // abort($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:222:5+1
    assume {:print "$at(2,6509,6510)"} true;
    $abort_code := $t15;
    $abort_flag := true;
    return;

}

// fun base::mint_to_many [baseline] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1101
procedure {:inline 1} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_mint_to_many(_$t0: $signer, _$t1: Vec (int), _$t2: $1_string_String, _$t3: $1_string_String, _$t4: $1_string_String, _$t5: Vec (int)) returns ()
{
    // declare local variables
    var $t6: Vec (int);
    var $t7: int;
    var $t8: Vec (int);
    var $t9: Vec (int);
    var $t10: $1_string_String;
    var $t11: int;
    var $t12: $1_string_String;
    var $t13: $signer;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: $1_string_String;
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: Vec (int);
    var $t23: $1_string_String;
    var $t24: $1_string_String;
    var $t25: int;
    var $t26: Vec (int);
    var $t27: int;
    var $t28: $1_string_String;
    var $t29: $1_string_String;
    var $t30: $1_string_String;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t0: $signer;
    var $t1: Vec (int);
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: $1_string_String;
    var $t5: Vec (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'address'': Vec (int);
    var $temp_0'vec'u64'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;

    // bytecode translation starts here
    // trace_local[creator]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume {:print "$at(2,6518,6519)"} true;
    assume {:print "$track_local(70,17,0):", $t0} $t0 == $t0;

    // trace_local[addresses]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume {:print "$track_local(70,17,1):", $t1} $t1 == $t1;

    // trace_local[collection_name]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume {:print "$track_local(70,17,2):", $t2} $t2 == $t2;

    // trace_local[token_uri]($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume {:print "$track_local(70,17,3):", $t3} $t3 == $t3;

    // trace_local[campaign_title]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume {:print "$track_local(70,17,4):", $t4} $t4 == $t4;

    // trace_local[prices]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume {:print "$track_local(70,17,5):", $t5} $t5 == $t5;

    // $t18 := 0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:232:17+1
    assume {:print "$at(2,6757,6758)"} true;
    $t18 := 0;
    assume $IsValid'u64'($t18);

    // trace_local[i]($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:232:13+1
    assume {:print "$track_local(70,17,15):", $t18} $t18 == $t18;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume {:print "$at(2,6776,6777)"} true;
L3:

    // $t15 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume {:print "$at(2,6776,6777)"} true;
    havoc $t15;

    // assume WellFormed($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'u64'($t15);

    // $t19 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t19;

    // assume WellFormed($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'u64'($t19);

    // $t20 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t20;

    // assume WellFormed($t20) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'bool'($t20);

    // $t21 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t21;

    // assume WellFormed($t21) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'address'($t21);

    // $t22 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t22;

    // assume WellFormed($t22) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'vec'u8''($t22);

    // $t23 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t23;

    // assume WellFormed($t23) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'$1_string_String'($t23);

    // $t24 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t24;

    // assume WellFormed($t24) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'$1_string_String'($t24);

    // $t25 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t25;

    // assume WellFormed($t25) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'u64'($t25);

    // $t26 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t26;

    // assume WellFormed($t26) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'vec'u8''($t26);

    // $t27 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t27;

    // assume WellFormed($t27) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'address'($t27);

    // $t28 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t28;

    // assume WellFormed($t28) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'$1_string_String'($t28);

    // $t29 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t29;

    // assume WellFormed($t29) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'$1_string_String'($t29);

    // $t30 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t30;

    // assume WellFormed($t30) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'$1_string_String'($t30);

    // $t31 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t31;

    // assume WellFormed($t31) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'u64'($t31);

    // $t32 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t32;

    // assume WellFormed($t32) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'u64'($t32);

    // trace_local[i]($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume {:print "$info(): enter loop, variable(s) i havocked and reassigned"} true;
    assume {:print "$track_local(70,17,15):", $t15} $t15 == $t15;

    // assume Not(AbortFlag()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume !$abort_flag;

    // $t19 := vector::length<address>($t1) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:20+26
    call $t19 := $1_vector_length'address'($t1);
    if ($abort_flag) {
        assume {:print "$at(2,6780,6806)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // $t20 := <($t15, $t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:18+1
    call $t20 := $Lt($t15, $t19);

    // if ($t20) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:9+843
    if ($t20) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:9+843
L1:

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:234:42+10
    assume {:print "$at(2,6852,6862)"} true;
L2:

    // $t21 := vector::borrow<address>($t1, $t15) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:234:27+29
    assume {:print "$at(2,6837,6866)"} true;
    call $t21 := $1_vector_borrow'address'($t1, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,6837,6866)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // trace_local[address]($t21) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:234:17+7
    assume {:print "$track_local(70,17,14):", $t21} $t21 == $t21;

    // $t22 := [82, 101, 119, 97, 114, 100, 32, 78, 102, 116, 32, 102, 111, 114, 32, 123, 125, 32, 45, 32, 123, 125] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:235:53+25
    assume {:print "$at(2,6921,6946)"} true;
    $t22 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 101, 119, 97), MakeVec4(114, 100, 32, 78)), MakeVec4(102, 116, 32, 102)), MakeVec4(111, 114, 32, 123)), MakeVec4(125, 32, 45, 32)), MakeVec2(123, 125));
    assume $IsValid'vec'u8''($t22);

    // $t23 := string_utils::to_string<address>($t21) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:235:96+32
    call $t23 := $1_string_utils_to_string'address'($t21);
    if ($abort_flag) {
        assume {:print "$at(2,6964,6996)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // $t24 := string_utils::format2<string::String, string::String>($t22, $t4, $t23) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:235:30+99
    call $t24 := $1_string_utils_format2'$1_string_String_$1_string_String'($t22, $t4, $t23);
    if ($abort_flag) {
        assume {:print "$at(2,6898,6997)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // trace_local[token_name]($t24) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:235:17+10
    assume {:print "$track_local(70,17,17):", $t24} $t24 == $t24;

    // $t25 := vector::borrow<u64>($t5, $t15) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:236:25+26
    assume {:print "$at(2,7024,7050)"} true;
    call $t25 := $1_vector_borrow'u64'($t5, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,7024,7050)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // trace_local[price]($t25) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:236:17+5
    assume {:print "$track_local(70,17,16):", $t25} $t25 == $t25;

    // $t26 := [84, 104, 105, 115, 32, 105, 115, 32, 97, 32, 114, 101, 119, 97, 114, 100, 32, 116, 111, 107, 101, 110, 32, 102, 114, 111, 109, 32, 123, 125, 32, 116, 111, 32, 123, 125, 32, 102, 111, 114, 32, 105, 110, 118, 111, 108, 118, 101, 109, 101, 110, 116, 32, 105, 110, 32, 123, 125, 32, 112, 111, 111, 108] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:244:22+66
    assume {:print "$at(2,7254,7320)"} true;
    $t26 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(84, 104, 105, 115), MakeVec4(32, 105, 115, 32)), MakeVec4(97, 32, 114, 101)), MakeVec4(119, 97, 114, 100)), MakeVec4(32, 116, 111, 107)), MakeVec4(101, 110, 32, 102)), MakeVec4(114, 111, 109, 32)), MakeVec4(123, 125, 32, 116)), MakeVec4(111, 32, 123, 125)), MakeVec4(32, 102, 111, 114)), MakeVec4(32, 105, 110, 118)), MakeVec4(111, 108, 118, 101)), MakeVec4(109, 101, 110, 116)), MakeVec4(32, 105, 110, 32)), MakeVec4(123, 125, 32, 112)), MakeVec3(111, 111, 108));
    assume $IsValid'vec'u8''($t26);

    // $t27 := signer::address_of($t0) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:245:46+27
    assume {:print "$at(2,7368,7395)"} true;
    call $t27 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,7368,7395)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // $t28 := string_utils::to_string<address>($t27) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:245:21+53
    call $t28 := $1_string_utils_to_string'address'($t27);
    if ($abort_flag) {
        assume {:print "$at(2,7343,7396)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // $t29 := string_utils::to_string<address>($t21) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:246:21+32
    assume {:print "$at(2,7419,7451)"} true;
    call $t29 := $1_string_utils_to_string'address'($t21);
    if ($abort_flag) {
        assume {:print "$at(2,7419,7451)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // $t30 := string_utils::format3<string::String, string::String, string::String>($t26, $t28, $t29, $t4) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:243:17+298
    assume {:print "$at(2,7209,7507)"} true;
    call $t30 := $1_string_utils_format3'$1_string_String_$1_string_String_$1_string_String'($t26, $t28, $t29, $t4);
    if ($abort_flag) {
        assume {:print "$at(2,7209,7507)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // base::mint_to($t0, $t24, $t21, $t2, $t30, $t3, $t25) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:238:13+509
    assume {:print "$at(2,7067,7576)"} true;
    call $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_mint_to($t0, $t24, $t21, $t2, $t30, $t3, $t25);
    if ($abort_flag) {
        assume {:print "$at(2,7067,7576)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // $t31 := 1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:252:21+1
    assume {:print "$at(2,7599,7600)"} true;
    $t31 := 1;
    assume $IsValid'u64'($t31);

    // $t32 := +($t15, $t31) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:252:19+1
    call $t32 := $AddU64($t15, $t31);
    if ($abort_flag) {
        assume {:print "$at(2,7597,7598)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // trace_local[i]($t32) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:252:13+1
    assume {:print "$track_local(70,17,15):", $t32} $t32 == $t32;

    // goto L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:252:22+1
    goto L4;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:9+843
    assume {:print "$at(2,6769,7612)"} true;
L0:

    // goto L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:9+843
    assume {:print "$at(2,6769,7612)"} true;
    goto L5;

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:9+843
    // Loop invariant checking block for the loop started with header: L3
L4:

    // stop() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:9+843
    assume {:print "$at(2,6769,7612)"} true;
    assume false;
    return;

    // label L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:254:5+1
    assume {:print "$at(2,7618,7619)"} true;
L5:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:254:5+1
    assume {:print "$at(2,7618,7619)"} true;
    return;

    // label L6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:254:5+1
L6:

    // abort($t33) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:254:5+1
    assume {:print "$at(2,7618,7619)"} true;
    $abort_code := $t33;
    $abort_flag := true;
    return;

}

// fun base::mint_to_many [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1101
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_mint_to_many$verify(_$t0: $signer, _$t1: Vec (int), _$t2: $1_string_String, _$t3: $1_string_String, _$t4: $1_string_String, _$t5: Vec (int)) returns ()
{
    // declare local variables
    var $t6: Vec (int);
    var $t7: int;
    var $t8: Vec (int);
    var $t9: Vec (int);
    var $t10: $1_string_String;
    var $t11: int;
    var $t12: $1_string_String;
    var $t13: $signer;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: $1_string_String;
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: Vec (int);
    var $t23: $1_string_String;
    var $t24: $1_string_String;
    var $t25: int;
    var $t26: Vec (int);
    var $t27: int;
    var $t28: $1_string_String;
    var $t29: $1_string_String;
    var $t30: $1_string_String;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t0: $signer;
    var $t1: Vec (int);
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: $1_string_String;
    var $t5: Vec (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'address'': Vec (int);
    var $temp_0'vec'u64'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume {:print "$at(2,6518,6519)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume $IsValid'vec'address''($t1);

    // assume WellFormed($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume $IsValid'$1_string_String'($t2);

    // assume WellFormed($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume $IsValid'$1_string_String'($t3);

    // assume WellFormed($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume $IsValid'$1_string_String'($t4);

    // assume WellFormed($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume $IsValid'vec'u64''($t5);

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: royalty::Royalty: ResourceDomain<royalty::Royalty>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: collection::FixedSupply: ResourceDomain<collection::FixedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_FixedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_FixedSupply_$memory, $a_0);
    ($IsValid'$4_collection_FixedSupply'($rsc))));

    // assume forall $rsc: collection::UnlimitedSupply: ResourceDomain<collection::UnlimitedSupply>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: token::Token: ResourceDomain<token::Token>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_Token_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_Token_$memory, $a_0);
    ($IsValid'$4_token_Token'($rsc))));

    // assume forall $rsc: base::RewardPower: ResourceDomain<base::RewardPower>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardPower'($rsc))));

    // trace_local[creator]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume {:print "$track_local(70,17,0):", $t0} $t0 == $t0;

    // trace_local[addresses]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume {:print "$track_local(70,17,1):", $t1} $t1 == $t1;

    // trace_local[collection_name]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume {:print "$track_local(70,17,2):", $t2} $t2 == $t2;

    // trace_local[token_uri]($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume {:print "$track_local(70,17,3):", $t3} $t3 == $t3;

    // trace_local[campaign_title]($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume {:print "$track_local(70,17,4):", $t4} $t4 == $t4;

    // trace_local[prices]($t5) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:224:5+1
    assume {:print "$track_local(70,17,5):", $t5} $t5 == $t5;

    // $t18 := 0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:232:17+1
    assume {:print "$at(2,6757,6758)"} true;
    $t18 := 0;
    assume $IsValid'u64'($t18);

    // trace_local[i]($t18) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:232:13+1
    assume {:print "$track_local(70,17,15):", $t18} $t18 == $t18;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume {:print "$at(2,6776,6777)"} true;
L3:

    // $t15 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume {:print "$at(2,6776,6777)"} true;
    havoc $t15;

    // assume WellFormed($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'u64'($t15);

    // $t19 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t19;

    // assume WellFormed($t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'u64'($t19);

    // $t20 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t20;

    // assume WellFormed($t20) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'bool'($t20);

    // $t21 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t21;

    // assume WellFormed($t21) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'address'($t21);

    // $t22 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t22;

    // assume WellFormed($t22) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'vec'u8''($t22);

    // $t23 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t23;

    // assume WellFormed($t23) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'$1_string_String'($t23);

    // $t24 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t24;

    // assume WellFormed($t24) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'$1_string_String'($t24);

    // $t25 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t25;

    // assume WellFormed($t25) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'u64'($t25);

    // $t26 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t26;

    // assume WellFormed($t26) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'vec'u8''($t26);

    // $t27 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t27;

    // assume WellFormed($t27) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'address'($t27);

    // $t28 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t28;

    // assume WellFormed($t28) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'$1_string_String'($t28);

    // $t29 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t29;

    // assume WellFormed($t29) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'$1_string_String'($t29);

    // $t30 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t30;

    // assume WellFormed($t30) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'$1_string_String'($t30);

    // $t31 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t31;

    // assume WellFormed($t31) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'u64'($t31);

    // $t32 := havoc[val]() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    havoc $t32;

    // assume WellFormed($t32) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume $IsValid'u64'($t32);

    // trace_local[i]($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume {:print "$info(): enter loop, variable(s) i havocked and reassigned"} true;
    assume {:print "$track_local(70,17,15):", $t15} $t15 == $t15;

    // assume Not(AbortFlag()) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:16+1
    assume !$abort_flag;

    // $t19 := vector::length<address>($t1) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:20+26
    call $t19 := $1_vector_length'address'($t1);
    if ($abort_flag) {
        assume {:print "$at(2,6780,6806)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // $t20 := <($t15, $t19) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:18+1
    call $t20 := $Lt($t15, $t19);

    // if ($t20) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:9+843
    if ($t20) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:9+843
L1:

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:234:42+10
    assume {:print "$at(2,6852,6862)"} true;
L2:

    // $t21 := vector::borrow<address>($t1, $t15) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:234:27+29
    assume {:print "$at(2,6837,6866)"} true;
    call $t21 := $1_vector_borrow'address'($t1, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,6837,6866)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // trace_local[address]($t21) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:234:17+7
    assume {:print "$track_local(70,17,14):", $t21} $t21 == $t21;

    // $t22 := [82, 101, 119, 97, 114, 100, 32, 78, 102, 116, 32, 102, 111, 114, 32, 123, 125, 32, 45, 32, 123, 125] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:235:53+25
    assume {:print "$at(2,6921,6946)"} true;
    $t22 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 101, 119, 97), MakeVec4(114, 100, 32, 78)), MakeVec4(102, 116, 32, 102)), MakeVec4(111, 114, 32, 123)), MakeVec4(125, 32, 45, 32)), MakeVec2(123, 125));
    assume $IsValid'vec'u8''($t22);

    // $t23 := string_utils::to_string<address>($t21) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:235:96+32
    call $t23 := $1_string_utils_to_string'address'($t21);
    if ($abort_flag) {
        assume {:print "$at(2,6964,6996)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // $t24 := string_utils::format2<string::String, string::String>($t22, $t4, $t23) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:235:30+99
    call $t24 := $1_string_utils_format2'$1_string_String_$1_string_String'($t22, $t4, $t23);
    if ($abort_flag) {
        assume {:print "$at(2,6898,6997)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // trace_local[token_name]($t24) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:235:17+10
    assume {:print "$track_local(70,17,17):", $t24} $t24 == $t24;

    // $t25 := vector::borrow<u64>($t5, $t15) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:236:25+26
    assume {:print "$at(2,7024,7050)"} true;
    call $t25 := $1_vector_borrow'u64'($t5, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,7024,7050)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // trace_local[price]($t25) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:236:17+5
    assume {:print "$track_local(70,17,16):", $t25} $t25 == $t25;

    // $t26 := [84, 104, 105, 115, 32, 105, 115, 32, 97, 32, 114, 101, 119, 97, 114, 100, 32, 116, 111, 107, 101, 110, 32, 102, 114, 111, 109, 32, 123, 125, 32, 116, 111, 32, 123, 125, 32, 102, 111, 114, 32, 105, 110, 118, 111, 108, 118, 101, 109, 101, 110, 116, 32, 105, 110, 32, 123, 125, 32, 112, 111, 111, 108] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:244:22+66
    assume {:print "$at(2,7254,7320)"} true;
    $t26 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(84, 104, 105, 115), MakeVec4(32, 105, 115, 32)), MakeVec4(97, 32, 114, 101)), MakeVec4(119, 97, 114, 100)), MakeVec4(32, 116, 111, 107)), MakeVec4(101, 110, 32, 102)), MakeVec4(114, 111, 109, 32)), MakeVec4(123, 125, 32, 116)), MakeVec4(111, 32, 123, 125)), MakeVec4(32, 102, 111, 114)), MakeVec4(32, 105, 110, 118)), MakeVec4(111, 108, 118, 101)), MakeVec4(109, 101, 110, 116)), MakeVec4(32, 105, 110, 32)), MakeVec4(123, 125, 32, 112)), MakeVec3(111, 111, 108));
    assume $IsValid'vec'u8''($t26);

    // $t27 := signer::address_of($t0) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:245:46+27
    assume {:print "$at(2,7368,7395)"} true;
    call $t27 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,7368,7395)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // $t28 := string_utils::to_string<address>($t27) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:245:21+53
    call $t28 := $1_string_utils_to_string'address'($t27);
    if ($abort_flag) {
        assume {:print "$at(2,7343,7396)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // $t29 := string_utils::to_string<address>($t21) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:246:21+32
    assume {:print "$at(2,7419,7451)"} true;
    call $t29 := $1_string_utils_to_string'address'($t21);
    if ($abort_flag) {
        assume {:print "$at(2,7419,7451)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // $t30 := string_utils::format3<string::String, string::String, string::String>($t26, $t28, $t29, $t4) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:243:17+298
    assume {:print "$at(2,7209,7507)"} true;
    call $t30 := $1_string_utils_format3'$1_string_String_$1_string_String_$1_string_String'($t26, $t28, $t29, $t4);
    if ($abort_flag) {
        assume {:print "$at(2,7209,7507)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // base::mint_to($t0, $t24, $t21, $t2, $t30, $t3, $t25) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:238:13+509
    assume {:print "$at(2,7067,7576)"} true;
    call $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_mint_to($t0, $t24, $t21, $t2, $t30, $t3, $t25);
    if ($abort_flag) {
        assume {:print "$at(2,7067,7576)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // $t31 := 1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:252:21+1
    assume {:print "$at(2,7599,7600)"} true;
    $t31 := 1;
    assume $IsValid'u64'($t31);

    // $t32 := +($t15, $t31) on_abort goto L6 with $t33 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:252:19+1
    call $t32 := $AddU64($t15, $t31);
    if ($abort_flag) {
        assume {:print "$at(2,7597,7598)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(70,17):", $t33} $t33 == $t33;
        goto L6;
    }

    // trace_local[i]($t32) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:252:13+1
    assume {:print "$track_local(70,17,15):", $t32} $t32 == $t32;

    // goto L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:252:22+1
    goto L4;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:9+843
    assume {:print "$at(2,6769,7612)"} true;
L0:

    // goto L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:9+843
    assume {:print "$at(2,6769,7612)"} true;
    goto L5;

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:9+843
    // Loop invariant checking block for the loop started with header: L3
L4:

    // stop() at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:233:9+843
    assume {:print "$at(2,6769,7612)"} true;
    assume false;
    return;

    // label L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:254:5+1
    assume {:print "$at(2,7618,7619)"} true;
L5:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:254:5+1
    assume {:print "$at(2,7618,7619)"} true;
    return;

    // label L6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:254:5+1
L6:

    // abort($t33) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:254:5+1
    assume {:print "$at(2,7618,7619)"} true;
    $abort_code := $t33;
    $abort_flag := true;
    return;

}

// fun base::register_protocol [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:318:5+539
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_register_protocol$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: bool;
    var $t6: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t7: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t8: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem);
    var $t9: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState;
    var $t10: int;
    var $t11: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState);
    var $t12: $Mutation (Vec (int));
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:318:5+1
    assume {:print "$at(2,9806,9807)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: base::AppState: ResourceDomain<base::AppState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:318:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($rsc))));

    // assume forall $rsc: base::ProtocolState: ResourceDomain<base::ProtocolState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:318:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState'($rsc))));

    // trace_local[protocol]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:318:5+1
    assume {:print "$track_local(70,18,0):", $t0} $t0 == $t0;

    // $t2 := signer::address_of($t0) on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:319:29+28
    assume {:print "$at(2,9909,9937)"} true;
    call $t2 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,9909,9937)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,18):", $t3} $t3 == $t3;
        goto L4;
    }

    // trace_local[protocol_addr]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:319:13+13
    assume {:print "$track_local(70,18,1):", $t2} $t2 == $t2;

    // $t4 := exists<base::ProtocolState>($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:321:14+6
    assume {:print "$at(2,9955,9961)"} true;
    $t4 := $ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t2);

    // $t5 := !($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:321:13+1
    call $t5 := $Not($t4);

    // if ($t5) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:321:9+388
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:322:21+8
    assume {:print "$at(2,10016,10024)"} true;
L1:

    // $t6 := vector::empty<base::Quest>() on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:323:29+15
    assume {:print "$at(2,10071,10086)"} true;
    call $t6 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'();
    if ($abort_flag) {
        assume {:print "$at(2,10071,10086)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,18):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t7 := vector::empty<base::Campaign>() on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:324:32+15
    assume {:print "$at(2,10120,10135)"} true;
    call $t7 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'();
    if ($abort_flag) {
        assume {:print "$at(2,10120,10135)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,18):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t8 := vector::empty<base::RewardItem>() on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:325:29+15
    assume {:print "$at(2,10166,10181)"} true;
    call $t8 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItem'();
    if ($abort_flag) {
        assume {:print "$at(2,10166,10181)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,18):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t9 := pack base::ProtocolState($t6, $t7, $t8) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:322:31+167
    assume {:print "$at(2,10026,10193)"} true;
    $t9 := $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState($t6, $t7, $t8);

    // move_to<base::ProtocolState>($t9, $t0) on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:322:13+7
    if ($ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_ProtocolState_$memory, $t0->$addr, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(2,10008,10015)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,18):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t10 := 0x9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:328:53+5
    assume {:print "$at(2,10251,10256)"} true;
    $t10 := 72038777300602173924386081059034887547389433311546243642183252999150723751218;
    assume $IsValid'address'($t10);

    // $t11 := borrow_global<base::AppState>($t10) on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:328:25+17
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(2,10223,10240)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,18):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t12 := borrow_field<base::AppState>.protocols($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:329:27+24
    assume {:print "$at(2,10286,10310)"} true;
    $t12 := $ChildMutation($t11, 2, $Dereference($t11)->$protocols);

    // vector::push_back<address>($t12, $t2) on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:329:9+58
    call $t12 := $1_vector_push_back'address'($t12, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,10268,10326)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,18):", $t3} $t3 == $t3;
        goto L4;
    }

    // write_back[Reference($t11).protocols (vector<address>)]($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:329:9+58
    $t11 := $UpdateMutation($t11, $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'_protocols($Dereference($t11), $Dereference($t12)));

    // write_back[base::AppState@]($t11) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:329:9+58
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // goto L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:321:9+388
    assume {:print "$at(2,9950,10338)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:321:9+388
L0:

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:321:9+388
    assume {:print "$at(2,9950,10338)"} true;
L2:

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:331:5+1
    assume {:print "$at(2,10344,10345)"} true;
L3:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:331:5+1
    assume {:print "$at(2,10344,10345)"} true;
    return;

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:331:5+1
L4:

    // abort($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:331:5+1
    assume {:print "$at(2,10344,10345)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun base::register_user [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:301:5+602
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_register_user$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: bool;
    var $t6: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t7: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest);
    var $t8: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t9: Vec ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign);
    var $t10: $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState;
    var $t11: int;
    var $t12: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState);
    var $t13: $Mutation (Vec (int));
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:301:5+1
    assume {:print "$at(2,9196,9197)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: base::AppState: ResourceDomain<base::AppState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'($rsc))));

    // assume forall $rsc: base::UserState: ResourceDomain<base::UserState>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState'($rsc))));

    // trace_local[user]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:301:5+1
    assume {:print "$track_local(70,19,0):", $t0} $t0 == $t0;

    // $t2 := signer::address_of($t0) on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:302:25+24
    assume {:print "$at(2,9287,9311)"} true;
    call $t2 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,9287,9311)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,19):", $t3} $t3 == $t3;
        goto L4;
    }

    // trace_local[user_addr]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:302:13+9
    assume {:print "$track_local(70,19,1):", $t2} $t2 == $t2;

    // $t4 := exists<base::UserState>($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:304:14+6
    assume {:print "$at(2,9329,9335)"} true;
    $t4 := $ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $t2);

    // $t5 := !($t4) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:304:13+1
    call $t5 := $Not($t4);

    // if ($t5) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:304:9+465
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:305:24+4
    assume {:print "$at(2,9385,9389)"} true;
L1:

    // $t6 := vector::empty<base::Quest>() on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:306:39+15
    assume {:print "$at(2,9442,9457)"} true;
    call $t6 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'();
    if ($abort_flag) {
        assume {:print "$at(2,9442,9457)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,19):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t7 := vector::empty<base::Quest>() on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:307:37+15
    assume {:print "$at(2,9496,9511)"} true;
    call $t7 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Quest'();
    if ($abort_flag) {
        assume {:print "$at(2,9496,9511)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,19):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t8 := vector::empty<base::Campaign>() on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:308:40+15
    assume {:print "$at(2,9553,9568)"} true;
    call $t8 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'();
    if ($abort_flag) {
        assume {:print "$at(2,9553,9568)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,19):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t9 := vector::empty<base::Campaign>() on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:309:41+15
    assume {:print "$at(2,9611,9626)"} true;
    call $t9 := $1_vector_empty'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_Campaign'();
    if ($abort_flag) {
        assume {:print "$at(2,9611,9626)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,19):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t10 := pack base::UserState($t6, $t7, $t8, $t9) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:305:30+253
    assume {:print "$at(2,9391,9644)"} true;
    $t10 := $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState($t6, $t7, $t8, $t9);

    // move_to<base::UserState>($t10, $t0) on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:305:16+7
    if ($ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_UserState_$memory, $t0->$addr, $t10);
    }
    if ($abort_flag) {
        assume {:print "$at(2,9377,9384)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,19):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t11 := 0x9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:312:57+5
    assume {:print "$at(2,9706,9711)"} true;
    $t11 := 72038777300602173924386081059034887547389433311546243642183252999150723751218;
    assume $IsValid'address'($t11);

    // $t12 := borrow_global<base::AppState>($t11) on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:312:29+17
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $Mutation($Global($t11), EmptyVec(), $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $t11));
    }
    if ($abort_flag) {
        assume {:print "$at(2,9678,9695)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,19):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t13 := borrow_field<base::AppState>.users($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:313:31+20
    assume {:print "$at(2,9745,9765)"} true;
    $t13 := $ChildMutation($t12, 0, $Dereference($t12)->$users);

    // vector::push_back<address>($t13, $t2) on_abort goto L4 with $t3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:313:13+50
    call $t13 := $1_vector_push_back'address'($t13, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,9727,9777)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(70,19):", $t3} $t3 == $t3;
        goto L4;
    }

    // write_back[Reference($t12).users (vector<address>)]($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:313:13+50
    $t12 := $UpdateMutation($t12, $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState'_users($Dereference($t12), $Dereference($t13)));

    // write_back[base::AppState@]($t12) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:313:13+50
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_AppState_$memory, $GlobalLocationAddress($t12),
        $Dereference($t12));

    // goto L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:304:9+465
    assume {:print "$at(2,9324,9789)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:304:9+465
L0:

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:304:9+465
    assume {:print "$at(2,9324,9789)"} true;
L2:

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:316:5+1
    assume {:print "$at(2,9797,9798)"} true;
L3:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:316:5+1
    assume {:print "$at(2,9797,9798)"} true;
    return;

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:316:5+1
L4:

    // abort($t3) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:316:5+1
    assume {:print "$at(2,9797,9798)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun base::scratchRewardItem [verification] at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:521:5+747
procedure {:timeLimit 40} $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_scratchRewardItem$verify(_$t0: $1_object_Object'$4_token_Token', _$t1: $signer, _$t2: $1_object_Object'$4_token_Token') returns ()
{
    // declare local variables
    var $t3: $Mutation (bool);
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower);
    var $t16: $Mutation (bool);
    var $t17: bool;
    var $t0: $1_object_Object'$4_token_Token';
    var $t1: $signer;
    var $t2: $1_object_Object'$4_token_Token';
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:521:5+1
    assume {:print "$at(2,18036,18037)"} true;
    assume $IsValid'$1_object_Object'$4_token_Token''($t0);

    // assume WellFormed($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:521:5+1
    assume $IsValid'signer'($t1) && $1_signer_is_txn_signer($t1) && $1_signer_is_txn_signer_addr($t1->$addr);

    // assume WellFormed($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:521:5+1
    assume $IsValid'$1_object_Object'$4_token_Token''($t2);

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:521:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: base::RewardItemPower: ResourceDomain<base::RewardItemPower>(): WellFormed($rsc) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:521:5+1
    assume (forall $a_0: int :: {$ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $a_0)}(var $rsc := $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $a_0);
    ($IsValid'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'($rsc))));

    // trace_local[token_obj]($t0) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:521:5+1
    assume {:print "$track_local(70,20,0):", $t0} $t0 == $t0;

    // trace_local[account]($t1) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:521:5+1
    assume {:print "$track_local(70,20,1):", $t1} $t1 == $t1;

    // trace_local[token]($t2) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:521:5+1
    assume {:print "$track_local(70,20,2):", $t2} $t2 == $t2;

    // $t5 := signer::address_of($t1) on_abort goto L7 with $t6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:523:45+27
    assume {:print "$at(2,18271,18298)"} true;
    call $t5 := $1_signer_address_of($t1);
    if ($abort_flag) {
        assume {:print "$at(2,18271,18298)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(70,20):", $t6} $t6 == $t6;
        goto L7;
    }

    // $t7 := object::is_owner<token::Token>($t0, $t5) on_abort goto L7 with $t6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:523:17+56
    call $t7 := $1_object_is_owner'$4_token_Token'($t0, $t5);
    if ($abort_flag) {
        assume {:print "$at(2,18243,18299)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(70,20):", $t6} $t6 == $t6;
        goto L7;
    }

    // if ($t7) goto L1 else goto L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:523:9+109
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:523:9+109
L1:

    // goto L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:523:9+109
    assume {:print "$at(2,18235,18344)"} true;
    goto L2;

    // label L0 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:523:100+16
L0:

    // $t8 := 1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:523:100+16
    assume {:print "$at(2,18326,18342)"} true;
    $t8 := 1;
    assume $IsValid'u64'($t8);

    // $t9 := error::permission_denied($t8) on_abort goto L7 with $t6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:523:75+42
    call $t9 := $1_error_permission_denied($t8);
    if ($abort_flag) {
        assume {:print "$at(2,18301,18343)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(70,20):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t9) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:523:9+109
    assume {:print "$at(2,18235,18344)"} true;
    assume {:print "$track_abort(70,20):", $t9} $t9 == $t9;

    // $t6 := move($t9) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:523:9+109
    $t6 := $t9;

    // goto L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:523:9+109
    goto L7;

    // label L2 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:525:52+10
    assume {:print "$at(2,18400,18410)"} true;
L2:

    // $t10 := object::object_address<token::Token>($t0) on_abort goto L7 with $t6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:525:29+34
    assume {:print "$at(2,18377,18411)"} true;
    call $t10 := $1_object_object_address'$4_token_Token'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,18377,18411)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(70,20):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[token_address]($t10) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:525:13+13
    assume {:print "$track_local(70,20,4):", $t10} $t10 == $t10;

    // $t11 := object::is_owner<token::Token>($t2, $t10) on_abort goto L7 with $t6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:526:17+38
    assume {:print "$at(2,18430,18468)"} true;
    call $t11 := $1_object_is_owner'$4_token_Token'($t2, $t10);
    if ($abort_flag) {
        assume {:print "$at(2,18430,18468)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(70,20):", $t6} $t6 == $t6;
        goto L7;
    }

    // if ($t11) goto L4 else goto L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:526:9+91
    if ($t11) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:526:9+91
L4:

    // goto L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:526:9+91
    assume {:print "$at(2,18422,18513)"} true;
    goto L5;

    // label L3 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:526:82+16
L3:

    // $t12 := 1 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:526:82+16
    assume {:print "$at(2,18495,18511)"} true;
    $t12 := 1;
    assume $IsValid'u64'($t12);

    // $t13 := error::permission_denied($t12) on_abort goto L7 with $t6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:526:57+42
    call $t13 := $1_error_permission_denied($t12);
    if ($abort_flag) {
        assume {:print "$at(2,18470,18512)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(70,20):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:526:9+91
    assume {:print "$at(2,18422,18513)"} true;
    assume {:print "$track_abort(70,20):", $t13} $t13 == $t13;

    // $t6 := move($t13) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:526:9+91
    $t6 := $t13;

    // goto L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:526:9+91
    goto L7;

    // label L5 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:528:63+6
    assume {:print "$at(2,18580,18586)"} true;
L5:

    // $t14 := object::object_address<token::Token>($t2) on_abort goto L7 with $t6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:528:40+30
    assume {:print "$at(2,18557,18587)"} true;
    call $t14 := $1_object_object_address'$4_token_Token'($t2);
    if ($abort_flag) {
        assume {:print "$at(2,18557,18587)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(70,20):", $t6} $t6 == $t6;
        goto L7;
    }

    // $t15 := borrow_global<base::RewardItemPower>($t14) on_abort goto L7 with $t6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:530:35+17
    assume {:print "$at(2,18626,18643)"} true;
    if (!$ResourceExists($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $t14)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $Mutation($Global($t14), EmptyVec(), $ResourceValue($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $t14));
    }
    if ($abort_flag) {
        assume {:print "$at(2,18626,18643)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(70,20):", $t6} $t6 == $t6;
        goto L7;
    }

    // $t16 := borrow_field<base::RewardItemPower>.scratched($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:531:25+34
    assume {:print "$at(2,18713,18747)"} true;
    $t16 := $ChildMutation($t15, 1, $Dereference($t15)->$scratched);

    // trace_local[scratched]($t16) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:531:13+9
    $temp_0'bool' := $Dereference($t16);
    assume {:print "$track_local(70,20,3):", $temp_0'bool'} $temp_0'bool' == $temp_0'bool';

    // $t17 := true at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:532:22+4
    assume {:print "$at(2,18771,18775)"} true;
    $t17 := true;
    assume $IsValid'bool'($t17);

    // write_ref($t16, $t17) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:532:9+17
    $t16 := $UpdateMutation($t16, $t17);

    // write_back[Reference($t15).scratched (bool)]($t16) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:532:9+17
    $t15 := $UpdateMutation($t15, $Update'$9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower'_scratched($Dereference($t15), $Dereference($t16)));

    // write_back[base::RewardItemPower@]($t15) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:532:9+17
    $9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory := $ResourceUpdate($9f4480c683923687945f2abe555c52226483baa3ea21676dd2e307cc74195d32_base_RewardItemPower_$memory, $GlobalLocationAddress($t15),
        $Dereference($t15));

    // label L6 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:533:5+1
    assume {:print "$at(2,18782,18783)"} true;
L6:

    // return () at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:533:5+1
    assume {:print "$at(2,18782,18783)"} true;
    return;

    // label L7 at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:533:5+1
L7:

    // abort($t6) at C:\Users\HP 1030 G2\Hackaton\Amfi\sources\base.move:533:5+1
    assume {:print "$at(2,18782,18783)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}
